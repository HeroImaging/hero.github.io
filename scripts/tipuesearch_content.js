var tipuesearch = {"pages": [
{"title": "Home", "text": "Welcome to Hero! Hero is a user-friendly graphical programming interface that provides advanced tools for complex image processing and analysis. It simplifies the work process and saves time by generating results suited to the user's particular needs, be it further analysis or formal presentation of research. Hero is designed for professionals in various medical areas such as radiotherapy, radiology, and pathology. It aims to make advanced and complex image processing and analysis available to all professionals. Downloading The latest stable release of Hero is version 2025.1.0. You can download it from the link below: Download Stable v. 2025.2.0 Installing Install the software by running the downloaded .exe file. The installation requires approximately 3 GB of free space. License To run the software, you'll need a license. If you don't have one, you can register for a trial license HERE. If you need access to all features, you'll need a premium license. You can order one HERE. When you run the software, the license will be verified against a license server. An internet connection is required to validate the license, so make sure that your institution's firewall does not block this connection. Virtual Machines If you need to use Hero on a virtual machine, please contact us. Hardware Requirements OS Hero can be installed and run on Windows 10 or Windows 11. CPU Hero uses multiple threads for most of the processing, fast multi core CPU is preferred. Memory Image analysis is memory intensive! We recommend at least 8GB of RAM for most applications. Graphics Hero uses VTK to visualize images.Please read the following statement taken from the VTK/FAQ before deciding on a graphics card: Modern graphics cards that supports OpenGL 2.1 or better typically provide all the functionality that VTK needs. However, there is good deal of variability in results across OS platform and vendor's OpenGL implementation. NVidia cards and drivers work the best. Intel HD integrated graphics and ATI Radeon HD devices and drivers are known to have a few issues. Mesa3D OpenGL although claiming support for a wide range of devices is highly unstable and the overall buggy-ness of their implementation changes daily and by renderer. Mesa's llvmpipe drivers are expected to generally work well. Our experience tells us that NVidia cards are the most compatible. Disk Space The installation requires approximately 2 GB of free space. ", "tags": "", "url": "home.html"},
{"title": "Create Constant Image", "text": "Create Image Create a Hero Image with a constan value, or from an input numeric array. Outputs Output Output Image. Type: Image Settings Configure Method Selection Select whether the output image should have a constant value or be derived from an input numeric array. Values: Constant, From Array Value Float Constant value. Shape Integers Image shape. DataType Selection Image data type. Values: Float64, Float32, Integer64, Integer32, Complex64x2, Complex32x2 Name Text Image Name. Value Unit Text Voxel value unit. Geometry Selection Select whether the Image geometry is defined manually, or from an input referece image or mask. Values: Manual, From Reference Geometry Position Numbers Image Position. Voxel Size Numbers Image Voxel Size. Orientation Rotation Axis Numbers Image Orientation Rotation Axis. This is an axis of rotation, and does not have to be normalized. Orientation Rotation Angle [Degrees] Float Rotation angle in degrees. See also Keywords: ", "tags": "", "url": "nodes.image.createimport.create_constant_image.html"},
{"title": "Create Image From Array", "text": "Create Image Create a Hero Image with a constan value, or from an input numeric array. Outputs Output Output Image. Type: Image Settings Configure Method Selection Select whether the output image should have a constant value or be derived from an input numeric array. Values: Constant, From Array Value Float Constant value. Shape Integers Image shape. DataType Selection Image data type. Values: Float64, Float32, Integer64, Integer32, Complex64x2, Complex32x2 Name Text Image Name. Value Unit Text Voxel value unit. Geometry Selection Select whether the Image geometry is defined manually, or from an input referece image or mask. Values: Manual, From Reference Geometry Position Numbers Image Position. Voxel Size Numbers Image Voxel Size. Orientation Rotation Axis Numbers Image Orientation Rotation Axis. This is an axis of rotation, and does not have to be normalized. Orientation Rotation Angle [Degrees] Float Rotation angle in degrees. See also Keywords: ", "tags": "", "url": "nodes.image.createimport.create_image_from_array.html"},
{"title": "Create Mesh Grid", "text": "Create Mesh Grid Generates a 4D output image with three frames in channel 0, where the value of each voxel is its index or position in the input image. This can be useful for mathematical operations involving the voxel index or position. Inputs Input Input image or mask. Type: Image, Mask, Required, Single Outputs Output Resulting mesh grid. Type: Image Settings Mesh Selection Choose if the mesh should represent position or index. Values: Position, Index See also Keywords: ", "tags": "", "url": "nodes.image.createimport.create_mesh_grid.html"},
{"title": "Create Grid Image", "text": "Grid Image Create a grid. This is useful for evaluating deformable registrations. Inputs Input Input Image or mask. This is used as reference for the output grid. Type: Mask, Image, List, Required, Single Outputs Output Output grid. Type: Image Settings Grid Sigma Float The sigma of the kernel that smoothes the grid. The smoothing helps with aliasing, where the grid spacing and the voxel size do not match. Grid Value Float Value of space between the grid lines. Grid Spacing 3D Vector Spacing between grid lines. Grid Offset 3D Vector Grid offset from the origin. See also Keywords: ", "tags": "", "url": "nodes.image.createimport.create_grid_image.html"},
{"title": "Load Hero Data", "text": "Load Hero Data Load Hero Data from disk. Outputs Output The loaded Hero Data. Type: Numeric Array Settings File Filepath Path to the Hero Data file. The path can be both absolute and relative. Data Type Selection The type of the data. Values: Numeric Array, Text, Boolean Array, Image, Mask, Structure, Table, Column, Contour, Text List, Image List, Mask List, Structure List, List of Lists, Table List, Column List, Numeric Array List, Boolean Array List, Contour List See also Keywords: ", "tags": "", "url": "nodes.image.createimport.load_hero_data.html"},
{"title": "Import Bitmap (.jpg, .png, ...)", "text": "Import Bitmap Import a bitmap or raster image. Color channels will be stored in channel 0. Supported file types are: .bmp, .gif, .exif, .jpg/jpeg, .png, and .tif/tiff. Outputs Image Output Image. Type: Image Settings Configure Path Filepath Path to file. The path can be both absolute and relative. Value Range Value Range Selection Normalize values to [0, 1] or [0, 255]. Values: [0, 1], [0, 255] See also Keywords: ", "tags": "", "url": "nodes.image.createimport.import_bitmap_(.jpg,_.png,_...).html"},
{"title": "Import DICOM Folder", "text": "Import DICOM Folder Import multiple DICOM series from a DICOM folder. Image series will be added to the output Image list, RTSTRUCTs will be added to the Contours list and non-image DICOM files such as REG, RTPLAN and RTRECORD will be added to the Structures list. Outputs Images Output list of Images. Type: Image List Contours Output List of Contours. Type: Contour List Structures Output List of Structures. Type: Struct List Settings Configure Path Path Path to folder. The path can be both absolute and relative. Include Private Tags Boolean Include private tags in the output. This can slow down the import, but might contain information that is needed. Include Subfolders Boolean Import option: subfolder content or just files in selected folder. Outputs Return Images Boolean Return images. Return Contours Boolean Return Contours. Return Structures Boolean Return Structures. See also Keywords: ", "tags": "", "url": "nodes.image.createimport.import_dicom_folder.html"},
{"title": "Import DICOM File", "text": "Import DICOM File This node allows you to import a single DICOM file or the entire series to which the file belongs. Depending on your workflow, you can choose to import the DICOM as an Image, a Contour List, or a Struct. Single File: The node imports only the selected DICOM file based on the chosen output type. Import Series: The node scans the folder containing the selected file to find all files in the same DICOM series. It then imports the entire series, creating either a 3D/4D image (for Image output type) or a list of structs (for Struct output type). Output types determine how the data is processed: Image imports the file (or series) as an image, provided the DICOM modality can be represented as such (e.g., CT, MRI). Contour List imports the file as a list of contours, derived from a DICOM structure set. Struct imports the raw DICOM data without interpreting it as a specific type. For a series, this results in a list of structs — one per DICOM file. This node offers flexibility for handling diverse DICOM modalities, whether you're working with images, structures, or raw data. Outputs Output Output. Type: Image, Contour List, Struct Settings File Filepath Path to File. The path can be both absolute and relative. Include Private Tags Boolean Inlude private tags. Import Series Boolean Import DICOM Series or DICOM File. Output Type Selection Set Output type. Values: Image, Contour List, Structure See also Keywords: ", "tags": "", "url": "nodes.image.createimport.import_dicom_file.html"},
{"title": "Import NIfTI", "text": "Import NIfTI Import a NIfTI file from disk. Outputs Image Output Image. Type: Image Settings Path Filepath Path to file. The path can be both absolute and relative. See also Keywords: ", "tags": "", "url": "nodes.image.createimport.import_nifti.html"},
{"title": "Import Nrrd", "text": "Import Nrrd Import an Nrrd file from disk. Outputs Image Output Image. Type: Image Settings Path Filepath Path to file. The path can be both absolute and relative. See also Keywords: ", "tags": "", "url": "nodes.image.createimport.import_nrrd.html"},
{"title": "Import MetaIO (.mhd, .mha)", "text": "Import MetaIO Import .mhd or .mha files. Outputs Image Output Image. Type: Image Settings Path Filepath Path to file. The path can be both absolute and relative. See also Keywords: ", "tags": "", "url": "nodes.image.createimport.import_metaio_(.mhd,_.mha).html"},
{"title": "Import OME-TIFF", "text": "Import OME-TIFF Import OME-TIFF file. Outputs Image Output Image. Type: Image Settings Path Filepath Path to file. The path can be both absolute and relative. See also Keywords: ", "tags": "", "url": "nodes.image.createimport.import_ome-tiff.html"},
{"title": "Import Virtual Slide", "text": "Import Virtual Slide Import a digital pathology file, or virtual slide. Outputs Image Image containing a virtual slide. Type: Image Settings Path Filepath Filepath to the virtual slide. The path can be both absolute and relative. Zoom Level Integer Specify which zoom level the slide should be imported with. 0 is full resolution, 1 is downsampled double pixel size etc. Subregion Point 1 Numbers Specify the top left corner of the sub-region to import, specified in mm from the top left corner of the image. Subregion Point 2 Numbers Specify the bottom right corner of the sub-region to import, specified in mm from the top left corner of the image. See also Keywords: ", "tags": "", "url": "nodes.image.createimport.import_virtual_slide.html"},
{"title": "Import ORA", "text": "Import ORA Import an ORA file. Outputs Image Output Image. Type: Image Settings Path Filepath Path to file. The path can be both absolute and relative. See also Keywords: ", "tags": "", "url": "nodes.image.createimport.import_ora.html"},
{"title": "Has Property", "text": "Has Property Check if property exists. Inputs Input Input. Type: Any, List, Required, Single Outputs Output Output True/False. Type: Boolean Array Settings Property Text Property Path. See also Keywords: ", "tags": "", "url": "nodes.image.getset_property.has_property.html"},
{"title": "Get Property", "text": "Get Property Get property from input. Inputs Input Input new property value. Type: Any, List, Required, Single Outputs Output Output. Type: Numeric Array Settings Property Text Property path. For example, if the input is a single Image the path to the Sex property is Subject.Sex. The paths can be found in the Properties viewer by right-clicking on the property and choosing Copy Property Path. Property Type Selection Property type. Values: Boolean Array, Boolean Array List, Column, Column List, Contour, Contour List, Image, Image List, List of Lists, Mask, Mask List, Numeric Array, Numeric Array List, Structure, Structure List, Table, Table List, Text, Text List See also Keywords: ", "tags": "", "url": "nodes.image.getset_property.get_property.html"},
{"title": "Edit Property", "text": "Edit Property Modify a property of an input. Only Text, Numeric arrays, and Boolean arrays are editable. The Edit Property node enables users to set the property as a setting within the node, while the Set Property node accepts the property value as an input. The Edit Property node cannot alter the property type, but the Set Property node is able to do so. Inputs Input Input of any type. Type: Any, Required, Single Outputs Output Output of the same type as the input. Type: Numeric Array Settings Value Text Set the new property value. Property Text Property path. For example, if the input is a single Image the path to the Sex property is Subject.Sex. The paths can be found in the Properties viewer by right-clicking on the property and choosing Copy Property Path. See also Keywords: ", "tags": "", "url": "nodes.image.getset_property.edit_property.html"},
{"title": "Set Property", "text": "Set Property Set a specific property to a value supplied as an input. This operation allows changing the property value type, e.g. from a Numeric Array to a Text List. The property has to exist in the input data. If it does not exist, use the Insert Property node. Inputs Input Input. Type: Any, List, Required, Single New Value New property value. Type: Any, Required, Single Outputs Output Input data with the changed property. Type: Any, List Settings Property Text Property path. For example, if the input is a single Image the path to the Sex property is Subject.Sex. The paths can be found in the Properties viewer by right-clicking on the property and choosing Copy Property Path. Broadcast Input Boolean Broadcast input to property list elements. If set to True and the property is a list, the input will be assigned to each element of the property list. If set to False and the property and input are lists of equal length, the i:th element of the input list is assigned to the i:th element of the property list. See also Keywords: ", "tags": "", "url": "nodes.image.getset_property.set_property.html"},
{"title": "Insert Property", "text": "Insert Property Insert a Hero Data item at a specific location in input. Inputs Input Input Type: Any, List, Required, Single New Value New value. Type: Any, List, Required, Single Outputs Output Output. Type: Any Settings Property Text Property path. For example, if the input is a single Image the path to the Sex property is Subject.Sex. The paths can be found in the Properties viewer by right-clicking on the property and choosing Copy Property Path. Values: Boolean Array, Boolean Array List, Column, Column List, Contour, Contour List, Image, Image List, List of Lists, Mask, Mask List, Numeric Array, Numeric Array List, Structure, Structure List, Table, Table List, Text, Text List Broadcast Property Boolean Set many values in a list to the same value. See also Keywords: ", "tags": "", "url": "nodes.image.getset_property.insert_property.html"},
{"title": "Remove Property", "text": "Remove Property Remove a Hero Data item at a specific location in input data. Inputs Input Input Type: Any, List, Required, Single Outputs Output Output Type: Numeric Array Settings Property Text Property Path. See also Keywords: ", "tags": "", "url": "nodes.image.getset_property.remove_property.html"},
{"title": "Copy Properties", "text": "Copy Properties Copy properties from a reference image or mask. There are three categories of properties: Geometric settings Metadata Other Data Geometric properties inlcude position, voxel size and orientation. Metadata include subject information, scan information and the metadata structure. Other data include channel descriptions and value unit. Inputs Input Input or target image or mask. This is the object you want to copy the information to. Type: Image, Mask, Required, Single Reference Reference image or mask. This is the object you want to copy the information from. Type: Image, Mask, Required, Single Outputs Output Output result. Type: Image, Mask Settings Geometry Copy Position Boolean Copy position from reference. Copy Voxel Size Boolean Copy voxel size from reference. Copy Orientation Boolean Copy orientation from reference. MetaData Copy Subject Info Boolean Copy subject info from reference. The subject info contains ID, Name, Birthdate, Weight and Sex. Copy Scan Info Boolean Copy Scan information from the reference. The scan information contains Date, Frame of ReferenceIOD and patient positioning. Copy MetaData Boolean Copy Metadata tags from the reference. Data Copy Channel Descriptions Boolean Copy channel descriptions from the reference. Copy Value Unit Boolean Copy value units from the reference. See also Keywords: ", "tags": "", "url": "nodes.image.getset_property.copy_properties.html"},
{"title": "Rename", "text": "Rename Rename input data. You can supply a new name, or add a prefix and/or suffix to existing name. You can add a counter to the name with the {n} syntax , which is useful if you want to rename a list of inputs. Example: &ldquo;New Name {n}&rdquo; will give the first new name as &ldquo;New Name 1&rdquo; if the counter starts at 1. Inputs Input Input. Type: Image List, Mask List, Contour List, Table List, Column List, Required, Single Outputs Output Output. Type: Image Settings Method Selection Select renaming method: new name or add prefix/suffix to existing name. Values: Rename, Prefix/Suffix Prefix Text Prefix. Suffix Text Suffix. Separator Text Separator between the original name and the prefix/suffix. New Name Text Set new name. Counter {n} Starts At: Integer Counter starting value. See also Keywords: ", "tags": "", "url": "nodes.image.getset_property.rename.html"},
{"title": "Get Center", "text": "Get Center Get the position, index and continuous index of the center voxel of an input image or mask. For dimensions with an odd matrix size, the center voxel is unambiguous and the index and the continuous index are identical. For even matrix sizes, the index is rounded down to the lower value, and the index and continuous index will differ by 0.5. Inputs Input Input image or mask. Type: Mask, Image, List, Required, Single Outputs Position Center coordinate of input in [mm]. Type: Numeric Array Index Voxel index of center position. This is an integer value. Type: Numeric Array Continuous Index Continuous voxel index of the center position. This is a decimal value. Type: Numeric Array See also Keywords: ", "tags": "", "url": "nodes.image.getset_property.get_center.html"},
{"title": "Get Center of Mass", "text": "Get Center of Mass Get center of mass of an input image. The center of mass is the center coordinates of the image weighted by the image intensity distribution. It is analogous to the center of mass of a physical object, but here the mass is represented by the voxel values. Inputs Input Input image. Type: Mask, Image, List, Required, Single Outputs Position Center of mass coordinates [mm]. Type: Numeric Array Index Center of mass voxel index. Type: Numeric Array Continuous Index Center of mass continuous voxel index. Type: Numeric Array See also Keywords: ", "tags": "", "url": "nodes.image.getset_property.get_center_of_mass.html"},
{"title": "Get Frame of Reference", "text": "Get Frame of Reference Returns a structure that describes the frame of reference of an input. The structure contains the position, orientation, spatial matrix size, voxel size and FrameOfReferenceUID string. Inputs Input Input image or mask. Type: Mask, Image, List, Required, Single Outputs Output Output Frame of Reference. Type: Struct See also Keywords: ", "tags": "", "url": "nodes.image.getset_property.get_frame_of_reference.html"},
{"title": "Get Voxel Info", "text": "Get Voxel Info Gets information about a specified voxel from input Image(s) or Mask(s). Inputs Input Input Image or Mask. Type: Image, Mask, List, Required, Single Outputs Index Index of the selected voxel. Type: Numeric Array, List Position Position of the selected voxel. Type: Numeric Array, List Seed Output the selected voxel as a seedpoint in a Mask. Type: Mask Settings Index Integers Index of the selected voxel as [i, j, k]. See also Keywords: ", "tags": "", "url": "nodes.image.getset_property.get_voxel_info.html"},
{"title": "Get Voxel Value", "text": "Get Voxel Value Gets the value of a specified voxel from input Image(s) or Mask(s). Inputs Input Input Image(s) or Mask(s). Type: Image, Mask, List, Required, Single Outputs Value Output value. Type: Numeric Array, Boolean Array, List Settings Index Integers Index of the selected voxel as [i, j, k]. See also Keywords: ", "tags": "", "url": "nodes.image.getset_property.get_voxel_value.html"},
{"title": "Image Repeater", "text": "Repeater Copies input connection to output. Settings Repeater Description Text The title of the repeater. If used as an input for a group, set value to brief description of expected input type. Sparse Connections Boolean A sparse connection removes the wire between the repeater output and connected nodes, and replaces them with a label displaying the repeater description. This is very useful when you have a large workflow wih many wires. Change Image/Data Name Set New Image/Data Name Boolean Should the image/data get a new name, only applies to Image4D and DataCollection. Misc IOType Text Missing description. See also Keywords: ", "tags": "", "url": "nodes.image.repeaters.image_repeater.html"},
{"title": "Image List Repeater", "text": "Repeater Copies input connection to output. Settings Repeater Description Text The title of the repeater. If used as an input for a group, set value to brief description of expected input type. Sparse Connections Boolean A sparse connection removes the wire between the repeater output and connected nodes, and replaces them with a label displaying the repeater description. This is very useful when you have a large workflow wih many wires. Change Image/Data Name Set New Image/Data Name Boolean Should the image/data get a new name, only applies to Image4D and DataCollection. Misc IOType Text Missing description. See also Keywords: ", "tags": "", "url": "nodes.image.repeaters.image_list_repeater.html"},
{"title": "Add", "text": "Add Add two inputs with broadcasting. You can add any two supported inputs of the same type, and numbers can be added to all types. Inputs Upper First input. Type: Column, Image, Numeric Array, List, Required, Single Lower Second input. Type: Column, Image, Numeric Array, List, Optional, Single Outputs Output Resulting sum. The output type is determined by the input types. If one input is an Image or a Column, the output will be an Image or a Column, respectively. If both inputs are Numbers type, the output will be a Numeric Array type. Type: Column, Image, Numeric Array, List Settings Add Value Array Value to add if lower input is not connected. Value Type Selection Specify value type of Value. Values: Integer32, Integer64, Float32, Float64, Complex64, Complex128 Image Settings Metadata Source Selection Select the source for the output metadata. This is only applicable if the output is an image. Values: Upper, Lower Column Settings Column Name Text Set the name of the output column. Broadcast Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Image and Numeric Array. Values: Align Leading Dimensions, Align Trailing Dimensions See also Keywords: ", "tags": "", "url": "nodes.image.mathematics.add.html"},
{"title": "Subtract", "text": "Subtract Subtract two inputs with broadcasting. You can subtract any two supported inputs of the same type, and numbers can be subtracted from all types. Inputs Upper First input. Type: Column, Image, Numeric Array, List, Required, Single Lower Second input. Type: Column, Image, Numeric Array, List, Optional, Single Outputs Output Resulting subtraction. The output type is determined by the input types. If one input is an Image or a Column, the output will be an Image or a Column, respectively. If both inputs are Numbers type, the output will be a Numeric Array type. Type: Column, Image, Numeric Array, List Settings Subtract Value Array Value to subtract if lower input is not connected. Value Type Selection Specify value type of Value. Values: Integer32, Integer64, Float32, Float64, Complex64, Complex128 Image Settings Metadata Source Selection Select the source for the output metadata. This is only applicable if the output is an image. Values: Upper, Lower Column Settings Column Name Text Set the name of the output column. Broadcast Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Image and Numeric Array. Values: Align Leading Dimensions, Align Trailing Dimensions See also Keywords: ", "tags": "", "url": "nodes.image.mathematics.subtract.html"},
{"title": "Multiply", "text": "Multiply Multiply two inputs with broadcasting. You can multiply any two supported inputs of the same type, and numbers can be multiplied with all types. Inputs Upper First input. Type: Column, Image, Numeric Array, List, Required, Single Lower Second input. Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Resulting product. The output type is determined by the input types. If one input is an Image or a Column, the output will be an Image or a Column, respectively. If both inputs are Numbers type, the output will be a Numeric Array type. Type: Column, Image, Numeric Array, List Settings Multiply Value Array Value to multiply with if lower input is not connected. Value Type Selection Specify value type of Value. Values: Integer32, Integer64, Float32, Float64, Complex64, Complex128 Image Settings Metadata Source Selection Select the source for the output metadata. This is only applicable if the output is an image. Values: Upper, Lower Column Settings Column Name Text Set the name of the output column. Broadcast Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Image and Numeric Array. Values: Align Leading Dimensions, Align Trailing Dimensions See also Keywords: ", "tags": "", "url": "nodes.image.mathematics.multiply.html"},
{"title": "Divide", "text": "Divide Divide two inputs with broadcasting. You can divide any two supported inputs of the same type, and numbers can be the divisor or divedend with all types. Inputs Upper Dividend input. Type: Column, Image, Numeric Array, List, Required, Single Lower Divisor input. Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Resulting quotient. The output type is determined by the input types. If one input is an Image or a Column, the output will be an Image or a Column, respectively. If both inputs are Numbers type, the output will be a Numeric Array type. Type: Column, Image, Numeric Array, List Settings Divide Value Array Value to divide with if lower input is not connected. Value Type Selection Specify value type of Value. Values: Integer32, Integer64, Float32, Float64, Complex64, Complex128 Image Settings Metadata Source Selection Select the source for the output metadata. This is only applicable if the output is an image. Values: Upper, Lower Column Settings Column Name Text Set the name of the output column. Broadcast Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Image and Numeric Array. Values: Align Leading Dimensions, Align Trailing Dimensions See also Keywords: ", "tags": "", "url": "nodes.image.mathematics.divide.html"},
{"title": "From Real/Imaginary", "text": "Create Complex Create complex number from real and imaginary part Inputs Real Missing description. Type: Column, Image, Numeric Array, List, Required, Single Imag Missing description. Type: Column, Image, Numeric Array, List, Required, Single Outputs Complex Missing description. Type: Image Settings Image Settings Metadata Source Selection Select the source for the output metadata. This is only applicable if the output is an image. Values: Real, Imag Column Settings Column Name Text Set new column name. Broadcast Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Image and Numeric Array. Values: Align Leading Dimensions, Align Trailing Dimensions See also Keywords: ", "tags": "", "url": "nodes.image.mathematics.complex.from_realimaginary.html"},
{"title": "From Magnitude/Phase", "text": "Create Complex Create complex valued from magnitude and phase. Inputs Magnitude Missing description. Type: Column, Image, Numeric Array, List, Required, Single Phase Missing description. Type: Column, Image, Numeric Array, List, Required, Single Outputs Complex Missing description. Type: Image Settings Image Settings Metadata Source Selection Select the source for the output metadata. This is only applicable if the output is an image. Values: Magnitude, Phase Column Settings Column Name Text Set new column name. Broadcast Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Image and Numeric Array. Values: Align Leading Dimensions, Align Trailing Dimensions See also Keywords: ", "tags": "", "url": "nodes.image.mathematics.complex.from_magnitudephase.html"},
{"title": "Real", "text": "Real Part Get the real part. Inputs Complex Missing description. Type: Column, Image, Numeric Array, List, Required, Single Outputs Real Real part. Type: Image Settings Column Name Text Set new column name. See also Keywords: ", "tags": "", "url": "nodes.image.mathematics.complex.real.html"},
{"title": "Imaginary", "text": "Imaginary Part Get the imaginary part. Inputs Complex Complex data. Type: Column, Image, Numeric Array, List, Required, Single Outputs Imag Imaginary part. Type: Image Settings Column Name Text Set new column name. See also Keywords: ", "tags": "", "url": "nodes.image.mathematics.complex.imaginary.html"},
{"title": "Magnitude", "text": "Magnitude Get the magntiude. Inputs Complex Complex data. Type: Column, Image, Numeric Array, List, Required, Single Outputs Magnitude Magnitude of the input. Type: Image Settings Column Name Text Set new column name. See also Keywords: ", "tags": "", "url": "nodes.image.mathematics.complex.magnitude.html"},
{"title": "Phase", "text": "Phase Part Get the phase part of a number. Inputs Complex Complex data. Type: Column, Image, Numeric Array, List, Required, Single Outputs Phase Phase of the input. Type: Image Settings Column Name Text Set new column name. See also Keywords: ", "tags": "", "url": "nodes.image.mathematics.complex.phase.html"},
{"title": "Conjugate", "text": "Complex Conjugate Computes the complex conjugate of the input: Let \(z = a + bi\). Then the complex conjugate \(z^* =a-bi\). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.image.mathematics.complex.conjugate.html"},
{"title": "Sum", "text": "Sum Sum all images in a list elementwise with broadcasting. Inputs In Input list. Type: Image, Mask, Column, List, Required, Single Outputs Out Output sum. Type: Image, Mask, Column Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Image and Numeric Array. Values: Align Leading Dimension, Align Trailing Dimension Metadata From Element Integer Select the source for the output metadata. This is only applicable if the output is an image. See also Keywords: ", "tags": "", "url": "nodes.image.mathematics.sum.html"},
{"title": "Product", "text": "Product Multiply all images in a list elementwise with broadcasting. Inputs In Input list. Type: Image, Mask, Column, List, Required, Single Outputs Out Output sum. Type: Image, Mask, Column Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Image and Numeric Array. Values: Align Leading Dimension, Align Trailing Dimension Metadata From Element Integer Select the source for the output metadata. This is only applicable if the output is an image. See also Keywords: ", "tags": "", "url": "nodes.image.mathematics.product.html"},
{"title": "Square Root", "text": "Square Root Elementwise square root. Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.image.mathematics.algebraic_functions.square_root.html"},
{"title": "Square", "text": "Square Elementwise square. Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.image.mathematics.algebraic_functions.square.html"},
{"title": "Reciprocal", "text": "Reciprocal Elementwise reciprocal. Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.image.mathematics.algebraic_functions.reciprocal.html"},
{"title": "Sign", "text": "Sign Gives the sign for each element in input, i.e. -1 for negative values and 1 for positive. Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.image.mathematics.algebraic_functions.sign.html"},
{"title": "Negate", "text": "Negate Elementwise negate. Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.image.mathematics.algebraic_functions.negate.html"},
{"title": "Absolute Value", "text": "Absolute Value Elementwise absolute value. Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.image.mathematics.algebraic_functions.absolute_value.html"},
{"title": "Sin", "text": "Sin Elementwise sin(). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.image.mathematics.trigonometric_functions.sin.html"},
{"title": "Cos", "text": "Cos Elementwise cos(). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.image.mathematics.trigonometric_functions.cos.html"},
{"title": "Tan", "text": "Tan Elementwise tan(). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.image.mathematics.trigonometric_functions.tan.html"},
{"title": "Asin", "text": "Asin Elementwise asin(). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.image.mathematics.trigonometric_functions.asin.html"},
{"title": "Acos", "text": "Acos Elementwise acos(). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.image.mathematics.trigonometric_functions.acos.html"},
{"title": "Atan", "text": "Atan Elementwise atan(). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.image.mathematics.trigonometric_functions.atan.html"},
{"title": "Sinh", "text": "Sinh Elementwise sinh(). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.image.mathematics.trigonometric_functions.sinh.html"},
{"title": "Cosh", "text": "Cosh Elementwise cosh(). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.image.mathematics.trigonometric_functions.cosh.html"},
{"title": "Tanh", "text": "Tanh Elemenwise tanh(). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.image.mathematics.trigonometric_functions.tanh.html"},
{"title": "Asinh", "text": "Asinh Elementwise asinh(). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.image.mathematics.trigonometric_functions.asinh.html"},
{"title": "Acosh", "text": "Acosh Elementwise acosh(). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.image.mathematics.trigonometric_functions.acosh.html"},
{"title": "Atanh", "text": "Atanh Elementwise atanh(). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.image.mathematics.trigonometric_functions.atanh.html"},
{"title": "Exp", "text": "Exp Exp() of each element of input, i.e. if input is \(x\), result is \(e^x\). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.image.mathematics.exponential_functions.exp.html"},
{"title": "2ˣ", "text": "Pow(2,·) 2^() of each element of input, i.e. if input is \(x\), result is \(2^x\). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.image.mathematics.exponential_functions.2ˣ.html"},
{"title": "10ˣ", "text": "Pow(10,·) 10^() of each element of input, i.e. if input is \(x\), result is \(10^x\). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.image.mathematics.exponential_functions.10ˣ.html"},
{"title": "Raise to Power", "text": "Raise to Power Raise each element \(A_i\) in the Upper input to the power of the element value in the Lower input \(B_{i}\) \[ \begin{equation} R_i = A_i^{B_{i}} \label{eq:sample} \end{equation} \] You can use any two supported inputs of the same type, and numbers can be the base or exponent with all types. Inputs Upper Base input. Type: Column, Image, Numeric Array, List, Required, Single Lower Exponent input. Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Resulting power. The output type is determined by the input types. If one input is an Image or a Column, the output will be an Image or a Column, respectively. If both inputs are Numbers type, the output will be a Numeric Array type. Type: Column, Image, Numeric Array, List Settings Exponent Value Array Exponent value if Lower input is not connected. Value Type Selection Specify value type of Value. Values: Integer32, Integer64, Float32, Float64, Complex64, Complex128 Image Settings Metadata Source Selection Select the source for the output metadata. This is only applicable if the output is an image. Values: Upper, Lower Column Settings Column Name Text Set the name of the output column. Broadcast Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Image and Numeric Array. Values: Align Leading Dimensions, Align Trailing Dimensions See also Keywords: ", "tags": "", "url": "nodes.image.mathematics.exponential_functions.raise_to_power.html"},
{"title": "Log", "text": "Log ln() of each element of input, i.e. if input is \(x\), result is \(\ln(x)\). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.image.mathematics.exponential_functions.log.html"},
{"title": "Log10", "text": "Log10 log() of each element of input, i.e. if input is \(x\), result is \(\log(x)\). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.image.mathematics.exponential_functions.log10.html"},
{"title": "Erf", "text": "Erf Computes the error function (Gauss error function) of each element of the input. Defined as \(erf(x) = \frac{2}{\sqrt{\pi}}\int_0^x e^{-t^2}dt\). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.image.mathematics.special_functions.erf.html"},
{"title": "Erfc", "text": "Erfc Computes the complementary error function of each element of the input. Defined as \(erfc(x) = 1 - erf(x)\). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.image.mathematics.special_functions.erfc.html"},
{"title": "Inverse Erf", "text": "Inverse Erf The inverse error function \(erf^{-1}(x)\) of each element in the input. Defined by the error function \(erf(x)\) such that \(x = erf^{-1}(erf(x)) = erf(erf^{-1}(x))\). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.image.mathematics.special_functions.inverse_erf.html"},
{"title": "Round", "text": "Round Rounds numerical values to the specified number of decimal places. Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Settings Column Name Text Set the name of the output column. Round Decimals Integer Set the number of decimals in the output. The default is 0, which will return integer values. See also Keywords: ", "tags": "", "url": "nodes.image.mathematics.round.html"},
{"title": "Ceiling", "text": "Ceiling Rounds each element value to the closest, larger integer. Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.image.mathematics.ceiling.html"},
{"title": "Floor", "text": "Floor Rounds each element value to the closest, smaller integer. Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.image.mathematics.floor.html"},
{"title": "Fraction", "text": "Fraction Elementwise fraction part of input, i.e. the remainder after a floor operation, e.g. if an input element is \(12.23\) the output will be \(0.23\). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.image.mathematics.fraction.html"},
{"title": "Remainder", "text": "Remainder Calculate the elementwise remainder with broadcasting. The remainder is the amount &ldquo;left over&rdquo; after performing elementwise division, i.e. the remainder of \(\frac{5}{2}=1\). Inputs Upper The dividend. Type: Column, Image, Numeric Array, List, Required, Single Lower The divisor. Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Resulting remainder. The output type is determined by the input types. If one input is an Image or a Column, the output will be an Image or a Column, respectively. If both inputs are Numbers type, the output will be a Numeric Array type. Type: Column, Image, Numeric Array, List Settings Divisor Value Array Value to divide with if lower input is not connected. Value Type Selection Specify value type of Value. Values: Integer32, Integer64, Float32, Float64, Complex64, Complex128 Image Settings Metadata Source Selection Select the source for the output metadata. This is only applicable if the output is an image. Values: Upper, Lower Column Settings Column Name Text Set the name of the output column. Broadcast Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Image and Numeric Array. Values: Align Leading Dimensions, Align Trailing Dimensions See also Keywords: ", "tags": "", "url": "nodes.image.mathematics.remainder.html"},
{"title": "Is NaN", "text": "Is NaN Elementwise check if NaN. Gives TRUE output if element is NaN. Inputs Input Input. Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Output depends on input. Input Column gives output Column, input Image yields output Mask and input Numeric Array gives output Boolean Array. Type: Column, Mask, Boolean Array, List, Required, Single Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.image.mathematics.is_nan.html"},
{"title": "Is Inf", "text": "Is Inf Elementwise check if infinite. Gives TRUE output if element is infinite. Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Output depends on input. Input Column gives output Column, input Image yields output Mask and input Numeric Array gives output Boolean Array. Type: Column, Mask, Boolean Array, List, Required, Single Settings Configure Infinity Type Selection Set to check for positive or negative infinity (or both). Values: +Inf or -Inf, +Inf, -Inf Column Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.image.mathematics.is_inf.html"},
{"title": "Is Finite", "text": "Is Finite Elementwise check if not NaN or Inf. Gives TRUE output if element is not NaN or infinite. Inputs Input Input. Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Output depends on input. Input Column gives output Column, input Image yields output Mask and input Numeric Array gives output Boolean Array. Type: Column, Mask, Boolean Array, List, Required, Single Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.image.mathematics.is_finite.html"},
{"title": "Set Non-finite", "text": "Set Non-finite Set inf and NaN values to real values. Inputs Input Input. Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Output. Type: Column, Image, Numeric Array, List Settings Configure NaN Float Set value to replace NaN values with. +Inf Float Set value to replace positive infitity values with. -Inf Float Set value to replace negative infitity values with. Column Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.image.mathematics.set_non-finite.html"},
{"title": "Normalize", "text": "Normalize This node performs linear normalization of input data to fit within a specified intensity range. The normalization is calculated using the following equation: \[ \begin{equation} I_{norm} = (I-\text{min}(I))\frac{\text{max}_{norm}-\text{min}_{norm}}{\text{max}(I)-\text{min}(I)}+\text{min}_{norm} \label{eq:normalize} \end{equation} \] Parameters and Definitions \(I\): Input to be normalized. \(I_{norm}\): Normalized output. \(\text{min}(I)\): Minimum value in the input data. \(\text{max}(I)\): Maximum value in the input data. \(\text{min}_{norm}\) and \(\text{max}_{norm}\): Desired range for the normalized output. For example, setting \(\text{min}_{norm}\) to 0 and \(\text{max}_{norm}\) to 1 scales all input values between 0 and 1. \(\text{min}(I)\) and \(\text{max}(I)\) can be calculated from the entire ND-image, a 3D volume, or on a slice-by-slice basis. These values can also be constrained within an optional input mask. If complex data is provided, the real and imaginary components are normalized separately. Inputs Input Input image to be normalized. Type: Image, List, Required, Single Mask Optional mask that defines the region from which the minimum and maximum values are extracted. Type: Mask, Optional, Single Outputs Output Normalized output image. Type: Image, List Settings Normalize Selection Specify how normalization should be performed: Per Slice Normalizes each slice independently. Per Volume Normalizes each 3D volume independently. Entire Image Normalizes the entire ND-image as a whole. Values: Per Slice, Per Volume, Entire Image Min Float Specifies the lowest possible value in the output. All normalized values are scaled so that the smallest input value matches this minimum. Max Float Specifies the highest possible value in the output. The largest input value is scaled to match this value during normalization. See also Keywords: ", "tags": "", "url": "nodes.image.mathematics.normalize.html"},
{"title": "Z-Normalize", "text": "Z-Normalize This node normalizes the input using the z-score (or standard score). The z-score is calculated by subtracting the mean and dividing by the standard deviation. The mean and standard deviation can be calculated from the entire ND-image, per 3D-volume or per slice. These values can also be constrained within an optional input mask. The standard deviation \(s\) is calculated using the following equation: \[ s = \sqrt{\frac{1}{N-1}\sum_ {i=1}^N{(x_i-\bar{x})(x_i-\bar{x})^{*}}} \] where \(x_i\) are individual data points, \(N\) is the total numer of data ponts, \(\bar{x}\) is the sample mean, and \(^*\) is the complex conjugate which only affects complex data. Inputs Input Input data to be normalized. Type: Image, List, Required, Single Mask Optional mask that defines the region from which the mean and standard deviation are calculated. Type: Mask, Optional, Single Outputs Output Normalized output, of the same type as the input. Type: Image, List Settings Normalize Selection Specify how the normalization should be performed: Per Slice: Normalizes each slice independently. Per Volume: Normalizes each 3D volume independently. Entire Image: Normalizes the entire ND-image as a whole. Values: Per Slice, Per Volume, Entire Image See also Keywords: ", "tags": "", "url": "nodes.image.mathematics.z-normalize.html"},
{"title": "Sigmoid", "text": "Sigmoid Computes the sigmoid function element-wise. A linear transformation is applied first on the argument of the sigmoid function. The resulting total transform is given by \(f(x) = (Max-Min) * \dfrac{1}{1+e^{-(x - \beta) / \alpha }} + Min\) Every output element is equal to f(x), where x is the intensity of the homologous input element, and alpha and beta are user-provided constants. Consider an exampel of an image. The \(\beta\) value can be thought of the offset on the pixel value that you are trying to isolate. E.g., if the object you are trying to isolate is at a pixel intensity above 150, you would choose a \(\beta\) value that is around that value. The \(\alpha\) value can be thought of as the scaling or variance of the sigmoid. Lower \(\alpha\) values will make the pixel range of your intensity sharper. Your \(\alpha\) value would decide how much of the noise you would want to include in your transformation. Smaller \(\alpha\) values (0.25, 0.5) would zero out most of the noise, but it might make your actual signal thicker and not specific enough. Conversely, larger alpha values (e.g. 3+) might have a smoother signal but might include more noise. Negative alpha values can be thought of as using a positive alpha value and then inverting the image. Inputs Input Input. Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Output. Type: Column, Image, Numeric Array, List Settings Configure Alpha Float Alpha parameter. Low values cancel noise, but makes signal thicker. Negative values inverts image. Beta Float Beta parameter. Set to ~the pixel value you want to isolate. Min Float Output min value. Max Float Output max value. See also Keywords: ", "tags": "", "url": "nodes.image.mathematics.sigmoid.html"},
{"title": "Clip", "text": "Clip The input value range is limited between a specified minimum and maximum value as defined in the settings. The limits can be set explicitly, or as percentiles of the input. Any values outside of this range will be set to the closest limit. Inputs Input Input Type: Column, Image, Mask, Required, Single Outputs Output Output image Type: Image Settings Clip Min Value Float Minimum value in the output. Max Value Float Maximum value in the output. Min Percentile [%] Float Minimum value in the output is set as a percentile of the input. Max Percentile [%] Float Maximum value in the output is set as a percentile of the input. Configure Set NaN Float Assign NaN values to this number. Bounds definition Selection Choose whether to set the minimum and maximum values explicitly or as percentiles of the input. Values: Explicit, Percentiles Return Bounds Boolean Return the min and max values of the output. This can be useful when percentiles have been used to define the bounds. Column Settings Column Name Text Set output column name. See also Keywords: truncate, clamp ", "tags": "", "url": "nodes.image.mathematics.clip.html"},
{"title": "Expression", "text": "Math Expression Evaluate a numeric expression from zero or more inputs. The inputs can be images, masks, numeric arrays or boolean arrays. Inputs x1 Input variable to the expression. Type: Image List, Mask List, Numeric Array List, Boolean Array List Outputs Y Resulting value. Type: Image Settings Expression Y = Text Define the mathematical expression. Valid operations include, arithmetic operations: +-*/, algebraic functions: pow(a,b) to raise a to the power of b, sqrt() trigonometric functions: sin(), cos(), tan(), asin(), acos(), atan() hyperbolic functions: sinh() cosh(), tanh(), asinh(), acosh(), atanh() exponential and logarithmic functions: exp(), log(), log10() Add Variable Button Add a new varaible as an input Add SubExpression Button Create a subexpression. This can be useful when you want to simplify the final expression by creating subexpressions that can be used as variables. Configure Output Type Selection Define the output type manually. Values: Image, Image List, Mask, Mask List, Numeric Array, Numeric Array List, Boolean Array, Boolean Array List Metadata From Selection Assign from which input the output image or mask should inherit the metadata. Values: None Broadcasting Selection Define how broadcasting should be performed. Values: Align Leading Dimensions, Align Trailing Dimensions Variable: x1 Variable Name Text Set or change the variable name. Remove Variable Button Remove variable. See also Keywords: ", "tags": "", "url": "nodes.image.mathematics.expression.html"},
{"title": "FFT", "text": "FFT Perform forward discrete Fourier transform along selected dimensions using the Fast Fourier Transform (FFT) algorithm. The (non-centered) forward discrete Fourier transform along a specific dimension is defined as \(X(...,k ,...) = Z \cdot \sum_{j=0}^{n-1} x(..., j, ...) e^{-i2\pi kj/n}\), where \(Z\) is a normalization constant. Inputs Input Input(s) Type: Image, Numeric Array, List, Required, Single Outputs Output Output(s) Type: Image, Numeric Array Settings Centered Boolean True if the center of the frequency spectrum is placed at the center index. I.e. \(c = N - \lfloor N/2 \rfloor\). Otherwise the center frequency will be placed at the 0 index. Dimensions Integers The dimensions over which the FFT is performed. Normalization Selection The type of normalization: Ortho - Make the Fourier transform unitary. Sets the scaling factor \(Z = \frac{1}{\sqrt{n}}\). Backward Sets the scaling factor \(Z = 1\). Forward Sets the scaling factor \(Z = \frac{1}{n}\). Values: Ortho (1/sqrt(n)), Backward (None), Forward (1/n) See also IFFT, FFT Shift, IFFT Shift Keywords: ", "tags": "", "url": "nodes.image.mathematics.fft.fft.html"},
{"title": "IFFT", "text": "IFFT Perform inverse discrete Fourier transform along selected dimensions using the Fast Fourier Transform (FFT) algorithm. The (non-centered) inverse discrete Fourier transform along a specific dimension is defined as \(X(...,k ,...) = Z \cdot \sum_{j=0}^{n-1} x(..., j, ...) e^{i2\pi kj/n}\), where \(Z\) is a normalization constant. Inputs Input Input(s) Type: Image, Numeric Array, List, Required, Single Outputs Output Output(s) Type: Image, Numeric Array Settings Centered Boolean True if the center of the frequency spectrum is placed at the center index. I.e. \(c = N - \lfloor N/2 \rfloor\). Otherwise the center frequency will be placed at the 0 index. Dimensions Integers The dimensions over which the FFT is performed. Normalization Selection Ortho - Make the Fourier transform unitary. Sets the scaling factor \(Z = \frac{1}{\sqrt{n}}\). Backward Sets the scaling factor \(Z = \frac{1}{n}\). Forward Sets the scaling factor \(Z = 1\). Values: Ortho (1/sqrt(n)), Backward (None), Forward (1/n) See also FFT, FFT Shift, IFFT Shift Keywords: ", "tags": "", "url": "nodes.image.mathematics.fft.ifft.html"},
{"title": "FFT Shift", "text": "FFT Shift Swaps the half-spaces for all selected dimension. Inputs Input Input(s) Type: Image, Numeric Array, List, Required, Single Outputs Output Output(s) Type: Image, Numeric Array Settings Dimensions Integers Dimensions over which to swap half-spaces. See also FFT, IFFT, IFFT Shift Keywords: ", "tags": "", "url": "nodes.image.mathematics.fft.fft_shift.html"},
{"title": "IFFT Shift", "text": "IFFT Shift Swaps the half-spaces for all selected dimension. Identical to FFT shift except how it treats odd size dimensions. Inputs Input Input(s) Type: Image, Numeric Array, List, Required, Single Outputs Output Output(s) Type: Image, Numeric Array Settings Dimensions Integers Dimensions over which to swap half-spaces. See also FFT, IFFT, FFT Shift Keywords: ", "tags": "", "url": "nodes.image.mathematics.fft.ifft_shift.html"},
{"title": "Piecewise Linear Interpolation", "text": "Piecewise Linear Interpolation Inputs Image Missing description. Type: **NodeIOImage, **, Required, Single Interpolant Table Missing description. Type: **NodeIOTable, **, Required, Single Outputs Output Image Missing description. Type: NodeIOImage See also Keywords: ", "tags": "", "url": "nodes.image.mathematics.piecewise_linear_interpolation.html"},
{"title": "Equal", "text": "Equal Elementwise compare inputs with broadcasting. If input elements are equal, the output element is TRUE. You can compare any supported inputs to inputs of the same type, and also Mask to Bits, Image to Numbers and Column to Numeric Array and Boolean Array. Inputs Upper First input. Type: Mask, Column, Image, Numeric Array, Boolean Array, List, Required, Single Lower Second input. Type: Mask, Column, Image, Numeric Array, Boolean Array, List, Optional, Single Outputs Output Output. The output depends on the input. An Image input gives an Image output, a Mask input gives a Mask output and a Column input gives a Column output, regardless of the second input type. Two Numbers inputs gives Numeric Array output and two Bits inputs gives Boolean Array output. Type: Mask, Column, Image, Numeric Array, Boolean Array, List Settings Equal Value Array Value to compare the first input to. Only valid if the optional input is not connected. Value Type Selection Value type of the Value setting. Values: Boolean, Integer32, Integer64, Float32, Float64, Complex64, Complex128 Image Settings Metadata Source Selection Select the source for the output metadata. This is only applicable if the output is an Image or a Mask. Values: Upper, Lower Column Settings Column Name Text Set the name of the output column. Broadcast Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Image and Numeric Array. Values: Align Leading Dimensions, Align Trailing Dimensions See also Keywords: ", "tags": "", "url": "nodes.image.compare.equal.html"},
{"title": "Not Equal", "text": "Not Equal Elementwise compare inputs with broadcasting. If input elements are not equal, the output element is TRUE. You can compare any supported inputs to inputs of the same type, and also Mask to Bits, Image to Numbers and Column to Numeric Array and Boolean Array. Inputs Upper First input. Type: Mask, Column, Image, Numeric Array, Boolean Array, List, Required, Single Lower Second input. Type: Mask, Column, Image, Numeric Array, Boolean Array, List, Required, Single Outputs Output Output. The output depends on the input. An Image input gives an Image output, a Mask input gives a Mask output and a Column input gives a Column output, regardless of the second input type. Two Numbers inputs gives Numeric Array output and two Bits inputs gives Boolean Array output. Type: Mask, Column, Image, Numeric Array, Boolean Array, List Settings Value Value Array Value to compare the first input to. Only valid if the optional input is not connected. Value Type Selection Value type of the Value setting. Values: Boolean, Integer32, Integer64, Float32, Float64, Complex64, Complex128 Image Settings Metadata Source Selection Select the source for the output metadata. This is only applicable if the output is an Image or a Mask. Values: Upper, Lower Column Settings Column Name Text Set the name of the output column. Broadcast Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Image and Numeric Array. Values: Align Leading Dimensions, Align Trailing Dimensions See also Keywords: ", "tags": "", "url": "nodes.image.compare.not_equal.html"},
{"title": "Less Than", "text": "Less Than Elementwise compare inputs with broadcasting. If Upper input elements are less than Lower input elements, the output element is TRUE. You can compare any supported inputs to inputs of the same type, and any input element to Numeric Array. Inputs Upper First input. Type: Column, Image, Numeric Array, List, Required, Single Lower Second input. Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Output. The output type is determined by the input types. If one input is an Image or a Column, the output will be an Image or a Column, respectively. If both inputs are Numbers type, the output will be a Numeric Array type. Type: Column, Image, Numeric Array, List Settings Value Value Array Value to compare the first input to. Only valid if the optional input is not connected. Value Type Selection Value type of the Value setting. Values: Integer32, Integer64, Float32, Float64 Image Settings Metadata Source Selection Select the source for the output metadata. This is only applicable if the output is an image. Values: Upper, Lower Column Settings Column Name Text Set the name of the output column. Broadcast Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Image and Numeric Array. Values: Align Leading Dimensions, Align Trailing Dimensions See also Keywords: ", "tags": "", "url": "nodes.image.compare.less_than.html"},
{"title": "Less Than or Equal", "text": "Less Than or Equal Elementwise compare inputs with broadcasting. If Upper input elements are less than or equal Lower input elements, the output element is TRUE. You can compare any supported inputs to inputs of the same type, and any input element to Numeric Array. Inputs Upper First input. Type: Column, Image, Numeric Array, List, Required, Single Lower Second input. Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Output. The output type is determined by the input types. If one input is an Image or a Column, the output will be an Image or a Column, respectively. If both inputs are Numbers type, the output will be a Numeric Array type. Type: Column, Image, Numeric Array, List Settings Value Value Array Value to compare the first input to. Only valid if the optional input is not connected. Value Type Selection Value type of the Value setting. Values: Integer32, Integer64, Float32, Float64 Image Settings Metadata Source Selection Select the source for the output metadata. This is only applicable if the output is an image. Values: Upper, Lower Column Settings Column Name Text Set the name of the output column. Broadcast Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Image and Numeric Array. Values: Align Leading Dimensions, Align Trailing Dimensions See also Keywords: ", "tags": "", "url": "nodes.image.compare.less_than_or_equal.html"},
{"title": "Greater Than", "text": "Greater Than Elementwise compare inputs with broadcasting. If Upper input elements are greater than Lower input elements, the output element is TRUE. You can compare any supported inputs to inputs of the same type, and any input element to Numbers. Inputs Upper First input. Type: Column, Image, Numbers, List, Required, Single Lower Second input. Type: Column, Image, Numbers, List, Required, Single Outputs Output Output. The output type is determined by the input types. If one input is an Image or a Column, the output will be an Image or a Column, respectively. If both inputs are Numbers type, the output will be a Numbers type. Type: Column, Image, Numbers, List Settings Value Value Array Value to compare the first input to. Only valid if the optional input is not connected. Value Type Selection Value type of the Value setting. Values: Integer32, Integer64, Float32, Float64 Image Settings Metadata Source Selection Select the source for the output metadata. This is only applicable if the output is an image. Values: Upper, Lower Column Settings Column Name Text Set the name of the output column. Broadcast Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Image and Numbers. Values: Align Leading Dimensions, Align Trailing Dimensions See also Keywords: ", "tags": "", "url": "nodes.image.compare.greater_than.html"},
{"title": "Greater Than or Equal", "text": "Greater Than or Equal Elementwise compare inputs with broadcasting. If Upper input elements are greater than or equal to Lower input elements, the output element is TRUE. You can compare any supported inputs to inputs of the same type, and any input element to Numbers. Inputs Upper First input. Type: Column, Image, Numbers, List, Required, Single Lower Second input. Type: Column, Image, Numbers, List, Required, Single Outputs Output Output. The output type is determined by the input types. If one input is an Image or a Column, the output will be an Image or a Column, respectively. If both inputs are Numbers type, the output will be a Numbers type. Type: Column, Image, Numbers, List Settings Value Value Array Value to compare the first input to. Only valid if the optional input is not connected. Value Type Selection Value type of the Value setting. Values: Integer32, Integer64, Float32, Float64 Image Settings Select the source for the output metadata. This is only applicable if the output is an image. Values: Upper, Lower Column Settings Column Name Text Set the name of the output column. Broadcast Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Image and Numbers. Values: Align Leading Dimensions, Align Trailing Dimensions See also Keywords: ", "tags": "", "url": "nodes.image.compare.greater_than_or_equal.html"},
{"title": "Add Gaussian Noise", "text": "Add Gaussian Noise Adds Gaussian noise to an Image. Inputs Input Input Image(s). Type: Image, List, Required, Single Outputs Output Output Image(s). Type: Image, List Settings Standard Deviation (σ) Float The standard deviation of the Gaussian noise. See also Keywords: ", "tags": "", "url": "nodes.image.filters.noise.add_gaussian_noise.html"},
{"title": "Add Uniform Noise", "text": "Add Uniform Noise Adds uniform noise to an Image. Inputs Input Input Image(s). Type: Image, List, Required, Single Outputs Output Output Image(s). Type: Image, List Settings Lower Limit Float Lower limit of the uniform noise. Upper Limit Float Upper limit of the uniform noise. See also Keywords: ", "tags": "", "url": "nodes.image.filters.noise.add_uniform_noise.html"},
{"title": "Add Rician Noise", "text": "Add Rician Noise Adds Rician noise to an Image. Inputs Input Input Image(s). Type: Image, List, Required, Single Outputs Output Output Image(s). Type: Image, List Settings Sigma (σ) Float The standard deviation of the normal distribution from where the coordinates of the Rice distribution is sampled. See also Keywords: ", "tags": "", "url": "nodes.image.filters.noise.add_rician_noise.html"},
{"title": "Add Poisson Noise", "text": "Add Poisson Noise Add Poisson noise to an Image. Inputs Input Input Image(s). Type: Image, List, Required, Single Outputs Output Output Image(s). Type: Image, List See also Keywords: ", "tags": "", "url": "nodes.image.filters.noise.add_poisson_noise.html"},
{"title": "Gaussian Blur", "text": "Gaussian Blur Perform Gaussian smoothing on input image(s) by separable convolution with discrete gaussian kernels. Inputs Input Input image(s). Type: Image, List, Required, Single Outputs Output Output image(s). Type: Image, List Settings Configure Std Dev [px] Numbers The standard deviation of the Gaussian kernel in voxels, specified as [i, j, k]. Std Dev [mm] Numbers The standard deviation of the Gaussian kernel in mm, specified as [x, y, z]. Unit Selection Selection Select the unit of the kernel. Values: px, mm Advanced Maximum Kernel Error Decimal Number Array The algorithm will size the discrete kernel so that the error resulting from truncation of the kernel is no greater than the Maximum Kernel Error. Maximum Kernel Size [px] Integer Set the kernel to be no wider than MaximumKernelWidth pixels, even if the Maximum Kernel Error demands it. See also Keywords: ", "tags": "", "url": "nodes.image.filters.smoothing.gaussian_blur.html"},
{"title": "Median", "text": "Median Filter Applies a median filter to input image(s).Computes an image where a given pixel is the median value of the the pixels in a neighborhood about the corresponding input pixel. A median filter is one of the family of nonlinear filters. It is used to smooth an image without being biased by outliers or shot noise. Inputs Input Input image(s). Type: Image, List, Required, Single Outputs Output Output image(s). Type: Image, List Settings Kernel radius [px] Integers Radius of the kernel in pixels, specified as [i, j, k] See also Keywords: ", "tags": "", "url": "nodes.image.filters.smoothing.median.html"},
{"title": "Box Mean", "text": "Box Mean Perform a rectangular mean smoothing on input image(s).Computes an image where a given pixel is the mean value of the the pixels in a neighborhood about the corresponding input pixel. Inputs Input Input image(s). Type: Image, List, Required, Single Outputs Output Output image(s). Type: Image, List Settings Kernel radius [px] Integers Each voxel will be assigned the average value of the surrounding environment, described by the kernel size in pixels specified as [i, j, k]. See also Keywords: ", "tags": "", "url": "nodes.image.filters.smoothing.box_mean.html"},
{"title": "PCA", "text": "PCA Principal component analysis (PCA) is a method that is often used to reduce the dimensionality of data, by transforming a large set of variables into a smaller one that still contain most of the information contained in the full dataset. It can make data easier to explore and visualize. By expressing the dataset in terms of componenents (combination of variables) that contributes most to the variation in the data, the number of variables used to describe the dataset can be reduced. The cost is that some high-frequency information is lost (which can be used as a noise reduction technique). Inputs Input Input Image(s). Type: Image, List, Required, Single Outputs Prediction Output Image(s) containing the prediction of the input data using the Number of Components defined in the Node settings. Type: Image, List Components Output Image(s) containing the components found using PCA. Will have have the same dimensionality as the input data, i.e. if you input 3 frames of a time series and perform PCA along the T dimension, the number of components will be 3. Type: Image, List Statistics Table(s) containing the eigen values and eigen vectors of the components. Type: Table Settings Number Of Components Integer The number of components that is used to recreate the prediction of the output data, given the input data. If the number of components is set to the same number as the dimensionality of the input data, the output will equal the input. If set to a lower value, it will contain less noise. Dimension Selection Along which image dimension should the PCA be performed. Values: i, j, k, Channel Channel Integer Specify along which channel should the PCA be performed. Normalize Boolean Normalize each variable to its standard deviation before performing PCA. See also References PCA on Wikipedia Keywords: principal component analysis, dimensionality reduction, noise reduction, eigen values, eigen vectors ", "tags": "", "url": "nodes.image.filters.smoothing.pca.html"},
{"title": "Curvature Flow", "text": "Curvature Flow Curvature driven image denoising algorithm. Iso-brightness contours in the grayscale input image are viewed as a level set. The level set is then evolved using a curvature-based speed function. The advantage of this approach is that sharp boundaries are preserved with smoothing occurring only within a region. However, it should be noted that continuous application of this scheme will result in the eventual removal of all information as each contour shrinks to zero and disappear. This filter has two parameters: the number of update iterations to be performed and the timestep between each update. The timestep should be &ldquo;small enough&rdquo; to ensure numerical stability. Stability is guaranteed when the timestep meets the CFL (Courant-Friedrichs-Levy) condition. Broadly speaking, this condition ensures that each contour does not move more than one grid position at each timestep. In the literature, the timestep is typically user specified and have to manually tuned to the application. Inputs Input Input image(s). Type: Image, List, Required, Single Outputs Output Output image(s). Type: Image, List Settings Time Step Float The timestep parameter. Iterations Integer Number of iterations. See also Keywords: ", "tags": "", "url": "nodes.image.filters.smoothing.curvature_flow.html"},
{"title": "Min/Max Curvature Flow", "text": "Min/Max Curvature Flow Curvature driven image denoising algorithm. Iso-brightness contours in the grayscale input image are viewed as a level set. The level set is then evolved using a curvature-based speed function. In min/max curvature flow, movement is turned on or off depending on the scale of the noise one wants to remove. Switching depends on the average image value of a region of radius R around each point. The choice of R, the stencil radius, governs the scale of the noise to be removed. Inputs Input Input image(s). Type: Image, List, Required, Single Outputs Output Output image(s). Type: Image, List Settings Time Step Float The timestep parameter. Iterations Integer Number of iterations. Stencil Radius Integer The scale of the noise to be removed. See also References MinMaxCurvatureFlowImageFilter in SimpleITK Keywords: ", "tags": "", "url": "nodes.image.filters.smoothing.minmax_curvature_flow.html"},
{"title": "Bilateral", "text": "Bilateral The bilateral filter blurs an image while preserving edges. This filter uses bilateral filtering to blur an image using both domain and range &ldquo;neighborhoods&rdquo;. Pixels that are close to a pixel in the image domain and similar to a pixel in the image range are used to calculate the filtered value. Two gaussian kernels (one in the image domain and one in the image range) are used to smooth the image. The result is an image that is smoothed in homogeneous regions yet has edges preserved. The result is similar to anisotropic diffusion but the implementation in non-iterative. Bilateral filtering is capable of reducing the noise in an image by an order of magnitude while maintaining edges. The bilateral operator used here was described by Tomasi and Manduchi. Inputs Input Input image(s). Type: Image, List, Required, Single Outputs &lt;circle cx=&ldquo;10&rdquo; cy=&ldquo;8&rdquo; r=&ldquo;6&rdquo; stroke=&quot;#Output image(s). Type: Image, List Settings Domain Sigma [mm] Float The standard deviation of the gaussian blurring kernel in mm. Range Sigma [Intensity Units] Float The standard deviation of the gaussian blurring kernel in the image range in intensity units. Number of Gaussian Samples Integer The number of samples in the approximation of the Gaussian used for the range smoothing. See also References Bilateral Filter in SimpleITK Keywords: ", "tags": "", "url": "nodes.image.filters.smoothing.bilateral.html"},
{"title": "Curvature Anisotropic Diffusion", "text": "Curvature Anisotropic Diffusion Perform anisotropic diffusion on an image or a list of images, using the modified curvature diffusion equation. Each volume of the input image is processed separately. Inputs Input Input image(s). Type: Image, List, Required, Single Outputs Output Resulting image(s). Type: Image Settings Conductance Float Controls the sensitivity of the conductance term in the basic anisotropic diffusion equation. It affects the conductance term in different ways depending on the particular variation on the basic equation. As a general rule, the lower the value, the more strongly the diffusion equation preserves image features (such as high gradients or curvature). A high value for conductance will cause the filter to diffuse image features more readily. Typical values range from 0.5 to 2.0 for data like the Visible Human color data, but the correct value for your application is wholly dependent on the results you want from a specific data set and the number or iterations you perform. Scaling Update Interval Integer Set the interval at which a new scaling for the conductance term is calculated. Time Step Float The time step to be used for each iteration (update). The time step is constrained at run-time to keep the solution stable. In general, the time step should be at or below (PixelSpacing)/2^(N+1), where N is the dimensionality (N = 2 or 3) of the image. Iterations Integer Set the number of iterations. See also References CurvatureAnisotropicDiffusionImageFilter in SimpleITK Keywords: ", "tags": "", "url": "nodes.image.filters.smoothing.curvature_anisotropic_diffusion.html"},
{"title": "Derivative", "text": "Derivate An image derivative filter is a mathematical operation that is applied to an image to extract information about its edge or texture features. It calculates the gradient or rate of change of the intensity values in the image and outputs a map of the derivative values. The results of the filter can be used for tasks such as edge detection, feature extraction, and image segmentation. This filter calculates the n:th order derivative image of an input. Inputs Input Input image(s). Type: Image, List, Required, Single Outputs Output Output image(s). Type: Image, List Settings Derivative Order Integer Set derivative order. Direction Selection Set the direction of the derivative, in the image matrix coordinate system. Values: i, j, k Displacement Unit Selection Set the displacement unit. If set to pixels [px], the voxel size will be ignored. Values: px, mm See also References Derivative in SimpleITK Keywords: ", "tags": "", "url": "nodes.image.filters.sharpening.derivative.html"},
{"title": "Gradient", "text": "Gradient An image gradient filter is a type of image derivative filter that calculates the gradient, or rate of change, of the intensity values in an image. It computes the magnitude and direction of the intensity change at each pixel in the image. The gradient filter outputs a map of gradient magnitudes, which highlight the edges and texture features in the image. The gradient filter is often used in image processing and computer vision tasks, such as edge detection, feature extraction, and image segmentation. This filter computes the gradient of the input image(s) using directional derivatives. The directional derivative at each pixel location is computed by convolution with a first-order derivative operator. Inputs Input Input image(s). Type: Image, List, Required, Single Outputs Output Output image(s). Type: Image, List Settings Direction Selection Select if the gradient should be calculated in the image matrix space or in physical space. This could be important if the slices are oblique or just non-axial. Values: i,j,k, x,y,z Displacement Unit Selection Set the displacement unit. If set to pixels [px], the voxel size will be ignored. Values: px, mm See also Keywords: ", "tags": "", "url": "nodes.image.filters.sharpening.gradient.html"},
{"title": "Gradient Magnitude", "text": "Gradient Magnitude An image gradient filter is a type of image derivative filter that calculates the gradient, or rate of change, of the intensity values in an image. It computes the magnitude and direction of the intensity change at each pixel in the image. The gradient filter outputs a map of gradient magnitudes, which highlight the edges and texture features in the image. The gradient filter is often used in image processing and computer vision tasks, such as edge detection, feature extraction, and image segmentation. Computes the gradient magnitude of an image using directional derivatives. The directional derivative at each pixel location is computed by convolution with a first-order derivative operator, and the magnitude of the result is returned. Inputs Input Input image(s). Type: Image, List, Required, Single Outputs Output Output image(s). Type: Image, List Settings Displacement Unit Selection Set the displacement unit. If set to pixels [px], the voxel size will be ignored. Values: px, mm See also References Gradient Magnitude in SimpleITK Keywords: ", "tags": "", "url": "nodes.image.filters.sharpening.gradient_magnitude.html"},
{"title": "Laplacian", "text": "Laplacian Computes the Laplacian of input scalar-valued image(s). The Laplacian filter is a type of image derivative filter that computes the second derivative of the intensity values in an image. It calculates the rate of change of the gradient magnitude, and is used to detect areas of rapid intensity change in an image, such as edges and corners. The Laplacian filter outputs a map of the second derivative values, which highlight the areas of rapid intensity change in the image. In computer vision and image processing, the Laplacian filter is often used in tasks such as edge detection, image sharpening, and blob detection. The Laplacian is usually applied to an image that has first been smoothed with a Gaussian filter in order to reduce its sensitivity to noise, and is usually known as the Laplacian of Gaussian (LoG) filter.. Inputs Input Input image(s). Type: Image, List, Required, Single Outputs Output Output image(s). Type: Image, List Settings Displacement Unit Selection Set the displacement unit. If set to pixels [px], the voxel size will be ignored. Values: px, mm See also References Laplacian sharpening image filter in SimpleITK Keywords: ", "tags": "", "url": "nodes.image.filters.sharpening.laplacian.html"},
{"title": "Sobel", "text": "Sobel The Sobel filter is a type of image derivative filter used to detect edges in an image. It calculates the gradient magnitude of the intensity values in the image, by convolving the image with two kernels: one for detecting edges in the horizontal direction and one for edges in the vertical direction. The Sobel filter outputs a map of gradient magnitudes, which highlight the edges and texture features in the image. The gradient magnitudes can be combined to produce a gradient direction map, which can be used for edge orientation analysis. In computer vision and image processing, the Sobel filter is widely used in tasks such as edge detection, feature extraction, and image segmentation. The Sobel gradient magnitude (square-root sum of squares) is an indication of edge strength. Inputs Input Input image(s). Type: Image, List, Required, Single Outputs Output Output image(s). Type: Image, List See also References Sobel Edge Detection Filter in SimpleITK Keywords: ", "tags": "", "url": "nodes.image.filters.sharpening.sobel.html"},
{"title": "Canny", "text": "Canny This filter uses the Canny operator to calculate the image gradient and then finds the magnitude of this gradient vector. The Canny gradient magnitude (square-root sum of squares) is an indication of edge strength. There are four major steps used in this edge-detection scheme: (1) Smooth the input image with Gaussian filter. (2) Calculate the second directional derivatives of the smoothed image. (3) Non-Maximum Suppression: the zero-crossings of 2nd derivative are found, and the sign of third derivative is used to find the correct extrema. (4) The hysteresis thresholding is applied to the gradient magnitude (multiplied with zero-crossings) of the smoothed image to find and link edges. Inputs Input Input image(s). Type: Image, List, Required, Single Outputs Output Output image(s). Type: Image, List Settings Std Dev [mm] Numbers Set the standard deviation of the Gaussian smoothing in [mm] specified as [x, y, z]. Maximum Error Numbers The algorithm will size the discrete kernel so that the error resulting from truncation of the kernel is no greater than &ldquo;Maximum Error&rdquo;. Lower Threshold [Iu] Float Set the lowest allowed value in the output image. Upper Threshold [Iu] Float Set the largest allowed value in the output image. See also References Canny edge detection in SimpleITK Keywords: ", "tags": "", "url": "nodes.image.filters.sharpening.canny.html"},
{"title": "Grad. Magn. Recursive Gaussian", "text": "Gradient Magnitude The Gradient Magnitude Recursive Gaussian (GMRG) filter is a type of edge detection filter that calculates the gradient magnitude of an image in a computationally efficient way. Unlike other gradient magnitude filters, such as Sobel and Scharr, the GMRG filter uses a recursive implementation of the Gaussian filter to reduce computational complexity. The Gaussian filter is used to smooth the image, reducing noise and preserving edges. The gradient magnitude is then calculated using the smoothed image. The GMRG filter is often used in computer vision and image processing tasks, such as edge detection, feature extraction, and image segmentation, where the gradient magnitude is required. The GMRG filter is particularly useful when processing large images, as it provides faster computation compared to other gradient magnitude filters. This particular implementation computes the magnitude of the gradient of an image by convolution with the first derivative of a Gaussian. Inputs Input Input image(s). Type: Image, List, Required, Single Outputs Output Output image(s). Type: Image, List Settings Std Dev [px] Float The standard deviation of the Gaussian kernel in units of voxels. Normalize Across Scale Boolean The filter will be normalized in such a way that the values of derivatives are not biased by the size of the object. That is to say the maximum value a feature reaches across scale is independent of the scale of the object. See also References Gradient-magnitude recursive gaussian image filter in SimpleITK Keywords: ", "tags": "", "url": "nodes.image.filters.sharpening.grad._magn._recursive_gaussian.html"},
{"title": "Histogram Equalization", "text": "Histogram Equalization Power Law Adaptive Histogram Equalization. Histogram equalization modifies the contrast in an image. Adaptive histogram equalization is a superset of many contrast enhancing filters. By modifying its parameters, this filter can produce an adaptively equalized histogram or a version of unsharp mask (local mean subtraction). Instead of applying a strict histogram equalization in a window about a pixel, this filter prescribes a mapping function (power law) controlled by the parameters α and β. Inputs Input Input image(s). Type: Image, List, Required, Single Outputs Output Output image(s). Type: Image, List Settings Alpha Float The parameter alpha controls how much the filter acts like the classical histogram equalization method (α=0) to how much the filter acts like an unsharp mask (α=1). Beta Float The parameter beta controls how much the filter acts like an unsharp mask (β=0) to much the filter acts like pass through (β=1, with α=1). Radius [px] Integers Controls the size of the region in voxels over which local statistics are calculated, specified as [i, j, k]. See also References Adaptive Histogram Equalization implemented in SimpleITK Keywords: ", "tags": "", "url": "nodes.image.filters.intensity.histogram_equalization.html"},
{"title": "Erode", "text": "Erode Erode input image(s) using grayscale morphology. Image erosion is a morphological image processing technique used to reduce the size of bright regions in an image, while preserving the boundaries of objects. The erosion operation is performed using a structuring element or kernel, which is a small neighborhood of pixels that is moved over the image. The value of the output pixel is set to the minimum value of the corresponding pixels in the neighborhood defined by the structuring element. The erosion operation shrinks the bright regions in the image and can be used for tasks such as removing noise, filling small gaps, and reducing the size of objects. Image erosion is often used in combination with other morphological operations, such as dilation and opening, to perform image processing tasks such as object extraction, skeletonization, and shape analysis. Inputs Input Input image(s). Type: Image, List, Required, Single Outputs Output Output image(s). Type: Image, List Settings Kernel Selection The shape of the structuring element. Values: Annulus, Ball, Box, Cross Kernel Radius [px] 3D Vector Set the kernel radius in voxels, specified as [i, j, k]. See also References Grayscale Erode in SimpleITK Keywords: ", "tags": "", "url": "nodes.image.morphology.erode.html"},
{"title": "Dilate", "text": "Dilate Image dilation is a morphological image processing technique used to increase the size of bright regions in an image, while preserving the boundaries of objects. The dilation operation is performed using a structuring element or kernel, which is a small neighborhood of pixels that is moved over the image. The value of the output pixel is set to the maximum value of the corresponding pixels in the neighborhood defined by the structuring element. The dilation operation expands the bright regions in the image and can be used for tasks such as connecting broken objects, filling small holes, and increasing the size of objects. Image dilation is often used in combination with other morphological operations, such as erosion and closing, to perform image processing tasks such as object extraction, skeletonization, and shape analysis. Inputs Input Input image(s). Type: Image, List, Required, Single Outputs Output Output image(s). Type: Image, List Settings Kernel Selection Shape of the structuring element. Values: Annulus, Ball, Box, Cross Kernel Radius [px] 3D Vector Set the kernel radius in voxels, specified as [i, j, k]. See also References Grayscale Dilate in SimpleITK Keywords: ", "tags": "", "url": "nodes.image.morphology.dilate.html"},
{"title": "Opening", "text": "Opening The morphological opening of an image is a two-step process that combines erosion and dilation. The opening operation is used to remove small, isolated bright regions in an image while preserving the overall shape of the objects in the image. Erosion: In the first step, erosion is applied to the image to reduce the size of bright regions. The erosion operation is performed using a structuring element or kernel, which is a small neighborhood of pixels that is moved over the image. The value of the output pixel is set to the minimum value of the corresponding pixels in the neighborhood defined by the structuring element. Dilation: In the second step, dilation is applied to the image to restore the size of the objects that were reduced by the erosion step. The dilation operation is performed using the same structuring element as in the erosion step. The value of the output pixel is set to the maximum value of the corresponding pixels in the neighborhood defined by the structuring element. The morphological opening of an image is used in various image processing tasks, such as object extraction, noise removal, and shape analysis. The opening operation can be seen as a type of low-pass filter, as it removes small, high-intensity (bright) details in the image while preserving the large-scale structure of the objects. Inputs Input Input image(s). Type: Image, List, Required, Single Outputs Output Output image(s). Type: Image, List Settings Kernel Selection Shape of the structuring element. Values: Annulus, Ball, Box, Cross Kernel Radius [px] 3D Vector Set the kernel radius in voxels, specified as [i, j, k]. Safe Border Boolean Add a safe border to input image to avoid border effects and remove it once the operation is done. See also References Grayscale Opening in SimpleITK Keywords: ", "tags": "", "url": "nodes.image.morphology.opening.html"},
{"title": "Closing", "text": "Closing The morphological closing of an image is a two-step process that combines dilation and erosion. The closing operation is used to fill small holes in bright regions in an image while preserving the overall shape of the objects in the image. Dilation: In the first step, dilation is applied to the image to increase the size of bright regions. The dilation operation is performed using a structuring element, which is a small neighborhood of pixels that is moved over the image. The value of the output pixel is set to the maximum value of the corresponding pixels in the neighborhood defined by the structuring element. Erosion: In the second step, erosion is applied to the image to restore the original shape of the objects that were expanded by the dilation step. The erosion operation is performed using the same structuring element as in the dilation step. The value of the output pixel is set to the minimum value of the corresponding pixels in the neighborhood defined by the structuring element. The morphological closing of an image is used in various image processing tasks, such as object extraction, noise removal, and shape analysis. The closing operation can be seen as a type of high-pass filter, as it removes small, low-intensity (dark) details in the image while preserving the large-scale structure of the objects. Inputs Input Input image(s). Type: Image, List, Required, Single Outputs Output Output image(s). Type: Image, List Settings Kernel Selection Shape of the structuring element. Values: Annulus, Ball, Box, Cross Kernel Radius [px] 3D Vector Set the kernel radius in voxels, specified as [i, j, k]. Safe Border Boolean Add a safe border to input image to avoid border effects and remove it once the operation is done. See also References Grayscale Closing in SimpleITK Keywords: ", "tags": "", "url": "nodes.image.morphology.closing.html"},
{"title": "Opening by Reconstruction", "text": "Opening by Reconstruction This filter preserves regions, in the foreground, that can completely contain the structuring element. At the same time, this filter eliminates all other regions of foreground pixels. Contrary to the morphological opening, the opening by reconstruction preserves the shape of the components that are not removed by erosion. The opening by reconstruction of an image &ldquo;f&rdquo; is defined as: OpeningByReconstruction(f) = DilationByRecontruction(f, Erosion(f)). Opening by reconstruction not only removes structures destroyed by the erosion, but also levels down the contrast of the brightest regions. If Preserve Intensities is on, a subsequent reconstruction by dilation using a marker image that is the original image for all unaffected pixels. Inputs Input Input image(s). Type: Image, List, Required, Single Outputs Output Output image(s). Type: Image, List Settings Kernel Selection Shape of the structuring element. Values: Annulus, Ball, Box, Cross Kernel Radius [px] 3D Vector Set the kernel radius in voxels, specified as [i, j, k]. Connectivity Selection Set whether the connected components are defined strictly by face connectivity or by face+edge+vertex (full) connectivity. Values: Face Connectivity, Full Connectivity Preserve Intensities Boolean Set whether the original intensities of the image retained for those pixels unaffected by the opening by reconstruction. If Flase, the output pixel contrast will be reduced. See also References Grayscale Opening by Reconstruction in SimpleITK Keywords: ", "tags": "", "url": "nodes.image.morphology.opening_by_reconstruction.html"},
{"title": "Closing by Reconstruction", "text": "Closing by Reconstruction This filter is similar to the morphological closing, but contrary to the morphological closing, the closing by reconstruction preserves the shape of the components. The closing by reconstruction of an image &ldquo;f&rdquo; is defined as: ClosingByReconstruction(f) = ErosionByReconstruction(f, Dilation(f)). Closing by reconstruction not only preserves structures preserved by the dilation, but also raises the contrast of the darkest regions. If Preserve Intensities is on, a subsequent reconstruction by dilation using a marker image that is the original image for all unaffected pixels. Inputs Input Input image(s). Type: Image, List, Required, Single Outputs Output Output image(s) Type: Image, List Settings Kernel Selection Shape of the structuring element. Values: Annulus, Ball, Box, Cross Kernel Radius [px] 3D Vector Set the kernel radius in voxels, specified as [i, j, k]. Connectivity Selection Set whether the connected components are defined strictly by face connectivity or by face+edge+vertex (full) connectivity. Values: Face Connectivity, Full Connectivity Preserve Intensities Boolean Set whether the original intensities of the image retained for those pixels unaffected by the opening by reconstruction. If Flase, the output pixel contrast will be reduced. See also References Grayscale Closing by Reconstruction in SimpleITK Keywords: ", "tags": "", "url": "nodes.image.morphology.closing_by_reconstruction.html"},
{"title": "Threshold", "text": "Threshold Create binary mask(s) from one or more input images by setting each voxel as true or false given a threshold and a condition applied to the input. Inputs Input Input image(s). Type: Image, List, Required, Single Outputs Output Output mask(s). Type: Mask, List Settings Threshold Float Set the threshold. Voxels which do not fulfill the combination of the Threshold and Condition will be set to False. Condition Selection Select the condition of the threshold. Values: Greater Than, Greater or Equal, Lower, Lower or Equal, Equal, Not Equal See also Keywords: ", "tags": "", "url": "nodes.image.segmentation.threshold.html"},
{"title": "Double Threshold", "text": "Double Threshold Create binary mask(s) from one or more input images by setting each voxel as true or false given a set of thresholds and contiondions applied to the input. Inputs Input Input image(s). Type: Image, List, Required, Single Outputs Output Output mask(s). Type: Mask, List Settings Lower Threshold Float Set the lower threshold. Voxels with lower (or equal) values will be set to false. Lower Condition Selection Select the condition of the threshold. Values: Greater Than, Higher or Equal Upper Threshold Float Set the upper threshold. Voxels with higher (or equal) values will be set to false. Upper Condition Selection Select the condition of the threshold. Values: Lower, Lower or Equal See also Keywords: ", "tags": "", "url": "nodes.image.segmentation.double_threshold.html"},
{"title": "Seed Thresholding", "text": "Seed Thresholding Create mask regions that are connected to initial seeds and lie within a lower and upper threshold range. Inputs Input Input image(s). Type: Image, List, Required, Single Outputs Output Output mask(s). Type: Mask, List Settings Seed Type Selection Set whether to specify the seed position in physical space [mm] or image space [px]. Values: Index [px], Position [mm] Seed Position [mm] Array Set the seed position in [mm], specified as [x, y, z]. Seed Index [px] Array Set the seed position in [px], specified as [i, j, k]. Fully Connected Boolean If False, connected components are defined strictly by face connectivity. If True, connected components are defined strictly by face, edge and vertex connectivity. Lower Threshold Float Set the lower threshold value. Upper Threshold Float Set the upper threshold value. See also Keywords: ", "tags": "", "url": "nodes.image.segmentation.seed_thresholding.html"},
{"title": "Adaptive Seed Threshold", "text": "Seed Threshold Create mask regions that are connected to initial seeds within the threshold of \(\mu \pm c\cdot\sigma\), where \(\mu\) and \(\sigma\) are the mean and standard deviation of the selected region, and \(c\) is the multiplier. The Adaptive Seed Threshold algorithm uses simple statistics to determine which pixels are included in a region. First, the mean and standard deviation of intensity values for all the pixels in the region is computed. A user-provided factor is then used to multiply this value and define a range around the mean. Pixels that fall within this range are accepted as part of the region and considered during subsequent iterations of the algorithm. Once no more neighbor pixels meet these criteria, it's determined that iteration 1 has finished and processing resumes with new parameters. At each stage, updated means and standard deviations are calculated based on all currently included pixels, and the next iteration starts. Inputs Input Input Image(s) to be segmented. Type: Image, List, Required, Single Outputs Output Segmentation result as Mask(s). Type: Mask, List Settings Seed Type Selection Define seeds using indeces or positions. Values: Index [px], Position [mm] Seed Position [mm] Array Set the seed. Seed Index [px] Array Set the seed. Number of Iterations Integer The number of iterations is based on the degree of homogeneity within an anatomical region to be segmented. Highly uniform regions will require a few iterations while more complex regions may need several more. It's important to carefully select the multiplier factor, but there is no guarantee that this algorithm will converge onto a stable region. In practice, it seems most effective to limit the number of iterations in order to avoid potentially segmenting the entire image. Multiplier Float Set \(c\) in the condition threshold. Initial Neighborhood Radius Integer Set the region to estimate statistics. Replace Value Float Set the replace value. See also Keywords: ", "tags": "", "url": "nodes.image.segmentation.adaptive_seed_threshold.html"},
{"title": "Otsu Thresholding", "text": "Thresholding Otsu's thresholding is a method for automatically selecting a threshold value for image segmentation. The basic idea is to divide an image into two classes (foreground and background) based on a threshold value. The threshold value is chosen such that it minimizes the intra-class variance of the two classes. This method is particularly useful for images that have bimodal histograms, where the background and foreground pixels have distinct intensity levels. The threshold value is calculated by maximizing the inter-class variance. Otsu's thresholding is a simple and efficient method for image segmentation, and is widely used in image processing and computer vision applications. Inputs Input Input image(s). Type: Image, List, Required, Single Outputs Output Output mask(s). Type: Mask, List Threshold The threshold value found using Otsu's method. Type: Numeric Array, List Settings Bins Integer Set the number of image grayscale values, or bins, when finding the threshold. Use Bin Midpoint as Threshold Boolean Set threshold as the midpoint of the bin. If False, the end of the bin will be used. This has a small effect if the number of bins is large. See also Keywords: ", "tags": "", "url": "nodes.image.segmentation.otsu_thresholding.html"},
{"title": "Kittler-Illingworth Thresholding", "text": "Thresholding Assumes a Gaussian mixture model. Minimizes the number of misclassifications between the two normal distributions with the given means, variances and proportions. Inputs Input Input image(s). Type: Image, List, Required, Single Outputs Output Output mask(s). Type: Mask, List Threshold The threshold found by the Kittler-Illingworth method. Type: Numeric Array, List Settings Bins Integer Set the number of image grayscale values, or bins, when finding the threshold. See also References Kittler-Illingworth in SimpleITK Keywords: ", "tags": "", "url": "nodes.image.segmentation.kittler-illingworth_thresholding.html"},
{"title": "Huang Thresholding", "text": "Thresholding Threshold input image(s) with Huang’s fuzzy thresholding using Shannon’s entropy function. Inputs Input Input image(s). Type: Image, List, Required, Single Outputs Output Output mask(s). Type: Mask, List Threshold The threshold found by Huang's method. Type: Numeric Array, List Settings Bins Integer Set the number of image grayscale values, or bins, when finding the threshold. See also References Huang Threshold in SimpleITK Keywords: ", "tags": "", "url": "nodes.image.segmentation.huang_thresholding.html"},
{"title": "Li Thresholding", "text": "Thresholding Threshold an image using the Li Threshold, by minimizing the cross-entropy between the foreground and the foreground mean, and the background and the background mean. Inputs Input Input image(s). Type: Image, List, Required, Single Outputs Output Output mask(s). Type: Mask, List Threshold The threshold found by Li's method. Type: Numeric Array, List Settings Bins Integer Set the number of image grayscale values, or bins, when finding the threshold. See also Keywords: ", "tags": "", "url": "nodes.image.segmentation.li_thresholding.html"},
{"title": "Maximum Entropy Thresholding", "text": "Thresholding Choose threshold such that the entropies of distributions above and below threshold is maximised. Inputs Input Input image(s). Type: Image, List, Required, Single Outputs Output Output mask(s). Type: Mask, List Threshold The threshold found by maximizing intra-class entropy. Type: Numeric Array, List Settings Bins Integer Set the number of image grayscale values, or bins, when finding the threshold. See also Keywords: ", "tags": "", "url": "nodes.image.segmentation.maximum_entropy_thresholding.html"},
{"title": "Renyi Entropy Thresholding", "text": "Thresholding Choose threshold such that the entropies of distributions above and below threshold is maximised. Similar to Maximum Entropy Thresholding, but using a different entropy measure. Inputs Input Input image(s). Type: Image, List, Required, Single Outputs Output Output mask(s). Type: Mask, List Threshold The threshold found by Renyi entropy. Type: Numeric Array, List Settings Bins Integer Set the number of image grayscale values, or bins, when finding the threshold. See also Keywords: ", "tags": "", "url": "nodes.image.segmentation.renyi_entropy_thresholding.html"},
{"title": "Intermodes Thresholding", "text": "Thresholding Threshold an image with the Intermodes method. Iteratively smooths the histogram until only 2 peaks remain. Threshold is the midpoint of the two peaks. Not good for histograms with very unequal peaks. Inputs Input Input image(s). Type: Image, List, Required, Single Outputs Output Output mask(s). Type: Mask, List Threshold The threshold found using intermodes thresholding. Type: Numeric Array, List Settings Bins Integer Set the number of image grayscale values, or bins, when finding the threshold. See also Keywords: ", "tags": "", "url": "nodes.image.segmentation.intermodes_thresholding.html"},
{"title": "IsoData Thresholding", "text": "Thresholding Threshold an image with the IsoData method. Computes the average of voxels below initial threshold and above initial threshold. Threshold is set to the average of the two. Repeat until the threshold is larger than the composite average. Inputs Input Input image(s). Type: Image, List, Required, Single Outputs Output Output mask(s). Type: Mask, List Threshold The threshold found by the IsoData method. Type: Numeric Array, List Settings Bins Integer Set the number of image grayscale values, or bins, when finding the threshold. See also References IsoData Entropy Threshold in SimpleITK Keywords: ", "tags": "", "url": "nodes.image.segmentation.isodata_thresholding.html"},
{"title": "Triangle Thresholding", "text": "Thresholding The triangle method constructs a line between the histogram peak and the farthest end of the histogram. The threshold is the point of maximum distance between the line and the histogram.This implementation uses robust (1 % and 99 %) estimation of histogram ends. Inputs Input Input image(s). Type: Image, List, Required, Single Outputs Output Output mask(s). Type: Mask, List Threshold The threshold found by the triangle threshold method. Type: Numeric Array, List Settings Bins Integer Set the number of image grayscale values, or bins, when finding the threshold. See also References Triangle Threshold in SimpleITK Keywords: ", "tags": "", "url": "nodes.image.segmentation.triangle_thresholding.html"},
{"title": "Moments Thresholding", "text": "Thresholding Choose threshold such that the binary image has the same first three moments as the grey level image. Inputs Input Input image(s). Type: Image, List, Required, Single Outputs Output Output mask(s). Type: Mask, List Threshold Missing description. Type: Numeric Array, List Settings Bins Integer Set the number of image grayscale values, or bins, when finding the threshold. See also Keywords: ", "tags": "", "url": "nodes.image.segmentation.moments_thresholding.html"},
{"title": "Yen Thresholding", "text": "Thresholding Yen's thresholding is a method based a maximum correlation criterion. The criterion is based on the consideration of two factors. The first one is the discrepancy between the thresholded and original images and the second one is the number of bits required to represent the thresholded image. Based on a maximum correlation criterion for bilevel thresholding, the discrepancy is defined and then a cost function that takes both factors into account is proposed for multilevel thresholding. By minimizing the cost function, the classification number that the gray-levels should be classified and the threshold values can be determined automatically. Inputs Input Input image(s). Type: Image, List, Required, Single Outputs Output Output mask(s). Type: Mask, List Threshold Threshold found by Yen's thresholding. Type: Numeric Array, List Settings Bins Integer Set the number of image grayscale values, or bins, when finding the threshold. See also References Yen Threshold in SimpleITK Keywords: ", "tags": "", "url": "nodes.image.segmentation.yen_thresholding.html"},
{"title": "Shanbhag Thresholding", "text": "Thresholding The Shanbhag approach calculates the total entropy of each gray-level pixel and find the threshold that maximizes it. Inputs Input Input image(s). Type: Image, List, Required, Single Outputs Output Output mask(s). Type: Mask, List Threshold The threshold found by the Shanbhag threshold. Type: Numeric Array, List Settings Bins Integer Set the number of image grayscale values, or bins, when finding the threshold. See also References Shanbhag Threshold in SimpleITK Keywords: ", "tags": "", "url": "nodes.image.segmentation.shanbhag_thresholding.html"},
{"title": "Fast Marching", "text": "Fast Marching The fast marching method is a simple form of level-set evolution where only a positive speed term is used to govern the differential equation. The resulting level-set contour only grows over time. Practically, this algorithm can be used as an advanced region growing segmentation which is controlled by a speed image. A good propagation speed image for segmentation is close to zero near object boundaries and relatively high in between. The fast marching filter is initiated with an seed point or mask, which generates trial points. The trial points are the starting location of the level-set. The output of the fast marching filter is a time-crossing map that indicate the time of arrival of the propagated level-set front. Inputs Input The speed image should have values ~0 close to edges and relativly high inbetween. Usually a gradient magnitude filter followed by a sigmoid filter are appropriate. Type: Image, List, Required, Single Outputs Output The time crossing map produced by the fast marching filter. By thresholding the time-crossing map, different segmentations can be produced. Type: Image, List Settings Seed Source Selection Select whether the seed source should be supplied via indices, coordinates or input mask(s). Values: Indices, Coordinates, Mask Seed Coordinates [mm] Array Set seed position using coordinates in [mm], specified as [x, y, z]. Seed Indices [px] Array Set seed position using indeces in [px], specified as [i, j, k]. Stopping Value Float The algorithm can be terminated early by setting an appropriate stopping value. The algorithm terminates when the current arrival time being processed is greater than the stopping value. See also References The Fast Marching method implemented in SimpleITK Keywords: ", "tags": "", "url": "nodes.image.segmentation.fast_marching.html"},
{"title": "Shape Statistics", "text": "Shape Statistics Compute shape properties of input label map(s) or mask(s). The following properties are calculated: Property Description Elongation The ratio of the largest principal moment to the smallest principal moment. Its value is greater or equal to 1. Equivalent Ellipsoid Diameter The diameters of the ellipsoid with the same size and ratio of all the axes as the object. The value depends on the image spacing. Equivalent Spherical Perimeter The equivalent perimeter of a hypersphere with the same volume as the object. The value depends on the image spacing. Equivalent Spherical Radius The radius of a sphere with the same volume as the region. Feret Diameter The diameter of the sphere that inclues the region. Flatness Number of Pixels Number of pixels in the region. Number of Pixels on Border Number of pixels adjacent to a pixel with value FALSE. Perimeter Perimeter on Border Perimeter on Border Ratio Physical Size The volume of the region in physical units. Principal Axes The principal axes of the region. Principal Moments The principal moments of the region. Roundness The roundness of the object. Inputs Input Input Image(s) or Mask(s) Type: Image, Mask, List, Required, Single Outputs Output Table containing the shape statistics of the input. Type: Table Centroid Index A list containing the indices [i, j, k] of the center of mass for each mask or component. Type: Numeric Array Centroid Position A list containing the positions [x, y, z] of the center of mass for each mask or component. Type: Numeric Array Centroid Seeds A output labelmap or mask with a seed for each mask or labelmap. If the input is a mask, the seed output is TRUE at the center of mass of each mask and FALSE elsewhere. If the input is a labelmap, the center of mass of each labelmap is indicated by the value of that label. Type: Image See also Keywords: ", "tags": "", "url": "nodes.image.label_map.distance_and_overlap.shape_statistics.html"},
{"title": "Extract Components", "text": "Extract Components Extracts shapes, i.e. connected regions, from input labelmaps or mask(s) based on the following properties: Property Description Elongation The ratio of the largest principal moment to the smallest principal moment. Its value is greater or equal to 1. Equivalent Ellipsoid Diameter The diameters of the ellipsoid with the same size and ratio of all the axes as the object. The value depends on the image spacing. Equivalent Spherical Perimeter The equivalent perimeter of a hypersphere with the same volume as the object. The value depends on the image spacing. Equivalent Spherical Radius The radius of a sphere with the same volume as the region. Feret Diameter The diameter of the sphere that inclues the region. Flatness Number of Pixels Number of pixels in the region. Number of Pixels on Border Number of pixels adjacent to a pixel with value FALSE. Perimeter Perimeter on Border Perimeter on Border Ratio Physical Size The volume of the region in physical units. Principal Axes The principal axes of the region. Principal Moments The principal moments of the region. Roundness The roundness of the object. Inputs Input Input. Type: Mask, Image, List, Required, Single Outputs Output Output. Type: Mask, Image, List Settings Filter By Selection Select which shape statistic should be used for extracting a connected component from the input. Values: Elongation, Equivalent Spherical Perimeter, Equivalent Spherical Radius, Feret Diameter, Flatness, Number of Pixels, Number of Pixels on Border, Perimeter, Perimeter on Border, Perimeter on Border Ratio, Physical Size, Roundness Order By Selection Order the connected components according to a shape statistic either Ascending (smallest value first) or Descending (largest value first). Values: Ascending, Descending Keep num of Components Integer How many of the connected components to keep from the ordered shape statistic. To keep the largest component in an input, choose &ldquo;Filter By: Physical Size&rdquo;, &ldquo;Order: Physical Size&rdquo; and &ldquo;Keep num of Components: 1&rdquo;. Connectivity Selection Set whether the connected components are defined strictly by face connectivity or by face+edge+vertex (full) connectivity. Values: Face Connectivity, Full Connectivity See also Keywords: ", "tags": "", "url": "nodes.image.label_map.distance_and_overlap.extract_components.html"},
{"title": "Voronoi Diagram", "text": "Voronoi Diagram This node calculates the Voronoi diagram of an input LabelMap. A Voronoi diagram is a partition of a volume into regions close to each of the labels in the LabelMap. Inputs Input Missing description. Type: Image, List, Required, Single Outputs Voronoi Missing description. Type: Image Settings Distance unit Selection Select the unit of the Danielsson distance map. Values: mm, Voxels Use Squared Distances Boolean Output the squared distance. Inside is Positive Boolean If set to false, the inside distances of the mask are negative, and the outside distances are positive. If set to true, the inside distances of the mask are positive, and the outside distances are negative. See also Keywords: ", "tags": "", "url": "nodes.image.label_map.distance_and_overlap.voronoi_diagram.html"},
{"title": "Volumetric Overlap", "text": "Volumetric Overlap Computes volumetric overlap metrics between the same set of labels of voxels of two or more images. Background is assumed to be 0. Inputs Reference Reference label map Image(s). Type: Image, List, Required, Single Inputs Input label map Image(s). Type: Image, List, Required, Single Outputs Output Results. Type: Table, List Settings Slice-wise Boolean Calculate the volumetric overlap per slice. Slice Plane Selection Select the slice plane for slicewise calculation. Values: i-j, i-k, j-k Compare Input List Selection If Pairwise is selected, each element in the Reference list is compared to the corresponding element in the Input list. The two lists must be the same lenght. Output is a list of tables, one for each pair. If you want to have the information as a single table, use Merge Tables. If Against each Ref element is selected, the filter compares each reference volume to all volumes in the input list. If the reference input is a list, each element in that list will be compared to all elements in the input list, and the output will be a list of tables. Values: Pairwise, Against each Ref element See also Keywords: ", "tags": "", "url": "nodes.image.label_map.distance_and_overlap.volumetric_overlap.html"},
{"title": "Voting", "text": "Voting This node performs pixelwise voting for labels among an arbitrary number of input images, where each of them represents a segmentation of the same scene (i.e., image). Voting is a simple method of classifier combination applied to image segmentation. <!---Tooltip\NodeLabelMapVotingAnalysis\Voting is a simple method of classifier combination applied to image segmentation. ## Inputs :::box #### Inputs Input label map **Image(s)**. :::tiny Type: **Image**, List, Required, Single ::: ::: ## Outputs :::box #### Output Output label map **Image(s)** :::tiny Type: **Image** ::: ::: ## Settings :::box #### Analysis Selection **Within List** assumes that the input is a list containing segmentations of the same object, and performs the analysis within the input list. **Across Lists** assumes that there are at least two corresponding list inputs, where element *n* in each list are segmentations of the same object and performs the analysis across lists. Values: Within List, Across Lists Include Undecided Voxels Boolean Set undecided voxels to true or false. See also Keywords: ", "tags": "", "url": "nodes.image.label_map.distance_and_overlap.voting.html"},
{"title": "Otsu Multi-Thresholding", "text": "Otsu Multi The Otsu multiple thresholds filter is a thresholding algorithm that is used to separate the pixels of an input image into several different labels (or classes), each one obtained according to the intensity of the gray levels within the image. For example, by setting the desired number of thresholds to 2 you will get 3 classes such as dark voxels, bright voxels and intermediate voxels. Note: This filter becomes quite slow around \(n=5\). Inputs Input Input image(s). Type: Image, List, Required, Single Outputs Output Output image(s). Type: Image Threshold Found thresholds in a Numeric Array array. Type: Numeric Array Settings Number of Thresholds Integer Set number of thresholds \(n\). The number of labels in the resulting label map will be \(n+1\). Bins Integer Set the number of image gryscale values, or bins, when finding the threshold. Use Bin Midpoint as Threshold Boolean Set threshold as the midpoint of the bin. If false, the end of the bin will be used. This has a small effect if the number of bins is large. See also References Otsu multi threshold in SimpleITK Keywords: ", "tags": "", "url": "nodes.image.label_map.otsu_multi-thresholding.html"},
{"title": "Elastix Registration", "text": "Registration Uses elastix to register images using specified parameters. It requires at least one fixed and one moving image as input, and will output the moving image registered and resampled to the fixed image coordinate system, as well as the registration transform and the progress. The default registration method is rigid multimodal registration using mutual information. The parameters are saved with the Registration (Elastix) node in the workflow (.ice-file). Parameters can also be imported from a .txt file from within the Parameter editor. For more information about elastix, visit their homepage or look at Image registration for a brief overview. Inputs Fixed Fixed Image. Type: Image, List, Required, Single Moving Moving Image. Type: Image, List, Optional, Single Outputs Output Moving image registered and resampled to the fixed image coordinate system. Type: Image T(x) The final transformation found during the registration. Type: Struct Progress Progress metrics, such as Time, Metric value etc. Type: List of Lists Settings Inputs Fixed Mask Boolean Use a fixed mask to restrict the registration optimizer to a specific region in the fixed image. Moving Mask Boolean Use a moving mask to restrict the registration optimizer to a specific region in the moving image. Landmarks Boolean Use fixed and moving landmarks. Initial Transform Boolean Use an initial transform. Auxiliary Image Boolean Use an auxiliary image to guide the registration. It can describe e.g. the rigidity of the moving image. The use of the auxiliary image is defined in the Elastix Parameters by using the input name, e.g. &lsquo;AUX0&rsquo;. Num Aux Images Integer Set the number of auxiliary images to be used in the registration. Outputs Image Boolean Define if the node will return an image output. Progress Boolean Define if the node will return registration progress information. Configure Registration 2D/2D Reg Boolean Use this option to register 2D images. Multi-Metric Reg Boolean Use this option to register a set of fixed and moving images simultaneously using different metrics simultaneously. A metric needs to be specified for each pair of fixed and moving images. Number Of Metrics Integer Set the number of metrics to be used in the registration. Each metric requires one pair of images. Groupwise Reg Boolean Use this option to register a time series simultaneously to all 3D volumes in the moving input. This incorporates all image information in registration process and eliminates bias towards a chosen reference frame. Parameter Source Source Selection How to set the registration parameters. Settings lets you define the parameters directly in the node settings. Load Parameter File lets you import a parameter file from disk. Parameters Editor lets you open an editor where you can define the parameters using elastix syntax. From Input lets you connect a Structure containing elastix parameters. Values: Settings, Load Parameter File, Parameters Editor, From Input Paramter File Filepath Specify the filepath to the paramater file. Templates Selection Choose a template for the registration parameters. The default parameters for each template can be changed in the settings. Values: Affine (Affine Matrix), Affine (Rot+Shear+Scale+Trans), Non-Rigid, Rigid Time Series, Rigid Editor Elastix Parameters Open the editor. You can access it by double clicking the node as well. Components Transform Selection Choose which transform to use. Values: Translation, Rigid, Similarity, Affine, Affine (R+H+S+T), BSplines Metric Selection Choose which metric to use. Values: Mean Squares Difference, Normalized Correlation Coefficient, Mutual Information, Normalized Mutual Information, Kappa Statistics Transform Settings BSplines Grid Spacing [mm] Numbers Set the resolution of the Bsplines grid in [mm]. Metric Settings Number of Bins Integers Set the number of bins used by the metric. Be mindful of intensity outliers in the input image, e.g. a metallic implant in a CT image which has significantly higher intensity than the tissue. Such images can be clipped before registering to improve the registration quality. Bending Penalty Boolean Use bending energy penalty. See elastix documentation for further information. Penalty Weight Numbers Set the relative weights of the metrics. Sampler Settings Number of Samples Integers Set the number of samples to calculate the metric for. Number of Sampling Attempts Integers A certain fraction of valid samples (i.e. samples that are within the moving image buffer) are required to give a valid result. If a valid results is not obtained, the sampler will try again for the number of times specified. Fraction of Valid Samples Numbers Specify the number of valid samples (i.e. samples that are within the moving image buffer) required for a valid result. Pyramid Settings Pyramid Steps Integer Set the number of downsampling steps to use in the registration. Fixed Pyramid Scaling Integers Set the downsampling divisor for each pyramid step, specified as a Numeric Array of integers. Moving Pyramid Scaling Integers Set the downsampling divisor for each pyramid step, specified as a Numeric Array of integers. Fixed Sampling Selection Set the sampling strategy for the fixed image pyramid. Values: Smoothing and Downsampling, Smoothing, Downsampling Moving Sampling Selection Set the sampling strategy for the moving image pyramid. Values: Smoothing and Downsampling, Smoothing, Downsampling General Settings Initial Alignment Boolean Use initial alignment as a starting point for the registration process. Number of Iterations Integers Set the number of iterations for each step in the image pyramid. Extrapolation Voxel Value Float Set the voxel value that should be applied to voxels outside of the moving image if those voxels are moved into the fixed frame of referece. Resampling Order Selection Set the order of the final resampling. Values: Nearest Neighbour, Linear, BSpline Order 2, BSpline Order 3 See also References Klein, M. Staring, K. Murphy, M.A. Viergever, J.P.W. Pluim, &ldquo;elastix: a toolbox for intensity based medical image registration&rdquo;, IEEE Transactions on Medical Imaging, vol. 29, no. 1, pp. 196 - 205, January 2010. D.P. Shamonin, E.E. Bron, B.P.F. Lelieveldt, M. Smits, S. Klein and M. Staring, &ldquo;Fast Parallel Image Registration on CPU and GPU for Diagnostic Classification of Alzheimer’s Disease&rdquo;, Frontiers in Neuroinformatics, vol. 7, no. 50, pp. 1-15, January 2014. Keywords: rigid, affine, transform ", "tags": "", "url": "nodes.image.registration.elastix_registration.html"},
{"title": "Get Elastix Parameters", "text": "Get Elastix Parameters Get Elastix Parameters as a Structure. The Elastix registration is governed by a set of Elastix Parameters, describing e.g. the metric, transforms and so on. This is usually set in the Elastix node settings. The settings parameters can also be represented as a Structure. This allows the user to change specific aspects of the registration e.g. when batching, or by some property of the input images. Outputs Output The output Elastix Parameters. Type: Struct Settings Parameter Source Source Selection Set the source of the output parameters. Values: Settings, Load Parameter File, Parameters Editor Paramter File Filepath Load parameter file from disk. Templates Selection Use a predefined template to generate the output. Values: Affine (Affine Matrix), Affine (Rot+Shear+Scale+Trans), Non-Rigid, Rigid Time Series, Rigid Editor Elastix Parameters Use the Parameter Editor to generate the output Parameters. Components Transform Selection Choose which transform to use. Values: Translation, Rigid, Similarity, Affine, Affine (R+H+S+T), BSplines Metric Selection Choose which metric to use. Values: Mean Squares Difference, Normalized Correlation Coefficient, Mutual Information, Normalized Mutual Information, Kappa Statistics Transform Settings BSplines Grid Spacing [mm] Numbers Set the resolution of the Bsplines grid in [mm]. Metric Settings Number of Bins Integers Set the number of bins used by the metric. Be mindful of intensity outliers in the input image, e.g. a metallic implant in a CT image which has significantly higher intensity than the tissue. Such images can be clipped before registering to improve the registration quality. Bending Penalty Boolean Use bending energy penalty. See elastix documentation for further information. Penalty Weight Numbers Set the relative weights of the metrics. Sampler Settings Number of Samples Integers Set the number of samples to calculate the metric for. Number of Sampling Attempts Integers A certain fraction of valid samples (i.e. samples that are within the moving image buffer) are required to give a valid result. If a valid results is not obtained, the sampler will try again for the number of times specified. Fraction of Valid Samples Numbers Specify the number of valid samples (i.e. samples that are within the moving image buffer) required for a valid result. Pyramid Settings Pyramid Steps Integer Set the number of downsampling steps to use in the registration. Fixed Pyramid Scaling Integers Set the downsampling divisor for each pyramid step, specified as a Numeric Array of integers. Moving Pyramid Scaling Integers Set the downsampling divisor for each pyramid step, specified as a Numeric Array of integers. Fixed Sampling Selection Set the sampling strategy for the fixed image pyramid. Values: Smoothing and Downsampling, Smoothing, Downsampling Moving Sampling Selection Set the sampling strategy for the moving image pyramid. Values: Smoothing and Downsampling, Smoothing, Downsampling General Settings Initial Alignment Boolean Use initial alignment as a starting point for the registration process. Number of Iterations Integers Set the number of iterations for each step in the image pyramid. Extrapolation Voxel Value Float Set the voxel value that should be applied to voxels outside of the moving image if those voxels are moved into the fixed frame of referece. Resampling Order Selection Set the order of the final resampling. Values: Nearest Neighbour, Linear, BSpline Order 2, BSpline Order 3 See also Keywords: ", "tags": "", "url": "nodes.image.registration.get_elastix_parameters.html"},
{"title": "Export Elastix Parameters", "text": "Export Elastix Parameters Export Elastix parameter to file. Inputs Input Elastix Parameters. Type: Struct, Required, Single Settings Folder Path Output folder. File Text Output filename. Overwrite Boolean Overwrite existing file. See also Keywords: ", "tags": "", "url": "nodes.image.registration.export_elastix_parameters.html"},
{"title": "Create Translation Transform", "text": "Transform A translation transform is a linear transform that moves an object in a coordinate system in a given direction, without any rotation, scaling or shearing. The transform has three parameters; the translation in the x, y and z directions. Outputs T(x) Resulting transform. Type: Struct List Settings Configure Extrapolation Value Float The default voxel value for voxels outside the Frame of Reference. New Frame of Reference Boolean The Frame of Reference describes the position, orientation, matrix size, and voxel size, of the transformed input. Initial Transform Boolean Add an initial transform to the output. Parameters Translation [mm] Numbers The translation vector [x, y, z] of the transform. See also Keywords: ", "tags": "", "url": "nodes.image.transform.create_transforms.create_translation_transform.html"},
{"title": "Create Rigid Transform", "text": "Transform A rigid transform is a linear transform that moves and rotates an object in a coordinate system. The transform has six parameters; the translation in the x, y and z directions; and a 3D rotation which can be represented by three parameters in a number of different ways. Outputs T(x) Resulting transform. Type: Struct Settings Configure Extrapolation Value Number The default voxel value for voxels outside the Frame of Reference. New Frame of Reference Boolean The Frame of Reference describes the position, orientation, matrix size, and voxel size, of the transformed input. Initial Transform Boolean Add an initial transform to the output. Rotation Rotational Representation Selection Select input rotation representation. Rotation Axis and Angle describes a rotation around an axis defined by a vector. The input vector does not have to be normalized. This is the default representation. Rotation Matrix describes the rotation as a 3x3 orthogonal matrix. The rotation matrix must have a determinant of 1. Euler Angles describes intrinsic rotation around three principal axes X, Y, Z, which can be described as yaw, pitch, and roll. Intrinsic rotation means that the rotations occur about the axes of a coordinate system that is attached to the moving body. The order in which the rotations are applied is important. Two options are available: ZXY and ZYX. Values: Rotation Axis and Angle, Rotation Matrix, Euler Angles (ZXY), Euler Angles (ZYX) Rotational Axis 3D Vector The axis of rotation, described as a vector. The input does not have to be normalized. Rotational Angle [rad] Number The rotation in radians around the axis of rotation. Rotation Matrix Array The matrix must be orthogonal with a determinant of 1. Euler Angles [rad] Numbers Set the rotation as described by Euler angles around X, Y and Z. Center Of Rotation [mm] Numbers The coordinate around which the rotation is defined. Parameters Translation [mm] Numbers The translation vector of the transform. See also Keywords: ", "tags": "", "url": "nodes.image.transform.create_transforms.create_rigid_transform.html"},
{"title": "Create Similarity Transform", "text": "Transform A similarity transform is a geometric transformation in which an object is scaled, rotated, and translated, preserving its shape. It is a combination of a scaling, rotation, and translation, and can be represented by a single matrix. The similarity transform preserves the ratios of distances between points and the angles between lines in the original object. Outputs T(x) Resulting transform. Type: Struct Settings Configure Extrapolation Value Number The default voxel value for voxels outside the Frame of Reference. New Frame of Reference Boolean The Frame of Reference describes the position, orientation, matrix size, and voxel size, of the transformed input. Initial Transform Boolean Add an initial transform to the output. Rotation Rotational Representation Selection Select input rotation representation. Rotation Axis and Angle describes a rotation around an axis defined by a vector. The input vector does not have to be normalized. This is the default representation. Rotation Matrix describes the rotation as a 3x3 orthogonal matrix. The rotation matrix must have a determinant of 1. Euler Angles describes intrinsic rotation around three principal axes X, Y, Z, which can be described as yaw, pitch, and roll. Intrinsic rotation means that the rotations occur about the axes of a coordinate system that is attached to the moving body. The order in which the rotations are applied is important. Two options are available: ZXY and ZYX. Values: Rotation Axis and Angle, Rotation Matrix, Euler Angles (ZXY), Euler Angles (ZYX) Rotational Axis 3D Vector The axis of rotation, described as a vector. The input does not have to be normalized. Rotational Angle [rad] Number The rotation in radians around the axis of rotation. Rotation Matrix Array The matrix must be orthogonal with a determinant of 1. Euler Angles [rad] Numbers Set the rotation as described by Euler angles around X, Y and Z. Center Of Rotation [mm] Numbers The coordinate around which the rotation is defined. Parameters Translation [mm] Numbers The translation vector of the transform. Uniform Scale Number The uniform scaling of the transform. See also Keywords: ", "tags": "", "url": "nodes.image.transform.create_transforms.create_similarity_transform.html"},
{"title": "Create Affine Transform", "text": "Transform An affine transform is a linear transform that moves, rotates, scales and shears an object in a coordinate system. The transform has twelve parameters; the translation in the x, y and z directions; a 3D rotation which can be represented by three parameters in a number of different ways; the scaling in the x, y, and z directions; and the shear in the x, y, and z directions. Outputs T(x) Resulting transform. Type: Struct Settings Configure Extrapolation Value Number The default voxel value for voxels outside the Frame of Reference. New Frame of Reference Boolean The Frame of Reference describes the position, orientation, matrix size, and voxel size, of the transformed input. Initial Transform Boolean Add an initial transform to the output. Rotation Rotational Representation Selection Select input rotation representation. Rotation Axis and Angle describes a rotation around an axis defined by a vector. The input vector does not have to be normalized. This is the default representation. Rotation Matrix describes the rotation as a 3x3 orthogonal matrix. The rotation matrix must have a determinant of 1. Euler Angles describes intrinsic rotation around three principal axes X, Y, Z, which can be described as yaw, pitch, and roll. Intrinsic rotation means that the rotations occur about the axes of a coordinate system that is attached to the moving body. The order in which the rotations are applied is important. Two options are available: ZXY and ZYX. Values: Rotation Axis and Angle, Rotation Matrix, Euler Angles (ZXY), Euler Angles (ZYX) Rotational Axis 3D Vector The axis of rotation, described as a vector. The input does not have to be normalized. Rotational Angle [rad] Number The rotation in radians around the axis of rotation. Rotation Matrix Array The matrix must be orthogonal with a determinant of 1. Euler Angles [rad] Numbers Set the rotation as described by Euler angles around X, Y and Z. Center Of Rotation [mm] Numbers The coordinate around which the rotation is defined. Parameters Translation [mm] Numbers The translation vector of the transform. Uniform Scale Number The uniform scaling of the transform. Scale Numbers The scaling parameters in the x, y, and z directions. Shear Numbers The shear parameters in the x, y, and z directions. See also Keywords: ", "tags": "", "url": "nodes.image.transform.create_transforms.create_affine_transform.html"},
{"title": "Create BSpline Transform", "text": "Transform A BSpline transform is a non-rigid transform that is defined by a grid of control points. Inputs BSpline Defines the control points of the transform. The input must be a 4D image with three elements in the last channel. Each voxel position is a control point with the three elements describing the deformation in that point. Type: Image, List, Required, Single Outputs T(x) Resulting transform. Type: Struct Settings Configure Extrapolation Value Number The default voxel value for voxels outside the Frame of Reference. Spline Order Integer The spline order can take a value between 1 and 3. New Frame of Reference Boolean The Frame of Reference describes the position, orientation, matrix size, and voxel size, of the transformed input. Initial Transform Boolean Add an initial transform to the output. See also Keywords: ", "tags": "", "url": "nodes.image.transform.create_transforms.create_bspline_transform.html"},
{"title": "Create Deformation Field Transform", "text": "Transform Create a deformation field transform, defined as a vector field that maps coordinates in the input domain to the output domain. Inputs Deformation Field The deformation vector field. The input can be a ND image, where the last channel must contain 3 elements. Type: Image, List, Required, Single Outputs T(x) Resulting transform. Type: Struct Settings Configure Extrapolation Value Number The default voxel value for voxels outside the Frame of Reference. New Frame of Reference Boolean The Frame of Reference describes the position, orientation, matrix size, and voxel size, of the transformed input. Initial Transform Boolean Add an initial transform to the output. See also Keywords: ", "tags": "", "url": "nodes.image.transform.create_transforms.create_deformation_field_transform.html"},
{"title": "Get Deformation Field", "text": "Get Deformation Field Get a deformation field transform from an existing transform. Inputs T(x) Input transform. Type: List of Lists, Struct, List, Required, Single Outputs T(x) Resulting Deformation Field transform. Type: Struct Deformation Field Deformation field represented as a 4D or 5D image, where the last channel has three elements and hold the vector field information. Type: Image Settings Configure Extrapolation Value Number The default voxel value for voxels outside the Frame of Reference. New Frame of Reference Boolean The Frame of Reference describes the position, orientation, matrix size, and voxel size, of the transformed input. Initial Transform Boolean Add an initial transform to the output. See also Keywords: ", "tags": "", "url": "nodes.image.transform.create_transforms.get_deformation_field.html"},
{"title": "Import Elastix Transform from File", "text": "Import Transform Import an Elastix transform from file. Outputs Output Imported transform. Type: Struct, Struct List Settings File Path Filepath Path to the transform file to be imported. Ignore Initial Transform Boolean Ignore initial transforms in the imported transform file. See also Keywords: ", "tags": "", "url": "nodes.image.transform.create_transforms.import_elastix_transform_from_file.html"},
{"title": "Export Elastix Transform to File", "text": "Export Transform Export an input transform to file, in the Elastix format. Inputs Input Input transform. Type: List of Lists, Struct, List, Required, Single Settings File Text Transform file name. Folder Path Output path. Ignore Initial Transform Boolean Ignore initial transforms in the exported transform file. See also Keywords: ", "tags": "", "url": "nodes.image.transform.create_transforms.export_elastix_transform_to_file.html"},
{"title": "Apply Transform", "text": "Apply Transform Apply one or more transforms to an input image, mask, numeric array with coordinates or a contour set. A numeric array with coordinates must be on the form Nx3. Inputs Input Input Image, Mask, Numeric Array or Contours. Type: Mask, Image, Numeric Array, Contour, List, Required, Single Transform Input transform. Type: List of Lists, Struct, List, Required, Single Outputs Output Resulting output. Type: Mask, Image, Numeric Array, Contour, List Settings Configure New Resample Reference Boolean Override the Input Transform Frame of Reference. This setting redefines in which space the result will be represented in. Image/Mask Settings Interpolator Selection Choose an appropriate interpolator for your task: Nearest Neighbour and Linear: These methods are the fastest but offer the least accuracy. Windowed Sinc: Provides more accurate results but is slower in comparison. Important Note: When transforming binary masks, always use the Nearest Neighbour interpolator to maintain accuracy. This setting applies only to images and masks. Contours and coordinates do not undergo any interpolation. Values: Nearest Neighbour, Linear, BSpline Order 2, BSpline Order 3, BSpline Order 4, BSpline Order 5, Gaussian, Hamming Windowed Sinc, Cosine Windowed Sinc, Welch Windowed Sinc, Lanczos Windowed Sinc, Blackman Windowed Sinc Contours/Point Settings Transform Direction Selection This setting allows you to specify the direction of the transform with two options: Moving to Fixed (default): Automatically inverts the transform, ensuring accurate alignment when transferring data from the moving (source) to the fixed (target) Frame of Reference. Fixed to Moving: Applies the transform directly without inversion. The direction setting is crucial because transforms affect images/masks and coordinates/contours differently. Images and masks are rendered in the fixed (target) Frame of Reference, whereas coordinates and contours are transformed from the fixed to the moving Frame of Reference. This means that coordinates and contours often require the inverse transform to accurately &ldquo;follow&rdquo; the image as it moves to a new frame of reference. Note that there is a separate setting, Invert Deformation Field Settings, which controls the inversion of nonlinear transforms. Values: Fixed To Moving, Moving To Fixed Invert Deformation Field Settings Invert a nonlinear transform using an iterative method, described here. Maximum Iterations Integer Maximum number of iterations. Mean Error Tol Decimal Number Mean Error Tolerance for the inverted displacement field. Max Error Tol Decimal Number Max Error Tolerance for the inverted displacement field. Enforce Boundary Cond Boolean Enables or disables boundary condition enforcement. See also Keywords: ", "tags": "", "url": "nodes.image.transform.apply_transform.html"},
{"title": "Resample to Reference", "text": "Resample Resample an input image or mask to a reference coordinate system. The reference coordinate system can be defined by another image or mask, or by a Frame of Reference structure. Inputs Input Input image or mask. Type: Mask, Image, List, Required, Single Reference Reference coordinate system. Type: Mask, Image, List, Required, Single Outputs Output Resulting resampled input. Type: Image Settings Interpolator Selection Select the interpolator. Nearest neighbour and linear transforms are fast, but give the least accurate results. Windowed sinc methods are more accurate, but are also slower. Values: Nearest Neighbour, Linear, BSpline Order 2, BSpline Order 3, BSpline Order 4, BSpline Order 5, Gaussian, Hamming Windowed Sinc, Cosine Windowed Sinc, Welch Windowed Sinc, Lanczos Windowed Sinc, Blackman Windowed Sinc Extrapolation Value Float Value of extrapolated voxels. See also Keywords: ", "tags": "", "url": "nodes.image.transform.resample_to_reference.html"},
{"title": "Invert Transform", "text": "Invert Transform Get the inverse of a transform or a list of transforms, including initial transforms. An inverse transform changes the direction of the transform. If the transform is the result of an image registration, the transform maps the moving image onto the fixed image. The inverse transform maps the fixed image onto the moving image. Linear transforms (Translation, Rigid, Similarity and Affine transforms) have analytical solutsions to the inverse transforms, whereas non-rigid transforms in general do not. If a transform or any of the initial transforms is a non-linear transform, the inverse of all transforms combined will be estimated using the InvertDisplacementFieldImageFilter. Inputs Input Input transform. Type: List of Lists, Struct, List, Required, Single Outputs Output Resulting inverse transform. Type: List of Lists, Struct, List Settings Invert Deformation Field Settings Maximum Iterations Integer Maximum number of iterations when estimating the inverse deformation field. Mean Error Tol Float Mean Error Tolerance for the inverted displacement field. Max Error Tol Float Max Error Tolerance for the inverted displacement field. Enforce Boundary Cond Boolean Enables or disables boundary condition enforcement. See also Keywords: ", "tags": "", "url": "nodes.image.transform.invert_transform.html"},
{"title": "Resample: Voxel Size", "text": "Resample Resample the input image or mask to a new resolution, using a user specified voxel size. Select if the resulting image share the same origin as the input, or the same center. The difference is illustrated in the figure below. The blue image grid represents the input, where the circles mark the center of each voxel. The orange image grid represents two ways to align the output. Aligning the origin means aligning the center position of the first voxel in the image, and aligning the center means aligning the center positions of the input and the output. If you choose to align the center positions of the images, the origin of the output will be different from the input. Inputs Input Input. Type: Mask, Image, List, Required, Single Outputs Output Resampled input. Type: Mask, Image, List Settings Voxel Size [mm] Numbers Set the new voxel size. Extrapolation Value Float Set values for voxels in the output image that is outside the field-of-view of the input image. Position Selection Select alignment of the output image. Values: Align Centers, Align Origins Interpolator Selection Select the interpolator. Nearest neighbour and linear transforms are fast, but give the least accurate results. Windowed sinc methods are more accurate, but are also slower. Values: Nearest Neighbour, Linear, BSpline Order 2, BSpline Order 3, BSpline Order 4, BSpline Order 5, Gaussian, Hamming Windowed Sinc, Cosine Windowed Sinc, Welch Windowed Sinc, Lanczos Windowed Sinc, Blackman Windowed Sinc See also Keywords: ", "tags": "", "url": "nodes.image.transform.resample_voxel_size.html"},
{"title": "Resample: Matrix Size", "text": "Resample Resample the input image or mask to a new resolution, using a user specified matrix size. Select if the resulting image share the same origin as the input, or the same center. The difference is illustrated in the figure below. The blue image grid represents the input, where the circles mark the center of each voxel. The orange image grid represents two ways to align the output. Aligning the origin means aligning the center position of the first voxel in the image, and aligning the center means aligning the center positions of the input and the output. If you choose to align the center positions of the images, the origin of the output will be different from the input. Inputs Input Input. Type: Mask, Image, List, Required, Single Outputs Output Output. Type: Mask, Image, List Settings Matrix Size [px] Integers Set the new matrix size. Extrapolation Value Float Set values for voxels in the output image that is outside the field-of-view of the input image. Position Selection Select alignment of the output image. Values: Align Centers, Align Origins Interpolator Selection Select the interpolator. Nearest neighbour and linear transforms are fast, but give the least accurate results. Windowed sinc methods are more accurate, but are also slower. Values: Nearest Neighbour, Linear, BSpline Order 2, BSpline Order 3, BSpline Order 4, BSpline Order 5, Gaussian, Hamming Windowed Sinc, Cosine Windowed Sinc, Welch Windowed Sinc, Lanczos Windowed Sinc, Blackman Windowed Sinc See also Keywords: ", "tags": "", "url": "nodes.image.transform.resample_matrix_size.html"},
{"title": "Rotate Image", "text": "Rotate Rotate input images or masks along any of the three principal image axes. Inputs Input Input image or mask. Type: Mask, Image, List, Required, Single Outputs Output Resulting image after rotation. Type: Mask, Image, List T(X) The resulting transform. Type: Struct Settings Direction Selection Set direction of rotation. Values: Clockwise, Counter-clockwise Angle [°] Float Rotation angle in degrees. Axis Selection Select the principal axis around which to rotate the image. Values: i, j, k Extrapolation Value Float Set voxel values for extrapolated voxels. Interpolator Selection Select the interpolator. Nearest neighbour and linear transforms are fast, but give the least accurate results. Windowed sinc methods are more accurate, but are also slower. Values: Nearest Neighbour, Linear, BSpline Order 2, BSpline Order 3, BSpline Order 4, BSpline Order 5, Gaussian, Hamming Windowed Sinc, Cosine Windowed Sinc, Welch Windowed Sinc, Lanczos Windowed Sinc, Blackman Windowed Sinc See also Keywords: ", "tags": "", "url": "nodes.image.transform.rotate_image.html"},
{"title": "Get Slices", "text": "Get Slices Get a range of slices from an image or a mask. The start and stop slices can be defined by the 0-based slice index, and the slice orientation can be i, j or k. The zero-based slice index can be positive or negative integers, or the keyword end. Example 1: Get the first 4 slices from an input. Start index: 0, Stop index: 3, Slice orientation: k. Example 2: Get the 4 last slices from an input: Start index: end - 3, Stop index: end, Slice orientation: k. or Start index: end - 3, Stop index: -1, Slice orientation: k. Example 3: Remove the first and last slice: Start index: 1, Stop index: end - 1, Slice orientation: k. or Start index: 1, Stop index: -2, Slice orientation: k. Inputs Input Input timage or mask. Type: Mask, Image, List, Required, Single Outputs Output Output. Type: Mask, Image, List Settings Start Slice Text Define the first slice of the output. Stop Slice Text Define the last slice of the output. Slice Orientation Selection Select the slice direction. Default option is k, and represent axial slices in an axial image, sagittal slices in a sagittal image or coronal slices in a coronal image. Values: k, j, i See also Keywords: ", "tags": "", "url": "nodes.image.reshape.get_slices.html"},
{"title": "Get Volumes", "text": "Get Volumes Get a range of 3D volumes from an input image or mask. The start and stop volumes can be defined by channel, using a 0-based slice index. The zero-based slice index can be positive or negative integers, or the keyword end. Example 1: Get the first 4 volumes from channel 0 from an 4D input. Channel 0: Start index: 0, Stop index: 3. Example 2: Get the first 4 volumes from channel 0 and the second volume from channel 1, from a 5D input. Channel 0: Start index: 0, Stop index: 3. Channel 1: Start index: 1, Stop index: 1. Inputs Input Input image or mask. Type: Mask, Image, List, Required, Single Outputs Output Resulting output. Type: Mask, Image, List Settings Channel 0 Start Text First volume index. Stop Text Last volume index. Squeeze If Singleton Boolean Squeeze channel if singleton. A singleton channel is a channel with only 1 element. If this option is set to true, singleton dimensions will be removed in the output. Configure Add Channel Button Add selection for the next channel. Remove Channel Button Remove selection for the last channel. See also Keywords: Frames, &ldquo;Get Frames&rdquo; ", "tags": "", "url": "nodes.image.reshape.get_volumes.html"},
{"title": "Get Subvolume", "text": "Get Subvolume Get a subset of an input image or mask. This is a general node, where you can extract a subset of the input data in spatial dimension as well as from the channels. The position and channel information will be updated to reflect the correct position and channel data in the output. The slicing can be input an explicit mode, where each slice dimension and the channel data are defined in separate fields; or in a condensed mode, where all indices are defined in one field. Example 1: Extract a subset of input data Input shape: [128, 128, 12, 5, 8] Explicit: Slice Dimension i: 10:end Slice Dimension j: 30:49 Slice Dimension k: 2:7 Select Channels: 0:2, 3:3 Condensed: Select Subimage: [10:end, 30:49, 2:7, 0:2, 3:3] Output shape: [118, 20, 6, 3, 1] Inputs Input Input image or mask. Type: Mask, Image, List, Required, Single Outputs Output Resulting subvolume. Type: Mask, Image, List Settings Method Selection Define the slice input method. Explicit lets you define the slicing for each spatial dimenion and the channels separately, whereas Condensed lets you define the slicing in one string. Values: Explicit, Condensed Slice Dimension i Text Slicing for dimension i. Slice Dimension j Text Slicing for dimension j. Slice Dimension k Text Slicing for dimension k. Select Channels Text Slicing for the channels. Select Subimage Text Slicing for the entire image. This field will reflect the selections in the Explicit mode, but will be read-only. See also Keywords: ", "tags": "", "url": "nodes.image.reshape.get_subvolume.html"},
{"title": "Create Patches", "text": "Create Patches Extract patches with a user-defined shape from the input data, and return the patches in an output list. Inputs Input Input image or mask. Type: Mask, Image, Required, Single Outputs Output Output list of patches. Type: Mask, Image, List Settings Patch size Integers If any dimension of the patch size is not divisible by the input spatial shape, the output shape and list size can be handled in 3 ways: Exact: The last patch in each dimension will be smaller than the defined patch size. Pad: The last patch in each dimension will be padded with a pad value, so that each patch is the defined size. Crop: The last patches in each dimension will be discarded. Values: Exact, Pad, Crop Pad value Integer Pad value that will be used if Pad is selected as the Match size criterion. See also Keywords: ", "tags": "", "url": "nodes.image.reshape.create_patches.html"},
{"title": "Merge Patches", "text": "Merge Patches Merge a list of patches generated using the Create Patches node. Inputs Input List of patches. Type: Image, Mask, List, Required, Single Outputs Output Reconstructed image. Type: Image, Mask Settings Image Spatial Shape Integers The spatial shape of the output image (should be the same as the size of the input to the Create Patches node used to produce the patches. Match Patch Size Selection Set to the same setting as used in Create Patches when creating the patches. Values: Exact, Padded, Cropped Pad value Integer When cropping was used for creating the patches, padding is required to reconstruct the defined image spatial shape. Set the padding value for this scenario. See also Keywords: ", "tags": "", "url": "nodes.image.reshape.merge_patches.html"},
{"title": "Create Mosaic", "text": "Create Mosaic Creates a 2D mosaic layout from a multi-slice or multi-channel image/mask. The mosaic arranges the slices or channels in a grid pattern with a specified number of columns. This is useful for visualizing multiple slices or channels simultaneously in a single 2D view. Inputs Input The image or mask to create a mosaic from. Can be either a single image/mask or a list of images/masks. Type: Image List, Mask List, Required, Single Outputs Output The resulting mosaic image/mask. If the input is a list, outputs a list of mosaic images/masks. Type: Image, Mask Settings Number of Columns Integer Specifies how many columns the mosaic should have. The slices/channels will be arranged row by row, filling each row with this many columns before starting a new row. Default: 5 Minimum: 1 Can be connected as input: Yes Dimension Selection Specifies whether to create the mosaic from slices or a specific channel. Values: Slice, Channel Default: Slice Channel Integer When Dimension is set to &ldquo;Channel&rdquo;, specifies which channel to use for creating the mosaic. Only visible when Channel dimension is selected. Default: 0 Minimum: 0 Can be connected as input: Yes Visibility: Only when Dimension = Channel Details The node processes the input in the following steps: Splits the input along the selected dimension (slices or specified channel) Arranges the split parts into rows based on the specified number of columns Combines the arranged parts into a single 2D mosaic image/mask Example Uses Viewing multiple slices of a 3D image in a single 2D layout Comparing different channels of a multi-channel image in a grid view Creating thumbnail grids of image sequences Generating overview visualizations of 3D or multi-channel data See also Keywords: mosaic, montage, grid, visualization, layout, slice view, channel view, tiling, tile ", "tags": "", "url": "nodes.image.reshape.create_mosaic.html"},
{"title": "Split Image", "text": "Split Split an Image or Mask along a specific spatial dimension or channel into blocks of a predefined size, and return result as a list. Example 1 Return all slices of an image in a list: Split Along: k, Block Size: 1 Example 2 Split 4D mask with 60 volumes into 12 images with 5 volumes each: Split Along: Channel, Channel: 0, Block Size: 5 Inputs Input Input image or mask Type: Image, Mask, List, Required, Single Outputs Output Resulting list of subvolumes. Type: Image, Mask, List Of Lists, List Settings Configure Split Along Selection Define the dimension where the input is split. Values: i, j, k, Channels Splitting Channel Integer Set the channel number. Block Size Integer Set the block size. See also Keywords: ", "tags": "", "url": "nodes.image.reshape.split_image.html"},
{"title": "Stack Images", "text": "Stack Stack Images or Masks along a specific spatial dimension or channel. All inputs must share the same shape along all dimensions except the stacking dimension. Inputs Input 0 Connected inputs. Type: Mask, Image, List, Required, Single Outputs Output Resulting stacked input. Type: Mask, Image, List Settings Stack along Selection Select along which dimension to stack the input. Values: i, j, k, Channel Channel Number Integer Select which channel to stack the input. List Handling Selection Define if multiple lists should be stacked to one output, or if list element should be broadcasted. Example: Input 0 is an image, Input 1 is a list of 3 images. If &ldquo;Stack&rdquo; is selected, the node will stack all four images to one output image. If &ldquo;Broadcast&rdquo; is selected, the node will return a list of 3 elements where element 0 is Input 0 stacked with element 0 of Input 1, element 1 is Input 0 stacked with element 1 of Input 1, and element 2 is Input 0 stacked with element 2 of Input 1. Values: Stack, Broadcast See also Keywords: ", "tags": "", "url": "nodes.image.reshape.stack_images.html"},
{"title": "Pad/Crop", "text": "Pad/Crop Pad or crop an input image or mask. Example 1 Pad the input with 20 voxels in the positive and negative i and j directions: Method: Add/Subtract, Pad/Crop i: [20, 20], Pad/Crop j: [20, 20], Pad/Crop k: [0, 0] Example 2 Pad positive and i direction with 20 voxels and crop the negative i direction with 20 voxels: Method: Add/Subtract, Pad/Crop i: [-20, 20], Pad/Crop j: [0, 0], Pad/Crop k: [0, 0] Example 3 Set the new size to [192, 192, 192]: Method: New Size, New Size: [192, 192, 192] Inputs Input Input Mask or Image. Type: Mask, Image, List, Required, Single Outputs Output Input Mask or Image. Type: Mask, Image, List Settings Output Size Method Selection Select method for defining output size. Values: Add/Subtract, New Size Pad/Crop i Integers Pad or crop in the i direction. Pad/Crop j Integers Pad or crop in the j direction. Pad/Crop k Integers Pad or crop in the k direction. New Size 3D Vector Set output size. The result will be symmetrically padded or cropped in each dimension. Pad Method Pad Method Selection Select the padding method. Constant inserts the specified Pad Value into added voxels. Mirror mirrors the padded dimension so the output is [..., end-2, end-1, end, end-1, end-2, ...]. Repeat repeats the padded dimension so the output is [..., end-2, end-1, end, end, end, ...]. Values: Constant, Mirror, Repeat Pad Value Float Set the value of the padded voxels. See also Keywords: ", "tags": "", "url": "nodes.image.reshape.padcrop.html"},
{"title": "Flip Axes", "text": "Flip Axes Reverses the input image or mask matrix along the specified spatial dimensions and/or channels. Inputs Input Input Image or Mask. Type: Mask, Image, List, Required, Single Outputs Output Missing description. Type: Image Settings Flip i-axis Boolean Flip the i-axis, i.e. the first matrix index. Flip j-axis Boolean Flip the j-axis, i.e. the second matrix index. Flip k-axis Boolean Flip the k-axis, i.e. the third matrix index. Channels Integers List of channels to flip See also Keywords: ", "tags": "", "url": "nodes.image.reshape.flip_axes.html"},
{"title": "Permute Axes", "text": "Permute Axes Permute the spatial dimensions of an input image or mask. This operation reorders the input matrix as defined by the permutation setting. Example An input image with spatial shape [192, 128, 32] is permuted in the jki order. The output spatial shape is [128, 32, 192]. NOTE that the image matrix is the only affected property of the input. The input position, voxel size or orientation are not affected. Inputs Input Input Image or Mask. Type: Mask, Image, List, Required, Single Outputs Output Result. Type: Mask, Image, List Settings Permute Axes Selection Select axes permutation. Values: ijk, ikj, jik, jki, kij, kji See also Keywords: ", "tags": "", "url": "nodes.image.reshape.permute_axes.html"},
{"title": "Multi-Planar Reconstruction", "text": "Multi-Planar Reconstruction Permute and flip the matrix of an input image or mask as needed to obtain an approximation to Axial, Coronal and Sagittal orientations in radiological and neurological conventions. In the neurological convention, left in the patient is left in the image, and in the radiological convention left in the patient is right in the image. Position, orientation and voxel size are modified to reflect the shifts in the image matrix. The physical coordinate of each voxel will remain unchanged, but the order of the stored voxels may change. In oblique images, the closest permutation to the selected projection will be returned. Note that there is no resampling of the image matrix, only a reordering of the data. In the neurological convention, left in the patient is left in the image, and in the readiological convention left in the patient is right in the image.Position, orientation and voxel size are shifted to reflect the shifts in the image matrix. The physical coordinate of each pixel will remain unchanged, but the order of the stored pixels may change. Please note that there os no resampling of the image matrix, only a reordering of the data.---> Inputs Input The input Image or Mask to be reoriented. Type: Image, Mask, List, Required, Single Outputs Output The reoriented Image or Mask with updated orientation metadata. Pixel values are unchanged, but their ordering may differ. Type: Image, Mask Settings Orientation Selection Set the desired coordinate orientation for the output image. If &ldquo;Custom Orientation Code&hellip;&rdquo; is selected, you can manually specify the desired orientation using a 3-character code corresponding to the direction of the image axes: The code must follow DICOM orientation conventions: Each character defines the positive direction of an anatomical axis: R/L: Right/Left A/P: Anterior/Posterior I/S: Inferior/Superior For example: LPS: Left–Posterior–Superior (neurological default) RAS: Right–Anterior–Superior (radiological default) IPL: Inferior–Posterior–Left The first character corresponds to the i-axis, the second to the j-axis, and the third to the k-axis in the image’s physical space. Invalid or ambiguous codes will cause an error. Values: Ax/Tra (Radiological), Ax/Tra (Neurological), Coronal (Radiological), Coronal (Neurological), Sagittal (A-&gt;P), Sagittal (P-&gt;A), Custom Orientation Code&hellip; See also Keywords: mpr, orientation, axial, sagittal, coronal, neurological, radiological ", "tags": "", "url": "nodes.image.reshape.multi-planar_reconstruction.html"},
{"title": "Insert Channel", "text": "Insert Channel Insert a channel dimension into an input Image or Mask. Inputs Input Input Image or Mask. Type: Mask, Image, List, Required, Single Outputs Output Result. Type: Image Settings New Channel Dimension Integer The channel number of the new channel. Channel Name Text The name of the new channel. Channel Unit Text The unit of the new channel. See also Keywords: ", "tags": "", "url": "nodes.image.reshape.insert_channel.html"},
{"title": "Expand Channels", "text": "Expand Channels Expand the number of channels in an input image or mask by broadcasting. The existing channel shapes cannot be changed using this node. Example: Input with channel shape [3, 2] can be expanded to channel shape [3, 2, 6], or [3, 2, 15, 4], or any arbitrary shape as long as the existing channels are not changed. Inputs Input Input image or mask. Type: Mask, Image, List, Required, Single Outputs Output Result. Type: Image Settings New Channel Shape Integers New channel shape. See also Keywords: ", "tags": "", "url": "nodes.image.reshape.expand_channels.html"},
{"title": "Reshape Channels", "text": "Reshape Channels Reshape the channel dimensions of an input image or mask. The number of volumes in the output must match the number of volumes in the input. Example: Input with channel shape [3, 4] can be reshaped to e.g. [4, 3], [2, 6] or [1, 12]; but not [3, 6]. Inputs Input Input image or mask. Type: Mask, Image, List, Required, Single Outputs Output Result Type: Image Settings New Channel Shape Integers New channel shape. See also Keywords: ", "tags": "", "url": "nodes.image.reshape.reshape_channels.html"},
{"title": "Squeeze Channels", "text": "Squeeze Channels Remove singleton channels, i.e. channels with 1 element. Example 1: An input with channel shape [1, 3, 1] will have a new channel shape of [3] if all singleton channels are squeezed. Example 2: An input with channel shape [1, 3, 1] will have a new channel shape of [3, 1] if only channel [0] is squeezed. Inputs Input Input Image or Mask. Type: Mask, Image, List, Required, Single Outputs Output Result. Type: Image, List Settings Type Selection Select if all or specific singleton dimensions should be removed. Values: All, Specific Channels to Squeeze Integers Select specific singleton channel indices that will be removed. See also Keywords: ", "tags": "", "url": "nodes.image.reshape.squeeze_channels.html"},
{"title": "Permute Channels", "text": "Permute Channels Permute the channels to a new order. This operation permutes the input image or mask channels as well as metadata and channel descriptions accordingly. Example: An input has channel shape [3, 2]. To switch the order of the channels, set New Channel Order to [1, 0]. The output will have channel shape [2, 3] Inputs Input Input Image or Mask. Type: Mask, Image, List, Required, Single Outputs Output Result Type: Image Settings New Order Integers Define the new order of the channels by their existing index. To reverse the order of an input with 3 channels, set New Channel Order to [2, 1, 0]. See also Keywords: ", "tags": "", "url": "nodes.image.reshape.permute_channels.html"},
{"title": "Mean", "text": "Mean Project an image using the mean value over all dimensions (reducing the image to a number, i.e. the mean value of all voxels), a selected axis or channel. Inputs Input Input image(s). Type: Image, List, Required, Single Outputs Output Output. Type: Image, List Settings Projection Along Selection Select over which dimension to project, e.g. if you select i and input a 3D image, the output image dimensions will be [1, j, k]. Values: All, i, j, k, Channel Channel Integer Select over which channel to project. Keep Channel Boolean If selected, the channel which was selected will be kept as a singleton dimension. E.g. if you have an image [i, j, k, c] and select Keep Channel, the output will be [i, j, k, 1], otherwise it will be [i, j, k]. See also Keywords: ", "tags": "", "url": "nodes.image.projection.mean.html"},
{"title": "Sum", "text": "Sum Project an image using the sum over all dimensions (reducing the image to a number, i.e. sum of all voxels), a selected axis or channel. Inputs Input Input image(s). Type: Image, List, Required, Single Outputs Output Output. Type: Image, List Settings Projection Along Selection Select over which dimension to project, e.g. if you select i and input a 3D image, the output image dimensions will be [1, j, k]. Values: All, i, j, k, Channel Channel Integer Select over which channel to project. Keep Channel Boolean If selected, the channel which was selected will be kept as a singleton dimension. E.g. if you have an image [i, j, k, c] and select Keep Channel, the output will be [i, j, k, 1], otherwise it will be [i, j, k]. See also Keywords: ", "tags": "", "url": "nodes.image.projection.sum.html"},
{"title": "Product", "text": "Product Project an image using the product over all dimensions (reducing the image to a number, i.e. the product of all voxel values), a selected axis or channel. Inputs Input Input image(s). Type: Image, List, Required, Single Outputs Output Output. Type: Image, List Settings Projection Along Selection Select over which dimension to project, e.g. if you select i and input a 3D image, the output image dimensions will be [1, j, k]. Values: All, i, j, k, Channel Channel Integer Select over which channel to project. Keep Channel Boolean If selected, the channel which was selected will be kept as a singleton dimension. E.g. if you have an image [i, j, k, c] and select Keep Channel, the output will be [i, j, k, 1], otherwise it will be [i, j, k]. See also Keywords: ", "tags": "", "url": "nodes.image.projection.product.html"},
{"title": "Standard Deviation", "text": "Standard Deviation Reduce image using standard deviation. Inputs Input Input image(s). Type: Image, List, Required, Single Outputs Output Output. Type: Image, List Settings Projection Along Selection Select over which dimension to project, e.g. if you select i and input a 3D image, the output image dimensions will be [1, j, k]. Values: All, i, j, k, Channel Unbiased Boolean Use Bessel's correction for an unbiased estimation of the standard deviation. Channel Integer Select over which channel to project. Keep Channel Boolean If selected, the channel which was selected will be kept as a singleton dimension. E.g. if you have an image [i, j, k, c] and select Keep Channel, the output will be [i, j, k, 1], otherwise it will be [i, j, k]. See also Keywords: ", "tags": "", "url": "nodes.image.projection.standard_deviation.html"},
{"title": "Variance", "text": "Variance Reduce image using variance. Inputs Input Input image(s). Type: Image, List, Required, Single Outputs Output Output. Type: Image, List Settings Projection Along Selection Select over which dimension to project, e.g. if you select i and input a 3D image, the output image dimensions will be [1, j, k]. Values: All, i, j, k, Channel Unbiased Boolean Use Bessel's correction for an unbiased estimation of the standard deviation. Channel Integer Select over which channel to project. Keep Channel Boolean If selected, the channel which was selected will be kept as a singleton dimension. E.g. if you have an image [i, j, k, c] and select Keep Channel, the output will be [i, j, k, 1], otherwise it will be [i, j, k]. See also Keywords: ", "tags": "", "url": "nodes.image.projection.variance.html"},
{"title": "Min", "text": "Min Project an image using the minimum over all dimensions (reducing the image to a number, i.e. the minimum of all voxel values), a selected axis or channel. Inputs Input Input image(s). Type: Image, List, Required, Single Outputs Output Output. Type: Image, List Settings Projection Along Selection Select over which dimension to project, e.g. if you select i and input a 3D image, the output image dimensions will be [1, j, k]. Values: All, i, j, k, Channel Channel Integer Select over which channel to project. Keep Channel Boolean If selected, the channel which was selected will be kept as a singleton dimension. E.g. if you have an image [i, j, k, c] and select Keep Channel, the output will be [i, j, k, 1], otherwise it will be [i, j, k]. See also Keywords: ", "tags": "", "url": "nodes.image.projection.min.html"},
{"title": "Max", "text": "Max Project an image using the maximum over all dimensions (reducing the image to a number, i.e. the maximum of all voxel values), a selected axis or channel. Inputs Input Input image(s). Type: Image, List, Required, Single Outputs Output Output. Type: Image, Numeric Array, List Settings Projection Along Selection Select over which dimension to project, e.g. if you select i and input a 3D image, the output image dimensions will be [1, j, k]. Values: All, i, j, k, Channel Channel Integer Select over which channel to project. Keep Channel Boolean If selected, the channel which was selected will be kept as a singleton dimension. E.g. if you have an image [i, j, k, c] and select Keep Channel, the output will be [i, j, k, 1], otherwise it will be [i, j, k]. See also Keywords: ", "tags": "", "url": "nodes.image.projection.max.html"},
{"title": "Median", "text": "Median Project an image using the median over all dimensions (reducing the image to a number, i.e. the median of all voxel values), a selected axis or channel. Inputs Input Input image(s). Type: Image, List, Required, Single Outputs Output Output. Type: Image, List Settings Projection Along Selection Select over which dimension to project, e.g. if you select i and input a 3D image, the output image dimensions will be [1, j, k]. Values: All, i, j, k, Channel Channel Integer Select over which channel to project. Keep Channel Boolean If selected, the channel which was selected will be kept as a singleton dimension. E.g. if you have an image [i, j, k, c] and select Keep Channel, the output will be [i, j, k, 1], otherwise it will be [i, j, k]. See also Keywords: ", "tags": "", "url": "nodes.image.projection.median.html"},
{"title": "Norm", "text": "Norm Project an image using the norm over all dimensions (reducing the image to a number, i.e. the norm of all voxel values), a selected axis or channel. Inputs Input Input image(s). Type: Image, List, Required, Single Outputs Output Output. Type: Image, Numeric Array, List Settings Projection Along Selection Select over which dimension to project, e.g. if you select i and input a 3D image, the output image dimensions will be [1, j, k]. Values: All, i, j, k, Channel Order Float Order of the norm. Channel Integer Select over which channel to project. Keep Channel Boolean If selected, the channel which was selected will be kept as a singleton dimension. E.g. if you have an image [i, j, k, c] and select Keep Channel, the output will be [i, j, k, 1], otherwise it will be [i, j, k]. See also Keywords: ", "tags": "", "url": "nodes.image.projection.norm.html"},
{"title": "Image Statistics", "text": "Image Statistics Computes statistics over multiple Images and optional ROIs (supplied as Masks). Inputs Images Input Image(s). Type: Image, List, Required, Multiple Masks Input Mask(s). Type: Mask, List, Optional, Multiple Outputs Output Results. Type: Table, List Settings Descriptive Statistics Mean Boolean Calculate the mean of voxel values of the image, or region of the image defined by the mask. Standard Deviation Boolean Calculate the standard deviation of voxel values of the image, or region of the image defined by the mask. Skewness Boolean Calculate the skewness of voxel values of the image, or region of the image defined by the mask. Kurtosis Boolean Calculate the kurtosis of voxel values of the image, or region of the image defined by the mask. Min Boolean Calculate the minimum voxel value in the image, or region of the image defined by the mask. Max Boolean Calculate the maximum voxel value in the image, or region of the image defined by the mask. Median Boolean Calculate the median of voxel values of the image, or region of the image defined by the mask. Volume [cc]Boolean Calculate the volume of the image, or region of the image defined by the mask. Number Of Voxels Boolean Calculate the number of voxels in the image, or region of the image defined by the mask. Percentiles Numbers Calculate the percentiles defined as [prc_1, prc_2, ..., prc_n] of the image, or region of the image defined by the mask. Configure Output Name Text The name of the output table. Merge Tables Boolean If output produces a list, merge the list into one table. Get Statistics By Column (i) Boolean Split ROI over i-dimension. By Row (j) Boolean Split ROI over j-dimension. By Slice (k) Boolean Split ROI over k-dimension. By Channel Integers Create a split over a selected channel. See also Keywords: ", "tags": "", "url": "nodes.image.statistics.image_statistics.html"},
{"title": "Image Histogram", "text": "Histogram Creates a histogram from an Image. If an optional Mask is provided, the histogram is produced only for the TRUE voxels in the Mask. NaN values in the image are ignored. Inputs Input Input image. Type: Image, Required, Single Mask Input mask. Type: Mask, Optional, Single Outputs Output Table containing the histogram. Type: Table, List Settings Histogram Bins Integer Set the number of bins in the histogram. Automatic Bounds Boolean Set the bounds of the histogram to \([min, max]\). Lower Bound Float Set the lower bound of the X-axis. Upper Bound Float Set the upper bound of the X-axis. Bin Location Selection X-position of the plotted points. Left - point is plotted at left side of the bin, Right - point is plotted at right side of the bin, Center - point is plotted at center of the bin, Bin Width - plotted as bars with the width of the bins. Values: Center, Left, Right, Bin Width Normalization Selection Set how to normalize the y-axis. Count - no normalization, PDF - normalize as probability density, CDF - normalize as cumulative distribution function. Values: Count, PDF, CDF Configure Output Name Text Name of the output Table. Bins Axis Name Text Name of the bin axis. Frequency Axis Name Text Name of the frequency axis. Get Histogram By Column (i) Boolean Get histogram by column. By Row (j) Boolean Get histogram by row. By Slice (k) Boolean Get histogram by slice. By Channel Integers Get histogram by channel. See also Keywords: ", "tags": "", "url": "nodes.image.statistics.image_histogram.html"},
{"title": "Display", "text": "Display Display values or shapes depending on input in process. Copies input connection to output. Inputs Input Input. Type: Any, List, Required, Single Outputs Output Output. Type: Any, List Settings Clip Selection If the displayed value is longer than 96 characters, the displayed value will be clipped. If End is selected, the characters in the end of the value will be replaced with .... If Beginning is selected, the clipping will be done in the beginning of the value. Values: End, Beginning See also Keywords: ", "tags": "", "url": "nodes.image.visualization.display.html"},
{"title": "Display Property", "text": "Display Property Display a property in process. Copies input connection to output. Inputs Input Input. Type: Any, List, Required, Single Outputs Output Output. Type: Any, List Settings Property Text Path to the property to display. Clip Selection If the displayed value is longer than 96 characters, the displayed value will be clipped. If End is selected, the characters in the end of the value will be replaced with .... If Beginning is selected, the clipping will be done in the beginning of the value. Values: End, Beginning See also Keywords: ", "tags": "", "url": "nodes.image.visualization.display_property.html"},
{"title": "Visualize", "text": "Visualize Send images and masks to the visualizer with custom visualization settings. Inputs In Input image or mask to visualize. Type: Image, Mask, Required, Single Settings Viewport Integer Index of the viewport to visualize in. Layer Integer Layer to visualize in. Lock Viewport Boolean Lock selected viewport with other viewports to sync geometry. Full Range Window Boolean Use full range windowing for visualization. Window Min Float If not using full windowing, set the minimum windowing level. Window Max Float If not using full windowing, set the maximum windowing level. Opacity Float Set the opacity of the visualized item. Slice Integer Set default slice to visualize. Frame Integer Set default frame to visualize. Orientation Selection Set the viewing orientation of the visualized item. Select beteen Axial (AX), sagittal (SE), coronal (CO) or 3D. Values: AX, SE, CO, 3D Colormap Colormap Set the colormap to use for visualization Interpolation Selection Select the interpolation method used for the visualized item. Values: Cubic, Linear, Nearest See also Keywords: ", "tags": "", "url": "nodes.image.visualization.visualize.html"},
{"title": "Visualize RGB", "text": "Visualize RGB Send RGB image to the visualizer with custom visualization settings. Inputs In Input RGB image to visualize. Type: Image, Required, Single Settings RGB Channel Integer Select the channel that contains R, G and B channels. Viewport Integer Index of the viewport to visualize in. Layer Integer Layer to visualize in. Lock Viewport Boolean Lock selected viewport with other viewports to sync geometry. Full Range Window Boolean Use full range windowing for visualization. Window Min Float If not using full windowing, set the minimum windowing level. Window Max Float If not using full windowing, set the maximum windowing level. Opacity Float Set the opacity of the visualized item. Slice Integer Set default slice to visualize. Frame Integer Set default frame to visualize. Orientation Selection Set the viewing orientation of the visualized item. Select beteen Axial (AX), sagittal (SE), coronal (CO) or 3D. Values: AX, SE, CO, 3D Colormap Colormap Set the colormap to use for visualization Interpolation Selection Select the interpolation method used for the visualized item. Values: Cubic, Linear, Nearest See also Keywords: ", "tags": "", "url": "nodes.image.visualization.visualize_rgb.html"},
{"title": "Create Checkerboard", "text": "Checkerboard The Checkerboard node takes two input Image(s) or Mask(s) that must have the same shape, position, and voxel size, and produces an output image of the same size by combining the pixels from the two input images in a checkerboard pattern. This filter is commonly used for visually comparing two images, in particular for evaluating the results of an image registration process. Inputs Input 1 First input Image or Mask. Type: Mask, Image, List, Required, Single Input 2 Second input Image or Mask. Type: Mask, Image, List, Required, Single Outputs Output Output Image or Mask. Type: Image, Mask, List Settings Pattern Integers The number of checker boxes per spatial dimension of the image. See also Keywords: ", "tags": "", "url": "nodes.image.visualization.create_checkerboard.html"},
{"title": "Cast to Type", "text": "Cast Cast the value type of the input to a new value type. Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Output(s). Type: Numeric Array Settings Configure Value Type Selection The new value type. Values: Float64, Float32, Integer64, Integer32, Complex64x2, Complex32x2 Column Settings Column Name Text Name of the output column. See also Keywords: ", "tags": "", "url": "nodes.image.converters.cast_to_type.html"},
{"title": "To Contours", "text": "To Contours Draw contours around regions in masks or images. In case of images a threshold value must be provided for the regions to be considered inside contours. Inputs Input Mask Type: Mask, Image, List, Required, Single Outputs Output The resulting contours. In case the input is a list, the output will be a list of lists of contours. Type: Contour, List, List of Lists Settings Threshold Float Threshold value for what is considered to be inside the contours. Only applicable for images. Slicing Plane Selection The plane in which the contours are drawn. Values: ij, ik, jk Encircle Pixels Boolean Set to true if pixels should be encircled when creating the contours. If false, contours are allowed to intersect pixels. Only applicable for masks. Simplify Boolean Join consecutive line segments with identical direction into a single line segment. Output List Selection Output contours as a merged list, i.e. all contours in one list, using Merge or as a list of lists using Append. Values: Merge, Append See also Keywords: isosurface ", "tags": "", "url": "nodes.image.converters.to_contours.html"},
{"title": "Label Map to Masks", "text": "Label Map to Mask Convert a labelmap to a list of masks. Inputs Input Label Map or list of Label Maps. Type: Image, Image List, Required, Single Outputs Output List of Masks, or List of list of Masks. Type: Mask List, List of Lists Settings Method Selection Specify whether all labels should be converted or define a subset of labels for conversion. Values: All Labels, Specify labels Labels Integers Labels that are converted. Sort labels Boolean Sort Labels in ascending order. If set to false, the labels will be organized in the order that they are identified by the node, or input in the Labels field. See also Keywords: ", "tags": "", "url": "nodes.image.converters.label_map_to_masks.html"},
{"title": "Save Hero Data to Disk", "text": "Save Hero Data Save data to disk using Hero data in binary format .hdata or xml format .hxdata. Inputs Input Data that is saved. Type: Any, Required, Single Settings Folder Path Folder where the file is stored. The path can be both absolute and relative. File Text Name of the file. If file extension is omitted, .hdata will be apended. The file ending can be either .hdata for binary storage or .hxdata for xml-based storage. Overwrite Boolean Overwrite file if it already exists. Compress Boolean Compress the file to save space. Will slow down the write and read speed. See also Load Hero Data Keywords: ", "tags": "", "url": "nodes.image.export.save_hero_data_to_disk.html"},
{"title": "Save Hero Data to Database", "text": "Save to Database Save data to a specific location in the database under a name specified in the node. Inputs Input The data to be stored in the database. Type: Any, Required, Single Study Link The destination in the database for the data to be stored. For Images and Masks this is optional. If not provided the Metadata will be used to find the destination. Typically this metadata is available for data imported into the database, such as DICOM images. Type: Struct, Required/Optional, Single Settings Use Name from Input Boolean Whether to take the name from the input data (applies to Images and Masks only) or from a node setting. Name in Database Text What name the data should be stored under in the database. See also Keywords: ", "tags": "", "url": "nodes.image.export.save_hero_data_to_database.html"},
{"title": "Create Study", "text": "Create Study Create a new study in the database. The study is defined by its Study ID, and is connected to a Patient ID in the database at creation. NOTE: If an image with a different Patient ID or Patient Name is saved to this study, it will still be displayed in the Patient ID/Patient name of study in the database panel, but will retain the original Patient ID and Patient name when loaded into the workflow. Outputs Output A structure describing the new study. Type: Struct Settings Database Text The name of the database in which the study is created. Study ID Text The Study ID. This must be a unique ID, two studies cannot share a Study ID. Study Description Text The Study Description, or name of the study. Patient ID Text The Patient ID to which the study belongs. Patient Name Text The patient name. Frame of Reference UID Text The Frame of Reference UID. See also Keywords: ", "tags": "", "url": "nodes.image.export.create_study.html"},
{"title": "Export as NIfTI (.nii)", "text": "Export NifTI Write an image to disk in the NIfTI format. Inputs Input Input Image or Mask. Type: Mask, Image, Required, Single Settings Folder Path Output folder. The path can be both absolute and relative. File Text Output filename. Compress Boolean Use image compression. See also Keywords: ", "tags": "", "url": "nodes.image.export.export_as_nifti_(.nii).html"},
{"title": "Export as MetaIO (.mhd, .mha)", "text": "Export MetaIO Write an image to disk as .mhd/.raw or .mha files. Inputs Input Input Image or Mask. Type: Mask, Image, Required, Single Settings Folder Path Output folder. File Text Output filename. Compress Boolean Use image compression. See also Keywords: ", "tags": "", "url": "nodes.image.export.export_as_metaio_(.mhd,_.mha).html"},
{"title": "Export as DICOM (.dcm)", "text": "Export DICOM Convert and save connected images to DICOM files on disk. DICOM is a standardized image format for storing and sending medical images from many different modalities. With each image comes extensive metadata information regaring e.g. imaging modality, imaging settings, scan time and date, patient information etc. Many metadata tags are specific to one modality, which makes a function that fully adheres to the DICOM standard difficult to implement. This is important if images are imported in other software such as dose planning programs or sent to a DICOM node or PACS for storage. For this reason, Hero currently supports three DICOM image export modalities; CT, MRI, and RTDOSE. Quantization errors in DICOM DICOM can only save pixel data in integer values between 0 and 65,535. To represent decimal values, a linear transformation is applied to the pixel data. The slope and intercept of this transformation is calculated so that the range of integer values in the dicom image covers the dynamic range of the values being stored. For large pixel ranges this method will lead to quantization error. To minimize the ammount of quantization, make sure you limit the range of values in the images. Voxels with extreme values outside the window of interest will lead to a large quantization error. This is illustrated in the figure below. The figure shows two image histograms after a linear transformation. The images are identical, except for a few outlier voxel values of 100 in the right image. In this toy example, there are 50 gray levels available. If the span of intensities is [0 - 15], the quantization error is quite small. However, if the span is [0 - 100], the quantization error is much larger. Inputs Image Input Image. Type: Image, Required, Single Settings Modality Selection Modality selection. Values: CT, MR, RTDOSE Force Integer Values Boolean If enabled, the node will attempt to store voxel values as integers. Note that this setting will be ignored if the modality is set to RTDOSE. The slope will always be 1, and the intercept will be adjusted accordingly. The voxel values will be rounded to the nearest integer. If the range of values in the image exceeds 65535, values outside of this range will be clipped to 65535. Please use caution when enabling this feature as it can greatly alter your data. It is only recommended to do so if you have a full understanding of its effects. Out Path Path Path to the folder where the exported images should be saved. See also Keywords: ", "tags": "", "url": "nodes.image.export.export_as_dicom_(.dcm).html"},
{"title": "Export as Nrrd", "text": "Export Nrrd Inputs Input Missing description. Type: **NodeIOMask, NodeIOImage, **, Required, Single Settings Folder Directory Path Missing description. File Text Missing description. Overwrite Boolean Missing description. Compress Boolean Missing description. See also Keywords: ", "tags": "", "url": "nodes.image.export.export_as_nrrd.html"},
{"title": "Create Constant Mask", "text": "Create Mask Create a Mask with a constant value, or from an input Boolean Array. Outputs Output Output Mask. Type: Mask Settings Configure Value Boolean Constant value. Shape Integers Mask shape. Method Selection Select whether the output Mask should have a constant value or be derived from an input Boolean Array. Values: Constant, From Array Name Text Mask name. Value Unit Text Voxel value unit. Geometry Selection Select whether the Mask geometry is defined manually, or from an input referece image or mask. Values: Manual, From Reference Geometry Position Numbers Mask position. Voxel Size Numbers Mask voxel Size. Orientation Rotation Axis Numbers Mask orientation rotation axis. This is an axis of rotation, and does not have to be normalized. Orientation Rotation Angle [Degrees] Float Rotation angle in degrees. See also Keywords: ", "tags": "", "url": "nodes.mask.createimport.create_constant_mask.html"},
{"title": "Create Mask From Array", "text": "Create Mask Create a Mask with a constant value, or from an input Boolean Array. Outputs Output Output Mask. Type: Mask Settings Configure Value Boolean Constant value. Shape Integers Mask shape. Method Selection Select whether the output Mask should have a constant value or be derived from an input Boolean Array. Values: Constant, From Array Name Text Mask name. Value Unit Text Voxel value unit. Geometry Selection Select whether the Mask geometry is defined manually, or from an input referece image or mask. Values: Manual, From Reference Geometry Position Numbers Mask position. Voxel Size Numbers Mask voxel Size. Orientation Rotation Axis Numbers Mask orientation rotation axis. This is an axis of rotation, and does not have to be normalized. Orientation Rotation Angle [Degrees] Float Rotation angle in degrees. See also Keywords: ", "tags": "", "url": "nodes.mask.createimport.create_mask_from_array.html"},
{"title": "Create Geometric Shape", "text": "Create Mask Create an ellipsoid or cuboid shaped mask at a specified position in the reference image. Inputs Reference Supply a reference image or mask. The output will have the same position, orientation, voxel size and shape as the reference. Type: Image, Mask, Required, Single Outputs Output Output mask Type: Mask Settings Shape Shape Selection The geometric shape of the mask. Values: Cuboid, Ellipsoid Size [mm] 3D Vector The size of the cuboid in the [i, j, k] dimensions, in units of mm. Size [px] 3D Vector The size of the cuboid in the [i, j, k] dimensions, in units of voxels. Radii [mm] 3D Vector The radii of the ellipsoid in the [i, j, k] dimensions, in units of mm. Radii [px] 3D Vector The radii of the ellipsoid in the [i, j, k] dimensions, in units of voxels. Define Extent in Selection Select the spatial unit as mm or voxels. Values: mm, Voxels Position Center Definition Selection Select how to define the center of the mask. Values: Center Offset, Center Position, Center Index Center Offset [px] 3D Vector Define the center of the geometric shape as an offset from the center of the mask, in pixel units. Center Offset [mm] 3D Vector Define the center of the geometric shape as an offset from the center of the mask, in millimeters. Define Offset in Selection Select the offset unit as mm or voxels. Values: mm, Voxels Center Position [mm] 3D Vector Define the center of the geometric shape with a specific position in space, in [mm]. Center Index [px] 3D Vector Define the center of the geometric shape with a specific array index in pixel units. See also Keywords: ", "tags": "", "url": "nodes.mask.createimport.create_geometric_shape.html"},
{"title": "Load Hero Data", "text": "Load Hero Data Load Hero Data from disk. Outputs Output The loaded Hero Data. Type: Numeric Array Settings File Filepath Path to the Hero Data file. The path can be both absolute and relative. Data Type Selection The type of the data. Values: Numeric Array, Text, Boolean Array, Image, Mask, Structure, Table, Column, Contour, Text List, Image List, Mask List, Structure List, List of Lists, Table List, Column List, Numeric Array List, Boolean Array List, Contour List See also Keywords: ", "tags": "", "url": "nodes.mask.createimport.load_hero_data.html"},
{"title": "Import NIfTI", "text": "Import NIfTI Import a NIfTI file from disk. Outputs Image Output Image. Type: Image Settings Path Filepath Path to file. The path can be both absolute and relative. See also Keywords: ", "tags": "", "url": "nodes.mask.createimport.import_nifti.html"},
{"title": "Has Property", "text": "Has Property Check if property exists. Inputs Input Input. Type: Any, List, Required, Single Outputs Output Output True/False. Type: Boolean Array Settings Property Text Property Path. See also Keywords: ", "tags": "", "url": "nodes.mask.getset_property.has_property.html"},
{"title": "Get Property", "text": "Get Property Get property from input. Inputs Input Input new property value. Type: Any, List, Required, Single Outputs Output Output. Type: Numeric Array Settings Property Text Property path. For example, if the input is a single Image the path to the Sex property is Subject.Sex. The paths can be found in the Properties viewer by right-clicking on the property and choosing Copy Property Path. Property Type Selection Property type. Values: Boolean Array, Boolean Array List, Column, Column List, Contour, Contour List, Image, Image List, List of Lists, Mask, Mask List, Numeric Array, Numeric Array List, Structure, Structure List, Table, Table List, Text, Text List See also Keywords: ", "tags": "", "url": "nodes.mask.getset_property.get_property.html"},
{"title": "Edit Property", "text": "Edit Property Modify a property of an input. Only Text, Numeric arrays, and Boolean arrays are editable. The Edit Property node enables users to set the property as a setting within the node, while the Set Property node accepts the property value as an input. The Edit Property node cannot alter the property type, but the Set Property node is able to do so. Inputs Input Input of any type. Type: Any, Required, Single Outputs Output Output of the same type as the input. Type: Numeric Array Settings Value Text Set the new property value. Property Text Property path. For example, if the input is a single Image the path to the Sex property is Subject.Sex. The paths can be found in the Properties viewer by right-clicking on the property and choosing Copy Property Path. See also Keywords: ", "tags": "", "url": "nodes.mask.getset_property.edit_property.html"},
{"title": "Set Property", "text": "Set Property Set a specific property to a value supplied as an input. This operation allows changing the property value type, e.g. from a Numeric Array to a Text List. The property has to exist in the input data. If it does not exist, use the Insert Property node. Inputs Input Input. Type: Any, List, Required, Single New Value New property value. Type: Any, Required, Single Outputs Output Input data with the changed property. Type: Any, List Settings Property Text Property path. For example, if the input is a single Image the path to the Sex property is Subject.Sex. The paths can be found in the Properties viewer by right-clicking on the property and choosing Copy Property Path. Broadcast Input Boolean Broadcast input to property list elements. If set to True and the property is a list, the input will be assigned to each element of the property list. If set to False and the property and input are lists of equal length, the i:th element of the input list is assigned to the i:th element of the property list. See also Keywords: ", "tags": "", "url": "nodes.mask.getset_property.set_property.html"},
{"title": "Insert Property", "text": "Insert Property Insert a Hero Data item at a specific location in input. Inputs Input Input Type: Any, List, Required, Single New Value New value. Type: Any, List, Required, Single Outputs Output Output. Type: Any Settings Property Text Property path. For example, if the input is a single Image the path to the Sex property is Subject.Sex. The paths can be found in the Properties viewer by right-clicking on the property and choosing Copy Property Path. Values: Boolean Array, Boolean Array List, Column, Column List, Contour, Contour List, Image, Image List, List of Lists, Mask, Mask List, Numeric Array, Numeric Array List, Structure, Structure List, Table, Table List, Text, Text List Broadcast Property Boolean Set many values in a list to the same value. See also Keywords: ", "tags": "", "url": "nodes.mask.getset_property.insert_property.html"},
{"title": "Remove Property", "text": "Remove Property Remove a Hero Data item at a specific location in input data. Inputs Input Input Type: Any, List, Required, Single Outputs Output Output Type: Numeric Array Settings Property Text Property Path. See also Keywords: ", "tags": "", "url": "nodes.mask.getset_property.remove_property.html"},
{"title": "Copy Properties", "text": "Copy Properties Copy properties from a reference image or mask. There are three categories of properties: Geometric settings Metadata Other Data Geometric properties inlcude position, voxel size and orientation. Metadata include subject information, scan information and the metadata structure. Other data include channel descriptions and value unit. Inputs Input Input or target image or mask. This is the object you want to copy the information to. Type: Image, Mask, Required, Single Reference Reference image or mask. This is the object you want to copy the information from. Type: Image, Mask, Required, Single Outputs Output Output result. Type: Image, Mask Settings Geometry Copy Position Boolean Copy position from reference. Copy Voxel Size Boolean Copy voxel size from reference. Copy Orientation Boolean Copy orientation from reference. MetaData Copy Subject Info Boolean Copy subject info from reference. The subject info contains ID, Name, Birthdate, Weight and Sex. Copy Scan Info Boolean Copy Scan information from the reference. The scan information contains Date, Frame of ReferenceIOD and patient positioning. Copy MetaData Boolean Copy Metadata tags from the reference. Data Copy Channel Descriptions Boolean Copy channel descriptions from the reference. Copy Value Unit Boolean Copy value units from the reference. See also Keywords: ", "tags": "", "url": "nodes.mask.getset_property.copy_properties.html"},
{"title": "Rename", "text": "Rename Rename input data. You can supply a new name, or add a prefix and/or suffix to existing name. You can add a counter to the name with the {n} syntax , which is useful if you want to rename a list of inputs. Example: &ldquo;New Name {n}&rdquo; will give the first new name as &ldquo;New Name 1&rdquo; if the counter starts at 1. Inputs Input Input. Type: Image List, Mask List, Contour List, Table List, Column List, Required, Single Outputs Output Output. Type: Image Settings Method Selection Select renaming method: new name or add prefix/suffix to existing name. Values: Rename, Prefix/Suffix Prefix Text Prefix. Suffix Text Suffix. Separator Text Separator between the original name and the prefix/suffix. New Name Text Set new name. Counter {n} Starts At: Integer Counter starting value. See also Keywords: ", "tags": "", "url": "nodes.mask.getset_property.rename.html"},
{"title": "Get Center", "text": "Get Center Get the position, index and continuous index of the center voxel of an input image or mask. For dimensions with an odd matrix size, the center voxel is unambiguous and the index and the continuous index are identical. For even matrix sizes, the index is rounded down to the lower value, and the index and continuous index will differ by 0.5. Inputs Input Input image or mask. Type: Mask, Image, List, Required, Single Outputs Position Center coordinate of input in [mm]. Type: Numeric Array Index Voxel index of center position. This is an integer value. Type: Numeric Array Continuous Index Continuous voxel index of the center position. This is a decimal value. Type: Numeric Array See also Keywords: ", "tags": "", "url": "nodes.mask.getset_property.get_center.html"},
{"title": "Get Center of Mass", "text": "Get Center of Mass Get center of mass of an input image. The center of mass is the center coordinates of the image weighted by the image intensity distribution. It is analogous to the center of mass of a physical object, but here the mass is represented by the voxel values. Inputs Input Input image. Type: Mask, Image, List, Required, Single Outputs Position Center of mass coordinates [mm]. Type: Numeric Array Index Center of mass voxel index. Type: Numeric Array Continuous Index Center of mass continuous voxel index. Type: Numeric Array See also Keywords: ", "tags": "", "url": "nodes.mask.getset_property.get_center_of_mass.html"},
{"title": "Get Frame of Reference", "text": "Get Frame of Reference Returns a structure that describes the frame of reference of an input. The structure contains the position, orientation, spatial matrix size, voxel size and FrameOfReferenceUID string. Inputs Input Input image or mask. Type: Mask, Image, List, Required, Single Outputs Output Output Frame of Reference. Type: Struct See also Keywords: ", "tags": "", "url": "nodes.mask.getset_property.get_frame_of_reference.html"},
{"title": "Count Voxels", "text": "Count Voxels Count TRUE or FALSE voxels in the input mask. Inputs Input Input mask. Type: Mask, List, Required, Single Outputs Output Number of voxels of specified type. Type: Numeric Array, List Settings Count Selection Specify how to count the voxels. If you have an Image with 10 slices and 3 volumes, i.e. [i,j,10,3], Per Slice will give a [10x3] output and Per Volume will give an [3] output and Entire Mask will give a [1] output. Values: Per Slice, Per Volume, Entire Mask Value Boolean Count TRUE or FALSE voxels. See also Keywords: ", "tags": "", "url": "nodes.mask.getset_property.count_voxels.html"},
{"title": "Get Voxel Info", "text": "Get Voxel Info Gets information about a specified voxel from input Image(s) or Mask(s). Inputs Input Input Image or Mask. Type: Image, Mask, List, Required, Single Outputs Index Index of the selected voxel. Type: Numeric Array, List Position Position of the selected voxel. Type: Numeric Array, List Seed Output the selected voxel as a seedpoint in a Mask. Type: Mask Settings Index Integers Index of the selected voxel as [i, j, k]. See also Keywords: ", "tags": "", "url": "nodes.mask.getset_property.get_voxel_info.html"},
{"title": "Get Voxel Value", "text": "Get Voxel Value Gets the value of a specified voxel from input Image(s) or Mask(s). Inputs Input Input Image(s) or Mask(s). Type: Image, Mask, List, Required, Single Outputs Value Output value. Type: Numeric Array, Boolean Array, List Settings Index Integers Index of the selected voxel as [i, j, k]. See also Keywords: ", "tags": "", "url": "nodes.mask.getset_property.get_voxel_value.html"},
{"title": "Mask Repeater", "text": "Repeater Copies input connection to output. Settings Repeater Description Text The title of the repeater. If used as an input for a group, set value to brief description of expected input type. Sparse Connections Boolean A sparse connection removes the wire between the repeater output and connected nodes, and replaces them with a label displaying the repeater description. This is very useful when you have a large workflow wih many wires. Change Image/Data Name Set New Image/Data Name Boolean Should the image/data get a new name, only applies to Image4D and DataCollection. Misc IOType Text Missing description. See also Keywords: ", "tags": "", "url": "nodes.mask.repeaters.mask_repeater.html"},
{"title": "Mask List Repeater", "text": "Repeater Copies input connection to output. Settings Repeater Description Text The title of the repeater. If used as an input for a group, set value to brief description of expected input type. Sparse Connections Boolean A sparse connection removes the wire between the repeater output and connected nodes, and replaces them with a label displaying the repeater description. This is very useful when you have a large workflow wih many wires. Change Image/Data Name Set New Image/Data Name Boolean Should the image/data get a new name, only applies to Image4D and DataCollection. Misc IOType Text Missing description. See also Keywords: ", "tags": "", "url": "nodes.mask.repeaters.mask_list_repeater.html"},
{"title": "And", "text": "And Performs element-wise boolean AND operation in supplied inputs with broadcasting. If an element is TRUE in both inputs, the resulting output element is TRUE, otherwise it is FALSE. You can perform the operation on any two supported inputs of the same type. The operation can be performed on any supported input type and a boolean. Inputs Upper First input. Type: Mask, Column, Boolean Array, List, Required, Single Lower Second input. Type: Mask, Column, Boolean Array, List, Optional, Single Outputs Output Resulting output. The output type is determined by the input types. If one input is an Mask or a Column, the output will be an Mask or a Column, respectively. If both inputs are Boolean Array type, the output will be a Boolean Array type. Type: Mask, Column, Boolean Array, List Settings Value Value Array If optional input is not suppliad, the AND operation will be performed between mandatory Upper input and specified value. Image Settings Metadata Source Selection Select the source for the output metadata. This is only applicable if the output is a mask. Values: Upper, Lower Column Settings Column Name Text Set the name of the output column. Broadcast Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Mask and Boolean Array. Values: Align Leading Dimensions, Align Trailing Dimensions See also Keywords: ", "tags": "", "url": "nodes.mask.boolean_algebra.and.html"},
{"title": "Or", "text": "Or Performs element-wise boolean OR operation in supplied inputs with broadcasting. If atleast one input element is TRUE, the resulting output element is TRUE, otherwise it is FALSE. You can perform the operation on any two supported inputs of the same type. The operation can be performed on any supported input type and a boolean. Inputs Upper First input. Type: Mask, Column, Boolean Array, List, Required, Single Lower Second input. Type: Mask, Column, Boolean Array, List, Optional, Single Outputs Output Resulting output. The output type is determined by the input types. If one input is an Mask or a Column, the output will be an Mask or a Column, respectively. If both inputs are Boolean Array type, the output will be a Boolean Array type. Type: Mask, Column, Boolean Array, List Settings Value Value Array If optional input is not suppliad, the AND operation will be performed between mandatory Upper input and specified value. Image Settings Metadata Source Selection Select the source for the output metadata. This is only applicable if the output is a mask. Values: Upper, Lower Column Settings Column Name Text Set the name of the output column. Broadcast Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Mask and Boolean Array. Values: Align Leading Dimensions, Align Trailing Dimensions See also Keywords: ", "tags": "", "url": "nodes.mask.boolean_algebra.or.html"},
{"title": "XOr", "text": "XOr Performs element-wise boolean XOR operation in supplied inputs with broadcasting. If the two input elements are not equal, the resulting output element is TRUE, otherwise it is FALSE. You can perform the operation on any two supported inputs of the same type. The operation can be performed on any supported input type and a boolean. Inputs Upper First input. Type: Mask, Column, Boolean Array, List, Required, Single Lower Second input. Type: Mask, Column, Boolean Array, List, Optional, Single Outputs Output Resulting output. The output type is determined by the input types. If one input is an Mask or a Column, the output will be an Mask or a Column, respectively. If both inputs are Boolean Array type, the output will be a Boolean Array type. Type: Mask, Column, Boolean Array, List Settings Value Value Array If optional input is not suppliad, the AND operation will be performed between mandatory Upper input and specified value. Image Settings Metadata Source Selection Select the source for the output metadata. This is only applicable if the output is a mask. Values: Upper, Lower Column Settings Column Name Text Set the name of the output column. Broadcast Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Mask and Boolean Array. Values: Align Leading Dimensions, Align Trailing Dimensions See also Keywords: ", "tags": "", "url": "nodes.mask.boolean_algebra.xor.html"},
{"title": "Not", "text": "Not Performs logical elementwise NOT. Inputs Input Input. Type: Mask, Column, Boolean Array, List, Required, Single Outputs Output Output. Type: Mask, Column, Boolean Array, List Settings Append Column Name With Text Append text to Column Name. Append Mask Name With Text Append text to Mask Name. See also Keywords: ", "tags": "", "url": "nodes.mask.boolean_algebra.not.html"},
{"title": "Any", "text": "Any Voxelwise logical OR over all elements in input list with broadcasting, i.e. if a voxel or entry is TRUE in any element of the input list, the output voxel or entry is TRUE. Inputs In Input. Type: Mask, Column, Boolean Array, List, Required, Single Outputs Out Output. Type: Mask, Column, Boolean Array Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Mask and Boolean Array. Values: Leading Dimensions, Trailing Dimensions Metadata From Element Integer Select the source for the output metadata. This is only applicable if the output is a mask. See also Keywords: ", "tags": "", "url": "nodes.mask.boolean_algebra.any.html"},
{"title": "All", "text": "All Voxelwise logical OR over all elements in input list with broadcasting, i.e. if a voxel or entry is TRUE in all elements of the input list, the output voxel or entry is TRUE. Inputs In Input. Type: Mask, Column, Boolean Array, List, Required, Single Outputs Out Output. Type: Mask, Column, Boolean Array Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Mask and Boolean Array. Values: Leading Dimensions, Trailing Dimensions Metadata From Element Integer Select the source for the output metadata. This is only applicable if the output is a mask. See also Keywords: ", "tags": "", "url": "nodes.mask.boolean_algebra.all.html"},
{"title": "Equal", "text": "Equal Elementwise compare inputs with broadcasting. If input elements are equal, the output element is TRUE. You can compare any supported inputs to inputs of the same type, and also Mask to Bits, Image to Numbers and Column to Numeric Array and Boolean Array. Inputs Upper First input. Type: Mask, Column, Image, Numeric Array, Boolean Array, List, Required, Single Lower Second input. Type: Mask, Column, Image, Numeric Array, Boolean Array, List, Optional, Single Outputs Output Output. The output depends on the input. An Image input gives an Image output, a Mask input gives a Mask output and a Column input gives a Column output, regardless of the second input type. Two Numbers inputs gives Numeric Array output and two Bits inputs gives Boolean Array output. Type: Mask, Column, Image, Numeric Array, Boolean Array, List Settings Equal Value Array Value to compare the first input to. Only valid if the optional input is not connected. Value Type Selection Value type of the Value setting. Values: Boolean, Integer32, Integer64, Float32, Float64, Complex64, Complex128 Image Settings Metadata Source Selection Select the source for the output metadata. This is only applicable if the output is an Image or a Mask. Values: Upper, Lower Column Settings Column Name Text Set the name of the output column. Broadcast Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Image and Numeric Array. Values: Align Leading Dimensions, Align Trailing Dimensions See also Keywords: ", "tags": "", "url": "nodes.mask.compare.equal.html"},
{"title": "Not Equal", "text": "Not Equal Elementwise compare inputs with broadcasting. If input elements are not equal, the output element is TRUE. You can compare any supported inputs to inputs of the same type, and also Mask to Bits, Image to Numbers and Column to Numeric Array and Boolean Array. Inputs Upper First input. Type: Mask, Column, Image, Numeric Array, Boolean Array, List, Required, Single Lower Second input. Type: Mask, Column, Image, Numeric Array, Boolean Array, List, Required, Single Outputs Output Output. The output depends on the input. An Image input gives an Image output, a Mask input gives a Mask output and a Column input gives a Column output, regardless of the second input type. Two Numbers inputs gives Numeric Array output and two Bits inputs gives Boolean Array output. Type: Mask, Column, Image, Numeric Array, Boolean Array, List Settings Value Value Array Value to compare the first input to. Only valid if the optional input is not connected. Value Type Selection Value type of the Value setting. Values: Boolean, Integer32, Integer64, Float32, Float64, Complex64, Complex128 Image Settings Metadata Source Selection Select the source for the output metadata. This is only applicable if the output is an Image or a Mask. Values: Upper, Lower Column Settings Column Name Text Set the name of the output column. Broadcast Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Image and Numeric Array. Values: Align Leading Dimensions, Align Trailing Dimensions See also Keywords: ", "tags": "", "url": "nodes.mask.compare.not_equal.html"},
{"title": "Erode", "text": "Erode Erode input mask(s) using binary morphology. Erosion takes the minimum of all the pixels identified by the structuring element (kernel) defined in the options. Inputs Input Input mask(s). Type: Mask, List, Required, Single Outputs Output Output mask(s). Type: Mask, List Settings Kernel Selection The shape of the structuring element. Values: Annulus, Ball, Box, Cross Kernel Radius [px] 3D Vector Set the kernel radius in voxels, specified as [i, j, k]. See also References Binary Erode in SimpleITK Keywords: ", "tags": "", "url": "nodes.mask.morphology.erode.html"},
{"title": "Dilate", "text": "Dilate Dilate input mask(s) using binary morphology. Erosion takes the maximum of all the pixels identified by the structuring element (kernel) defined in the options. Inputs Input Input mask(s). Type: Mask, List, Required, Single Outputs Output Output mask(s). Type: Mask, List Settings Kernel Selection The shape of the structuring element. Values: Annulus, Ball, Box, Cross Kernel Radius [px] 3D Vector Set the kernel radius in voxels, specified as [i, j, k]. See also References Binary Dilate in SimpleITK Keywords: ", "tags": "", "url": "nodes.mask.morphology.dilate.html"},
{"title": "Opening", "text": "Opening Removes small (i.e., smaller than the structuring element) structures in the interior or at the boundaries of the mask(s). The morphological opening of a mask &ldquo;f&rdquo; is defined as: Opening(f) = Dilatation(Erosion(f)). Inputs Input Input mask(s). Type: Image, Mask, List, Required, Single Outputs Output Output mask(s). Type: Mask, List Settings Kernel Selection Shape of the structuring element. Values: Annulus, Ball, Box, Cross Kernel Radius [px] 3D Vector Set the kernel radius in voxels, specified as [i, j, k]. Safe Border Boolean Add a safe border to input image to avoid border effects and remove it once the operation is done. This is only applicable to image inputs. See also References Binary Opening in SimpleITK Keywords: ", "tags": "", "url": "nodes.mask.morphology.opening.html"},
{"title": "Closing", "text": "Closing This filter removes small (i.e., smaller than the structuring element) holes and tube like structures in the interior or at the boundaries of the mask(s). The morphological closing of an mask &ldquo;f&rdquo; is defined as: Closing(f) = Erosion(Dilation(f)). Inputs Input Input mask(s). Type: Image, Mask, List, Required, Single Outputs Output Output mask(s). Type: Mask, List Settings Kernel Selection Shape of the structuring element. Values: Annulus, Ball, Box, Cross Kernel Radius [px] 3D Vector Set the kernel radius in voxels, specified as [i, j, k]. Safe Border Boolean Add a safe border to input image to avoid border effects and remove it once the operation is done. See also References Binary Closing in SimpleITK Keywords: ", "tags": "", "url": "nodes.mask.morphology.closing.html"},
{"title": "Opening by Reconstruction", "text": "Opening by Reconstruction This filter preserves regions, in the foreground, that can completely contain the structuring element. At the same time, this filter eliminates all other regions of foreground pixels. Contrary to the morphological opening, the opening by reconstruction preserves the shape of the components that are not removed by erosion. The opening by reconstruction of an input &ldquo;f&rdquo; is defined as: OpeningByReconstruction(f) = DilationByRecontruction(f, Erosion(f)). For image inputs, opening by reconstruction not only removes structures destroyed by the erosion, but also levels down the contrast of the brightest regions. If Preserve Intensities is on, a subsequent reconstruction by dilation using a marker image that is the original image for all unaffected pixels. Inputs Input Input image(s) or mask(s). Type: Image, Mask, List, Required, Single Outputs Output Output image(s) or mask(s). Type: Mask, List Settings Kernel Selection Shape of the structuring element. Values: Annulus, Ball, Box, Cross Kernel Radius [px] 3D Vector Set the kernel radius in voxels, specified as [i, j, k]. Connectivity Selection Set whether the connected components are defined strictly by face connectivity or by face+edge+vertex (full) connectivity. Values: Face Connectivity, Full Connectivity Preserve Intensities Boolean Set whether the original intensities of the image retained for those pixels unaffected by the opening by reconstruction. If Flase, the output pixel contrast will be reduced. This is only applicable to image inputs. See also Binary Opening by Reconstruction in SimpleITK Keywords: ", "tags": "", "url": "nodes.mask.morphology.opening_by_reconstruction.html"},
{"title": "Closing by Reconstruction", "text": "Closing by Reconstruction This node removes holes in foreground components that will not completely fit the structuring element. Contrary to morphological closing, closing by reconstruction preserves the external shape of the foreground components. It is defined as: Closing(f) = ReconstructionByErosion(Dilation(f)). For image inputs, closing by reconstruction not only preserves structures preserved by the dilation, but also raises the contrast of the darkest regions. If Preserve Intensities is on, a subsequent reconstruction by dilation using a marker image that is the original image for all unaffected pixels. Inputs Input Input image(s) or mask(s). Type: Image, Mask, List, Required, Single Outputs Output Output image(s) or mask(s). Type: Image, Mask, List Settings Kernel Selection Shape of the structuring element. Values: Annulus, Ball, Box, Cross Kernel Radius [px] 3D Vector Set the kernel radius in voxels, specified as [i, j, k]. Connectivity Selection Set whether the connected components are defined strictly by face connectivity or by face+edge+vertex (full) connectivity. Values: Face Connectivity, Full Connectivity Preserve Intensities Boolean Set whether the original intensities of the image retained for those pixels unaffected by the opening by reconstruction. If Flase, the output pixel contrast will be reduced. This is only applicable to image inputs. See also Binary Opening by Reconstruction in SimpleITK Keywords: ", "tags": "", "url": "nodes.mask.morphology.closing_by_reconstruction.html"},
{"title": "Neighborhood Voting", "text": "Voting Applies a voting operation in a neighborhood of each pixel. Inputs Input Input mask(s). Type: Mask, List, Required, Single Outputs Output Output mask(s). Type: Mask, List Settings Birth Threshold Integer Pixels that are FALSE will turn TRUE when the number of neighbors TRUE is larger than the value defined in this threshold. Survival Threshold Integer Pixels that are TRUE will turn FALSE when the number of neighbors TRUE is smaller than the value defined in this survival threshold. Kernel Radius [px] Integers The radius of the neighborhood used to compute the median, specified in voxels.. See also References Binary Voting in SimpleITK Keywords: ", "tags": "", "url": "nodes.mask.morphology.neighborhood_voting.html"},
{"title": "Fill Hole by Voting", "text": "Fill Hole Fills holes and cavities by applying a voting operation on each pixel. Inputs Input Input mask(s). Type: Mask, List, Required, Single Outputs Output Output mask(s). Type: Mask, List Settings Majority Threshold Integer The number of pixels over 50% that will decide whether an FALSE pixel will become TRUE or not. For example, if the neighborhood of a pixel has 124 pixels (excluding itself), the 50% will be 62, and if you set up a Majority threshold of 5, that means that the filter will require 67 or more neighbor pixels to be TRUE in order to switch the current FALSE pixel to TRUE. The default value is 1. Kernel Radius [px] Integers The radius of the neighborhood used to compute the median. See also References Binary Voting Hole Filling in SimpleITK Keywords: ", "tags": "", "url": "nodes.mask.morphology.fill_hole_by_voting.html"},
{"title": "Skeleton", "text": "Skeleton The filter will produce a morphological skeleton (or medial axis) of mask(s). Inputs Input Input mask(s). Type: Mask, List, Required, Single Outputs Output Output mask(s). Type: Mask, List See also References Binary Thinning in SimpleITK Keywords: ", "tags": "", "url": "nodes.mask.morphology.skeleton.html"},
{"title": "Extract Components by Seeds", "text": "Extract Components Extracts connected regions in the input mask(s) that are connected to the seed specified in the node settings. Inputs Input Input mask(s). Type: Mask, List, Required, Single Outputs Output Output mask(s). Type: Mask, List Settings Seed Index [px] Array Set the seed position in voxels, specified as [i, j, k] Connectivity Selection Set whether the connected components are defined strictly by face connectivity or by face+edge+vertex (full) connectivity. Values: Face Connectivity, Full Connectivity See also Keywords: ", "tags": "", "url": "nodes.mask.morphology.extract_components_by_seeds.html"},
{"title": "Extract Components by Shape", "text": "Extract Components Extracts shapes, i.e. connected regions, from input labelmaps or mask(s) based on the following properties: Property Description Elongation The ratio of the largest principal moment to the smallest principal moment. Its value is greater or equal to 1. Equivalent Ellipsoid Diameter The diameters of the ellipsoid with the same size and ratio of all the axes as the object. The value depends on the image spacing. Equivalent Spherical Perimeter The equivalent perimeter of a hypersphere with the same volume as the object. The value depends on the image spacing. Equivalent Spherical Radius The radius of a sphere with the same volume as the region. Feret Diameter The diameter of the sphere that inclues the region. Flatness Number of Pixels Number of pixels in the region. Number of Pixels on Border Number of pixels adjacent to a pixel with value FALSE. Perimeter Perimeter on Border Perimeter on Border Ratio Physical Size The volume of the region in physical units. Principal Axes The principal axes of the region. Principal Moments The principal moments of the region. Roundness The roundness of the object. Inputs Input Input. Type: Mask, Image, List, Required, Single Outputs Output Output. Type: Mask, Image, List Settings Filter By Selection Select which shape statistic should be used for extracting a connected component from the input. Values: Elongation, Equivalent Spherical Perimeter, Equivalent Spherical Radius, Feret Diameter, Flatness, Number of Pixels, Number of Pixels on Border, Perimeter, Perimeter on Border, Perimeter on Border Ratio, Physical Size, Roundness Order By Selection Order the connected components according to a shape statistic either Ascending (smallest value first) or Descending (largest value first). Values: Ascending, Descending Keep num of Components Integer How many of the connected components to keep from the ordered shape statistic. To keep the largest component in an input, choose &ldquo;Filter By: Physical Size&rdquo;, &ldquo;Order: Physical Size&rdquo; and &ldquo;Keep num of Components: 1&rdquo;. Connectivity Selection Set whether the connected components are defined strictly by face connectivity or by face+edge+vertex (full) connectivity. Values: Face Connectivity, Full Connectivity See also Keywords: ", "tags": "", "url": "nodes.mask.morphology.extract_components_by_shape.html"},
{"title": "Bounding Box", "text": "Bounding Box Create a bounding box from a binary mask. The bounding box is the smallest cuboid that completely contains the TRUE values in the mask. Inputs Input Input mask(s). Type: Mask, List, Required, Single Outputs Output Output mask(s). Type: Mask See also Keywords: ", "tags": "", "url": "nodes.mask.morphology.bounding_box.html"},
{"title": "Mask Contour", "text": "Mask Contour The filter will produce a contour of the objects in a binary mask. Inputs Input Input mask(s). Type: Mask, List, Required, Single Outputs Output Output mask(s). Type: Mask Settings Fully Connected Boolean Set whether the connected components are defined strictly by face connectivity or by face+edge+vertex (full) connectivity. Full connectivity produces thicker contours. Slicewise Boolean Calculate the analysis slice-by-slice instead of volume-by-volume. A contour is defined as any TRUE voxel which has neighboring FALSE voxel. If the filter is not run slice-wise, the contours will be generated in 3D, which does not guarantee 1-pixel wide contours in the slice plane, since there can be FALSE voxels neighboring a TRUE voxel above or below it. Running the filter slice-wise will always generate 1-pixel wide contours in the selected plane. Slice Plane Selection If the output is calculated slice-by-slice, select the slice direction of the image matrix. Default option is i-j, and represent axial slices in an axial image, sagittal slices in a sagittal image or coronal slices in a coronal image. Values: i-j, i-k, j-k See also Keywords: ", "tags": "", "url": "nodes.mask.morphology.mask_contour.html"},
{"title": "Fill Hole", "text": "Fill Hole Remove holes not connected to the boundary of the Mask. Inputs Input Input Mask(s). Type: Mask, List, Required, Single Outputs Output Output Mask. Type: Mask Settings Connectivity Selection Set whether the holes are defined strictly by face connectivity or by face+edge+vertex (full) connectivity. Values: Face Connectivity, Full Connectivity Slicewise Boolean Perform the operation slicewise. Useful if holes in the image extend to the top or bottom slices of an image stack, i.e. a body contour of the head and neck area where the trachea extends to the bottom slice. Slice Plane Selection If the output is calculated slice-by-slice, select the slice direction of the image matrix. Default option is &ldquo;i-j&rdquo;, and represent axial slices in an axial image, sagittal slices in a sagittal image or coronal slices in a coronal image. Values: i-j, i-k, j-k See also Keywords: ", "tags": "", "url": "nodes.mask.morphology.fill_hole.html"},
{"title": "Shape Statistics", "text": "Shape Statistics Compute shape properties of input label map(s) or mask(s). The following properties are calculated: Property Description Elongation The ratio of the largest principal moment to the smallest principal moment. Its value is greater or equal to 1. Equivalent Ellipsoid Diameter The diameters of the ellipsoid with the same size and ratio of all the axes as the object. The value depends on the image spacing. Equivalent Spherical Perimeter The equivalent perimeter of a hypersphere with the same volume as the object. The value depends on the image spacing. Equivalent Spherical Radius The radius of a sphere with the same volume as the region. Feret Diameter The diameter of the sphere that inclues the region. Flatness Number of Pixels Number of pixels in the region. Number of Pixels on Border Number of pixels adjacent to a pixel with value FALSE. Perimeter Perimeter on Border Perimeter on Border Ratio Physical Size The volume of the region in physical units. Principal Axes The principal axes of the region. Principal Moments The principal moments of the region. Roundness The roundness of the object. Inputs Input Input Image(s) or Mask(s) Type: Image, Mask, List, Required, Single Outputs Output Table containing the shape statistics of the input. Type: Table Centroid Index A list containing the indices [i, j, k] of the center of mass for each mask or component. Type: Numeric Array Centroid Position A list containing the positions [x, y, z] of the center of mass for each mask or component. Type: Numeric Array Centroid Seeds A output labelmap or mask with a seed for each mask or labelmap. If the input is a mask, the seed output is TRUE at the center of mass of each mask and FALSE elsewhere. If the input is a labelmap, the center of mass of each labelmap is indicated by the value of that label. Type: Image See also Keywords: ", "tags": "", "url": "nodes.mask.distance_and_overlap.shape_statistics.html"},
{"title": "Volumetric Overlap", "text": "Volumetric Overlap This node computes a set of standard volumetric overlap metrics between corresponding labels in two masks. These measures quantify how well two binary segmentations agree, providing insight into similarity (agreement) and error (disagreement) from both directions. Background voxels (label 0) are ignored. For each pair of masks Reference ( R ) and Test (T) (or for each label within each mask), the following metrics are returned: Dice Coefficient: \[ \text{Dice} = \frac{2\,|R \cap T|}{|R| + |T|} \] A measure of overlap ranging from 0 (no overlap) to 1 (perfect overlap). Doubly weights the intersection, making it sensitive to small objects. Jaccard Index (Intersection over Union): \[ \text{Jaccard} = \frac{|R \cap T|}{|R \cup T|} \] Also ranges from 0 to 1. Unlike Dice, it treats false positives and false negatives symmetrically in the denominator. Volume Similarity: \[ \text{Similarity} = 1 - \frac{|\,|R| - |T|\,|}{|R| + |T|} \] Reflects how similar the volumes of the two masks are, without regard for spatial alignment. A value of 1 means identical volumes; lower values indicate volume discrepancies. False Positive Error (FPE): \[ \text{FPE} = \frac{|T \setminus R|}{|T|} \] The fraction of voxels in the test mask (T) that are not in the reference mask ( R ). Indicates over-segmentation relative to the reference. False Negative Error (FNE): \[ \text{FNE} = \frac{|R \setminus T|}{|R|} \] The fraction of voxels in the reference mask ( R ) that are missing from the test mask ( R ). Indicates under-segmentation. Each metric is computed either globally across the entire volume or on a slice-by-slice basis (if Slice-wise is enabled). These measures are suitable for evaluating segmentation algorithms, comparing manual vs. automated labels, and tracking performance across datasets. Inputs Reference Reference mask(s). Type: Mask, List, Required, Single Inputs Input mask(s). Type: Mask, List, Required, Single Outputs Output Table(s) containing the results. Type: Table Settings Slice-wise Boolean Calculate the volumetric overlap per slice. Slice Plane Selection Select the slice plane for slicewise calculation. Values: i-j, i-k, j-k Ignore Geometry Boolean Ignore geometric information for calculations, i.e. Position, Orientation and Voxelsize, and only compare matrices. Useful for comparing e.g. 2D slices from different series. Compare Input List Selection If Pairwise is selected, each element in the Reference list is compared to the corresponding element in the Input list. The two lists must be the same lenght. Output is a list of tables, one for each pair. If you want to have the information as a single table, use Merge Tables. If Against each Ref element is selected, the filter compares each reference volume to all volumes in the input list. If the reference input is a list, each element in that list will be compared to all elements in the input list, and the output will be a list of tables. Values: Pairwise, Against each Ref element Merge Tables Boolean If output produces a list, merge the list into one table. See also Keywords: Dice, Jaccard, Similarity, False Positive Error, False Negative Error ", "tags": "", "url": "nodes.mask.distance_and_overlap.volumetric_overlap.html"},
{"title": "Haustorff Distance", "text": "Hausdorff Distance This node computes the (symmetric) Hausdorff distance between the boundary (TRUE) voxels of two masks. The Hausdorff distance measures the greatest of all distances from any point on one surface to the closest point on the other surface. Formally, for two sets of surface points (A) and (B): \[ H(A, B) = \max\bigl\{\sup_{a \in A} d(a, B),\; \sup_{b \in B} d(b, A)\bigr\}, \] where \[ d(a, B) = \inf_{b \in B} \|a - b\| \] is the minimum Euclidean distance from point (a) to the set (B). A smaller Hausdorff distance indicates that the two masks’ boundaries are closer, i.e., more geometrically similar. Because it captures the worst-case boundary deviation, it is especially sensitive to outlier mismatches. Inputs Reference Reference mask(s). Type: Mask, List, Required, Single Inputs Input mask(s). Type: Mask, List, Required, Single Outputs Output Table(s) containing the results. Type: Table, List Settings Slice-wise Boolean Calculate the 2D Hausdorff distance per slice. Slice Plane Selection Select the slice plane for slicewise calculation. Values: i-j, i-k, j-k Compare Input List Selection If Pairwise is selected, each element in the Reference list is compared to the corresponding element in the Input list. The two lists must be the same lenght. Output is a list of tables, one for each pair. If you want to have the information as a single table, use Merge Tables. If Against each Ref element is selected, the filter compares each reference volume to all volumes in the input list. If the reference input is a list, each element in that list will be compared to all elements in the input list, and the output will be a list of tables. Values: Pairwise, Against each Ref element Merge Tables Boolean If output produces a list, merge the list into one table. See also Keywords: ", "tags": "", "url": "nodes.mask.distance_and_overlap.surface_overlap.haustorff_distance.html"},
{"title": "Surface Dice Coefficient", "text": "Surface Dice Computes the overlap of two surfaces at a specified tolerance \(\tau\), as opposed to normal Dice which assesses the overlap of two volumes. It was first introduced by Nikolov et al. The distance between two surfaces is the euclidian distance from one to the other. If the distance from the reference surface to a point on the input surface \(&lt;\tau\), the surfaces at that point on the input are overlapping. The surface Dice coefficient is then calculated as \[ \begin{equation} SD = \frac{A_{ref,&lt;\tau}+A_{in,&lt;\tau}}{A_{ref}+A_{in}} \label{eq:sample} \end{equation} \] As with volume Dice, surface DICE \(\begin{equation}0&lt;SD&lt;1\end{equation}\). Inputs Reference Reference mask(s). Type: Mask, List, Required, Single Inputs Input mask(s). Type: Mask, List, Required, Single Outputs Output Table(s) containing the results. Type: Table, List Settings Dimensionality Selection This setting defines how the surfaces should be compared. 2D: The comparison is done slicewise, i.e. the distance between the surfaces is only measured in the slice plane: 2.5D: This setting is usually appropriate when the structure has been defined as a stack of countours. The distance is calculad in 3D, but it is only measured on 2D contours, i.e. on the points that has actually been defined. See Mask Contour and the Slicewise setting for further information. 3D: The distance and measurement is done in 3D. Values: 2D, 2.5D, 3D Slice Plane Selection Select the slice direction of the image matrix for 2D and 2.D evaluation. Default option is &quot;i-j&quot;, and represent axial slices in an axial image, sagittal slices in a sagittal image or coronal slices in a coronal image. Values: i-j, i-k, j-k Ignore Geometry Boolean Ignore geometric information for calculations, i.e. Position, Orientation and Voxelsize, and only compare matrices. Useful for comparing e.g. 2D slices from different series. Compare Input List Selection If Pairwise is selected, each element in the Reference list is compared to the corresponding element in the Input list. The two lists must be the same lenght. Output is a list of tables, one for each pair. If you want to have the information as a single table, use Merge Tables. If Against each Ref element is selected, the filter compares each reference volume to all volumes in the input list. If the reference input is a list, each element in that list will be compared to all elements in the input list, and the output will be a list of tables. Values: Pairwise, Against each Ref element Merge Tables Boolean If output produces a list, merge the list into one table. Tolerance [mm] Float Set the tolerance for accepting two surfaces as overlapping. See also Keywords: ", "tags": "", "url": "nodes.mask.distance_and_overlap.surface_overlap.surface_dice_coefficient.html"},
{"title": "Added Path Length", "text": "Added Path Length Added path length is an overlap metric that quantifies the additional distance required to align the contours of two shapes. Inputs Reference Reference mask. Type: Mask List, Required, Single Inputs Input mask. Type: Mask List, Required, Single Outputs Output Table(s) containing the results. Type: Table Settings Fully Connected Boolean Define if neighboring voxels should include diagonal elements (fully connected) or just voxels in the vertical, horizontal and depth slice. Slice-wise Boolean Perform the calculations slice by slice, or also considering neighbouring slices. Slice Plane Selection Define the plane where APL is calculated. Values: i-j, i-k, j-k Ignore Geometry Boolean Ignore geometric information for calculations, i.e. Position, Orientation and Voxelsize, and only compare matrices. Useful for comparing e.g. 2D slices from different series. Compare Input List Selection Select how to compare lists of input. Values: Pairwise, Against each Ref element Merge Tables Boolean If output produces a list, merge the list into one table. See also Keywords: ", "tags": "", "url": "nodes.mask.distance_and_overlap.surface_overlap.added_path_length.html"},
{"title": "Euclidean Distance Map", "text": "Euclidean Distance Description: Computes the Euclidean distance transform of one or more binary masks. The output image assigns to each voxel the shortest straight-line distance to the nearest boundary (edge) voxel of the mask. Optionally, you can produce a signed distance map so that distances inside the mask carry one sign (positive or negative) and distances outside carry the opposite sign. Inputs Mask Input One or more binary masks whose distance transform will be computed. Type: Mask Cardinality: List, Required, Single Outputs Output An image (per input mask) where each voxel’s value is its Euclidean distance to the nearest mask edge. Type: Image Cardinality: List Settings Distance Unit Selection Choose the measurement unit for the distance values. Options: mm, Voxels Signed Distance Map Boolean Enable to output a signed distance map. Inside-mask distances will carry one sign (see “Inside is”), outside-mask distances the opposite. Inside Is Selection When producing a signed map, specify whether “inside” distances are positive or negative. Options: Positive, Negative Example Suppose you have a binary mask of a circular object: &lt;InputMask&gt; 0 0 0 0 0 0 1 1 1 0 0 1 1 1 0 0 1 1 1 0 0 0 0 0 0 &lt;/InputMask&gt; With unsigned output, the center voxel value = 1.0 (in voxels). With signed output and “Inside Is Positive,” the center voxel = +1.0; a voxel just outside the mask = –1.0. See also SimpleITK SignedMaurerDistanceMapImageFilter https://simpleitk.org/doxygen/latest/html/classitk_1_1simple_1_1SignedMaurerDistanceMapImageFilter.html Keywords: distance transform, Euclidean distance, signed distance map, binary mask, morphology ", "tags": "", "url": "nodes.mask.distance_and_overlap.euclidean_distance_map.html"},
{"title": "STAPLE", "text": "STAPLE The STAPLE node implements the Simultaneous Truth and Performance Level Estimation algorithm for generating ground truth volumes from a set of binary expert segmentations. The STAPLE algorithm treats segmentation as a pixelwise classification, which leads to an averaging scheme that accounts for systematic biases in the behavior of experts in order to generate a fuzzy ground truth volume and simultaneous accuracy assessment of each expert. The ground truth volumes produced by this filter contain values between zero and one that indicate probability of each pixel being in the object targeted by the segmentation. Inputs Inputs Input list of masks containing segmentations of the same object. Must contain at least two masks of the same size. Type: Mask, List, Required, Single Outputs Probability Map An image with the same spatial properties as the input mask, with values between zero and one that indicate the probability of each pixel is a part of the object targeted by the segmentation. Type: Image Statistics A table that summarizes the Sensitivity and Specificity of each mask. Type: Table See also Keywords: sensitivity, specificity ", "tags": "", "url": "nodes.mask.distance_and_overlap.staple.html"},
{"title": "Voting", "text": "Voting This node performs pixelwise voting among an arbitrary number of input Masks, where each of them represents a segmentation of the same scene (i.e., image). Voting is a simple method of classifier combination applied to image segmentation. Each output pixel contains the value (TRUE or FALSE) that occurred most often among the values assigned to this pixel in all the input volumes, that is, the value that received the maximum number of &ldquo;votes&rdquo; from the input pixels. Inputs Inputs Input list of masks containing segmentations of the same object. Must contain at least two masks of the same size. Type: Mask, List, Required, Single Outputs Output Mask with the result of the voting. Type: Mask Settings Analysis Selection Within List assumes that the input is a list containing segmentations of the same object, and performs the analysis within the input list. Across Lists assumes that there are at least two corresponding list inputs, where element n in each list are segmentations of the same object and performs the analysis across lists. Values: Within List, Across Lists Include Undecided Voxels Boolean Set undecided voxels to true or false. See also References Label Voting in SimpleITK Keywords: ", "tags": "", "url": "nodes.mask.distance_and_overlap.voting.html"},
{"title": "Create Translation Transform", "text": "Transform A translation transform is a linear transform that moves an object in a coordinate system in a given direction, without any rotation, scaling or shearing. The transform has three parameters; the translation in the x, y and z directions. Outputs T(x) Resulting transform. Type: Struct List Settings Configure Extrapolation Value Float The default voxel value for voxels outside the Frame of Reference. New Frame of Reference Boolean The Frame of Reference describes the position, orientation, matrix size, and voxel size, of the transformed input. Initial Transform Boolean Add an initial transform to the output. Parameters Translation [mm] Numbers The translation vector [x, y, z] of the transform. See also Keywords: ", "tags": "", "url": "nodes.mask.transforms.create_transforms.create_translation_transform.html"},
{"title": "Create Rigid Transform", "text": "Transform A rigid transform is a linear transform that moves and rotates an object in a coordinate system. The transform has six parameters; the translation in the x, y and z directions; and a 3D rotation which can be represented by three parameters in a number of different ways. Outputs T(x) Resulting transform. Type: Struct Settings Configure Extrapolation Value Number The default voxel value for voxels outside the Frame of Reference. New Frame of Reference Boolean The Frame of Reference describes the position, orientation, matrix size, and voxel size, of the transformed input. Initial Transform Boolean Add an initial transform to the output. Rotation Rotational Representation Selection Select input rotation representation. Rotation Axis and Angle describes a rotation around an axis defined by a vector. The input vector does not have to be normalized. This is the default representation. Rotation Matrix describes the rotation as a 3x3 orthogonal matrix. The rotation matrix must have a determinant of 1. Euler Angles describes intrinsic rotation around three principal axes X, Y, Z, which can be described as yaw, pitch, and roll. Intrinsic rotation means that the rotations occur about the axes of a coordinate system that is attached to the moving body. The order in which the rotations are applied is important. Two options are available: ZXY and ZYX. Values: Rotation Axis and Angle, Rotation Matrix, Euler Angles (ZXY), Euler Angles (ZYX) Rotational Axis 3D Vector The axis of rotation, described as a vector. The input does not have to be normalized. Rotational Angle [rad] Number The rotation in radians around the axis of rotation. Rotation Matrix Array The matrix must be orthogonal with a determinant of 1. Euler Angles [rad] Numbers Set the rotation as described by Euler angles around X, Y and Z. Center Of Rotation [mm] Numbers The coordinate around which the rotation is defined. Parameters Translation [mm] Numbers The translation vector of the transform. See also Keywords: ", "tags": "", "url": "nodes.mask.transforms.create_transforms.create_rigid_transform.html"},
{"title": "Create Similarity Transform", "text": "Transform A similarity transform is a geometric transformation in which an object is scaled, rotated, and translated, preserving its shape. It is a combination of a scaling, rotation, and translation, and can be represented by a single matrix. The similarity transform preserves the ratios of distances between points and the angles between lines in the original object. Outputs T(x) Resulting transform. Type: Struct Settings Configure Extrapolation Value Number The default voxel value for voxels outside the Frame of Reference. New Frame of Reference Boolean The Frame of Reference describes the position, orientation, matrix size, and voxel size, of the transformed input. Initial Transform Boolean Add an initial transform to the output. Rotation Rotational Representation Selection Select input rotation representation. Rotation Axis and Angle describes a rotation around an axis defined by a vector. The input vector does not have to be normalized. This is the default representation. Rotation Matrix describes the rotation as a 3x3 orthogonal matrix. The rotation matrix must have a determinant of 1. Euler Angles describes intrinsic rotation around three principal axes X, Y, Z, which can be described as yaw, pitch, and roll. Intrinsic rotation means that the rotations occur about the axes of a coordinate system that is attached to the moving body. The order in which the rotations are applied is important. Two options are available: ZXY and ZYX. Values: Rotation Axis and Angle, Rotation Matrix, Euler Angles (ZXY), Euler Angles (ZYX) Rotational Axis 3D Vector The axis of rotation, described as a vector. The input does not have to be normalized. Rotational Angle [rad] Number The rotation in radians around the axis of rotation. Rotation Matrix Array The matrix must be orthogonal with a determinant of 1. Euler Angles [rad] Numbers Set the rotation as described by Euler angles around X, Y and Z. Center Of Rotation [mm] Numbers The coordinate around which the rotation is defined. Parameters Translation [mm] Numbers The translation vector of the transform. Uniform Scale Number The uniform scaling of the transform. See also Keywords: ", "tags": "", "url": "nodes.mask.transforms.create_transforms.create_similarity_transform.html"},
{"title": "Create Affine Transform", "text": "Transform An affine transform is a linear transform that moves, rotates, scales and shears an object in a coordinate system. The transform has twelve parameters; the translation in the x, y and z directions; a 3D rotation which can be represented by three parameters in a number of different ways; the scaling in the x, y, and z directions; and the shear in the x, y, and z directions. Outputs T(x) Resulting transform. Type: Struct Settings Configure Extrapolation Value Number The default voxel value for voxels outside the Frame of Reference. New Frame of Reference Boolean The Frame of Reference describes the position, orientation, matrix size, and voxel size, of the transformed input. Initial Transform Boolean Add an initial transform to the output. Rotation Rotational Representation Selection Select input rotation representation. Rotation Axis and Angle describes a rotation around an axis defined by a vector. The input vector does not have to be normalized. This is the default representation. Rotation Matrix describes the rotation as a 3x3 orthogonal matrix. The rotation matrix must have a determinant of 1. Euler Angles describes intrinsic rotation around three principal axes X, Y, Z, which can be described as yaw, pitch, and roll. Intrinsic rotation means that the rotations occur about the axes of a coordinate system that is attached to the moving body. The order in which the rotations are applied is important. Two options are available: ZXY and ZYX. Values: Rotation Axis and Angle, Rotation Matrix, Euler Angles (ZXY), Euler Angles (ZYX) Rotational Axis 3D Vector The axis of rotation, described as a vector. The input does not have to be normalized. Rotational Angle [rad] Number The rotation in radians around the axis of rotation. Rotation Matrix Array The matrix must be orthogonal with a determinant of 1. Euler Angles [rad] Numbers Set the rotation as described by Euler angles around X, Y and Z. Center Of Rotation [mm] Numbers The coordinate around which the rotation is defined. Parameters Translation [mm] Numbers The translation vector of the transform. Uniform Scale Number The uniform scaling of the transform. Scale Numbers The scaling parameters in the x, y, and z directions. Shear Numbers The shear parameters in the x, y, and z directions. See also Keywords: ", "tags": "", "url": "nodes.mask.transforms.create_transforms.create_affine_transform.html"},
{"title": "Create BSpline Transform", "text": "Transform A BSpline transform is a non-rigid transform that is defined by a grid of control points. Inputs BSpline Defines the control points of the transform. The input must be a 4D image with three elements in the last channel. Each voxel position is a control point with the three elements describing the deformation in that point. Type: Image, List, Required, Single Outputs T(x) Resulting transform. Type: Struct Settings Configure Extrapolation Value Number The default voxel value for voxels outside the Frame of Reference. Spline Order Integer The spline order can take a value between 1 and 3. New Frame of Reference Boolean The Frame of Reference describes the position, orientation, matrix size, and voxel size, of the transformed input. Initial Transform Boolean Add an initial transform to the output. See also Keywords: ", "tags": "", "url": "nodes.mask.transforms.create_transforms.create_bspline_transform.html"},
{"title": "Create Deformation Field Transform", "text": "Transform Create a deformation field transform, defined as a vector field that maps coordinates in the input domain to the output domain. Inputs Deformation Field The deformation vector field. The input can be a ND image, where the last channel must contain 3 elements. Type: Image, List, Required, Single Outputs T(x) Resulting transform. Type: Struct Settings Configure Extrapolation Value Number The default voxel value for voxels outside the Frame of Reference. New Frame of Reference Boolean The Frame of Reference describes the position, orientation, matrix size, and voxel size, of the transformed input. Initial Transform Boolean Add an initial transform to the output. See also Keywords: ", "tags": "", "url": "nodes.mask.transforms.create_transforms.create_deformation_field_transform.html"},
{"title": "Get Deformation Field", "text": "Get Deformation Field Get a deformation field transform from an existing transform. Inputs T(x) Input transform. Type: List of Lists, Struct, List, Required, Single Outputs T(x) Resulting Deformation Field transform. Type: Struct Deformation Field Deformation field represented as a 4D or 5D image, where the last channel has three elements and hold the vector field information. Type: Image Settings Configure Extrapolation Value Number The default voxel value for voxels outside the Frame of Reference. New Frame of Reference Boolean The Frame of Reference describes the position, orientation, matrix size, and voxel size, of the transformed input. Initial Transform Boolean Add an initial transform to the output. See also Keywords: ", "tags": "", "url": "nodes.mask.transforms.create_transforms.get_deformation_field.html"},
{"title": "Read Elastix Transform from File", "text": "Import Transform Import an Elastix transform from file. Outputs Output Imported transform. Type: Struct, Struct List Settings File Path Filepath Path to the transform file to be imported. Ignore Initial Transform Boolean Ignore initial transforms in the imported transform file. See also Keywords: ", "tags": "", "url": "nodes.mask.transforms.create_transforms.read_elastix_transform_from_file.html"},
{"title": "Write Elastix Transform to File", "text": "Export Transform Export an input transform to file, in the Elastix format. Inputs Input Input transform. Type: List of Lists, Struct, List, Required, Single Settings File Text Transform file name. Folder Path Output path. Ignore Initial Transform Boolean Ignore initial transforms in the exported transform file. See also Keywords: ", "tags": "", "url": "nodes.mask.transforms.create_transforms.write_elastix_transform_to_file.html"},
{"title": "Apply Transform", "text": "Apply Transform Apply one or more transforms to an input image, mask, numeric array with coordinates or a contour set. A numeric array with coordinates must be on the form Nx3. Inputs Input Input Image, Mask, Numeric Array or Contours. Type: Mask, Image, Numeric Array, Contour, List, Required, Single Transform Input transform. Type: List of Lists, Struct, List, Required, Single Outputs Output Resulting output. Type: Mask, Image, Numeric Array, Contour, List Settings Configure New Resample Reference Boolean Override the Input Transform Frame of Reference. This setting redefines in which space the result will be represented in. Image/Mask Settings Interpolator Selection Choose an appropriate interpolator for your task: Nearest Neighbour and Linear: These methods are the fastest but offer the least accuracy. Windowed Sinc: Provides more accurate results but is slower in comparison. Important Note: When transforming binary masks, always use the Nearest Neighbour interpolator to maintain accuracy. This setting applies only to images and masks. Contours and coordinates do not undergo any interpolation. Values: Nearest Neighbour, Linear, BSpline Order 2, BSpline Order 3, BSpline Order 4, BSpline Order 5, Gaussian, Hamming Windowed Sinc, Cosine Windowed Sinc, Welch Windowed Sinc, Lanczos Windowed Sinc, Blackman Windowed Sinc Contours/Point Settings Transform Direction Selection This setting allows you to specify the direction of the transform with two options: Moving to Fixed (default): Automatically inverts the transform, ensuring accurate alignment when transferring data from the moving (source) to the fixed (target) Frame of Reference. Fixed to Moving: Applies the transform directly without inversion. The direction setting is crucial because transforms affect images/masks and coordinates/contours differently. Images and masks are rendered in the fixed (target) Frame of Reference, whereas coordinates and contours are transformed from the fixed to the moving Frame of Reference. This means that coordinates and contours often require the inverse transform to accurately &ldquo;follow&rdquo; the image as it moves to a new frame of reference. Note that there is a separate setting, Invert Deformation Field Settings, which controls the inversion of nonlinear transforms. Values: Fixed To Moving, Moving To Fixed Invert Deformation Field Settings Invert a nonlinear transform using an iterative method, described here. Maximum Iterations Integer Maximum number of iterations. Mean Error Tol Decimal Number Mean Error Tolerance for the inverted displacement field. Max Error Tol Decimal Number Max Error Tolerance for the inverted displacement field. Enforce Boundary Cond Boolean Enables or disables boundary condition enforcement. See also Keywords: ", "tags": "", "url": "nodes.mask.transforms.apply_transform.html"},
{"title": "Resample to Reference", "text": "Resample Resample an input image or mask to a reference coordinate system. The reference coordinate system can be defined by another image or mask, or by a Frame of Reference structure. Inputs Input Input image or mask. Type: Mask, Image, List, Required, Single Reference Reference coordinate system. Type: Mask, Image, List, Required, Single Outputs Output Resulting resampled input. Type: Image Settings Interpolator Selection Select the interpolator. Nearest neighbour and linear transforms are fast, but give the least accurate results. Windowed sinc methods are more accurate, but are also slower. Values: Nearest Neighbour, Linear, BSpline Order 2, BSpline Order 3, BSpline Order 4, BSpline Order 5, Gaussian, Hamming Windowed Sinc, Cosine Windowed Sinc, Welch Windowed Sinc, Lanczos Windowed Sinc, Blackman Windowed Sinc Extrapolation Value Float Value of extrapolated voxels. See also Keywords: ", "tags": "", "url": "nodes.mask.transforms.resample_to_reference.html"},
{"title": "Invert Transform", "text": "Invert Transform Get the inverse of a transform or a list of transforms, including initial transforms. An inverse transform changes the direction of the transform. If the transform is the result of an image registration, the transform maps the moving image onto the fixed image. The inverse transform maps the fixed image onto the moving image. Linear transforms (Translation, Rigid, Similarity and Affine transforms) have analytical solutsions to the inverse transforms, whereas non-rigid transforms in general do not. If a transform or any of the initial transforms is a non-linear transform, the inverse of all transforms combined will be estimated using the InvertDisplacementFieldImageFilter. Inputs Input Input transform. Type: List of Lists, Struct, List, Required, Single Outputs Output Resulting inverse transform. Type: List of Lists, Struct, List Settings Invert Deformation Field Settings Maximum Iterations Integer Maximum number of iterations when estimating the inverse deformation field. Mean Error Tol Float Mean Error Tolerance for the inverted displacement field. Max Error Tol Float Max Error Tolerance for the inverted displacement field. Enforce Boundary Cond Boolean Enables or disables boundary condition enforcement. See also Keywords: ", "tags": "", "url": "nodes.mask.transforms.invert_transform.html"},
{"title": "Resample: Voxel Size", "text": "Resample Resample the input image or mask to a new resolution, using a user specified voxel size. Select if the resulting image share the same origin as the input, or the same center. The difference is illustrated in the figure below. The blue image grid represents the input, where the circles mark the center of each voxel. The orange image grid represents two ways to align the output. Aligning the origin means aligning the center position of the first voxel in the image, and aligning the center means aligning the center positions of the input and the output. If you choose to align the center positions of the images, the origin of the output will be different from the input. Inputs Input Input. Type: Mask, Image, List, Required, Single Outputs Output Resampled input. Type: Mask, Image, List Settings Voxel Size [mm] Numbers Set the new voxel size. Extrapolation Value Float Set values for voxels in the output image that is outside the field-of-view of the input image. Position Selection Select alignment of the output image. Values: Align Centers, Align Origins Interpolator Selection Select the interpolator. Nearest neighbour and linear transforms are fast, but give the least accurate results. Windowed sinc methods are more accurate, but are also slower. Values: Nearest Neighbour, Linear, BSpline Order 2, BSpline Order 3, BSpline Order 4, BSpline Order 5, Gaussian, Hamming Windowed Sinc, Cosine Windowed Sinc, Welch Windowed Sinc, Lanczos Windowed Sinc, Blackman Windowed Sinc See also Keywords: ", "tags": "", "url": "nodes.mask.transforms.resample_voxel_size.html"},
{"title": "Resample: Matrix Size", "text": "Resample Resample the input image or mask to a new resolution, using a user specified matrix size. Select if the resulting image share the same origin as the input, or the same center. The difference is illustrated in the figure below. The blue image grid represents the input, where the circles mark the center of each voxel. The orange image grid represents two ways to align the output. Aligning the origin means aligning the center position of the first voxel in the image, and aligning the center means aligning the center positions of the input and the output. If you choose to align the center positions of the images, the origin of the output will be different from the input. Inputs Input Input. Type: Mask, Image, List, Required, Single Outputs Output Output. Type: Mask, Image, List Settings Matrix Size [px] Integers Set the new matrix size. Extrapolation Value Float Set values for voxels in the output image that is outside the field-of-view of the input image. Position Selection Select alignment of the output image. Values: Align Centers, Align Origins Interpolator Selection Select the interpolator. Nearest neighbour and linear transforms are fast, but give the least accurate results. Windowed sinc methods are more accurate, but are also slower. Values: Nearest Neighbour, Linear, BSpline Order 2, BSpline Order 3, BSpline Order 4, BSpline Order 5, Gaussian, Hamming Windowed Sinc, Cosine Windowed Sinc, Welch Windowed Sinc, Lanczos Windowed Sinc, Blackman Windowed Sinc See also Keywords: ", "tags": "", "url": "nodes.mask.transforms.resample_matrix_size.html"},
{"title": "Rotate Image", "text": "Rotate Rotate input images or masks along any of the three principal image axes. Inputs Input Input image or mask. Type: Mask, Image, List, Required, Single Outputs Output Resulting image after rotation. Type: Mask, Image, List T(X) The resulting transform. Type: Struct Settings Direction Selection Set direction of rotation. Values: Clockwise, Counter-clockwise Angle [°] Float Rotation angle in degrees. Axis Selection Select the principal axis around which to rotate the image. Values: i, j, k Extrapolation Value Float Set voxel values for extrapolated voxels. Interpolator Selection Select the interpolator. Nearest neighbour and linear transforms are fast, but give the least accurate results. Windowed sinc methods are more accurate, but are also slower. Values: Nearest Neighbour, Linear, BSpline Order 2, BSpline Order 3, BSpline Order 4, BSpline Order 5, Gaussian, Hamming Windowed Sinc, Cosine Windowed Sinc, Welch Windowed Sinc, Lanczos Windowed Sinc, Blackman Windowed Sinc See also Keywords: ", "tags": "", "url": "nodes.mask.transforms.rotate_image.html"},
{"title": "Get Slices", "text": "Get Slices Get a range of slices from an image or a mask. The start and stop slices can be defined by the 0-based slice index, and the slice orientation can be i, j or k. The zero-based slice index can be positive or negative integers, or the keyword end. Example 1: Get the first 4 slices from an input. Start index: 0, Stop index: 3, Slice orientation: k. Example 2: Get the 4 last slices from an input: Start index: end - 3, Stop index: end, Slice orientation: k. or Start index: end - 3, Stop index: -1, Slice orientation: k. Example 3: Remove the first and last slice: Start index: 1, Stop index: end - 1, Slice orientation: k. or Start index: 1, Stop index: -2, Slice orientation: k. Inputs Input Input timage or mask. Type: Mask, Image, List, Required, Single Outputs Output Output. Type: Mask, Image, List Settings Start Slice Text Define the first slice of the output. Stop Slice Text Define the last slice of the output. Slice Orientation Selection Select the slice direction. Default option is k, and represent axial slices in an axial image, sagittal slices in a sagittal image or coronal slices in a coronal image. Values: k, j, i See also Keywords: ", "tags": "", "url": "nodes.mask.reshape.get_slices.html"},
{"title": "Get Volumes", "text": "Get Volumes Get a range of 3D volumes from an input image or mask. The start and stop volumes can be defined by channel, using a 0-based slice index. The zero-based slice index can be positive or negative integers, or the keyword end. Example 1: Get the first 4 volumes from channel 0 from an 4D input. Channel 0: Start index: 0, Stop index: 3. Example 2: Get the first 4 volumes from channel 0 and the second volume from channel 1, from a 5D input. Channel 0: Start index: 0, Stop index: 3. Channel 1: Start index: 1, Stop index: 1. Inputs Input Input image or mask. Type: Mask, Image, List, Required, Single Outputs Output Resulting output. Type: Mask, Image, List Settings Channel 0 Start Text First volume index. Stop Text Last volume index. Squeeze If Singleton Boolean Squeeze channel if singleton. A singleton channel is a channel with only 1 element. If this option is set to true, singleton dimensions will be removed in the output. Configure Add Channel Button Add selection for the next channel. Remove Channel Button Remove selection for the last channel. See also Keywords: Frames, &ldquo;Get Frames&rdquo; ", "tags": "", "url": "nodes.mask.reshape.get_volumes.html"},
{"title": "Get Subvolume", "text": "Get Subvolume Get a subset of an input image or mask. This is a general node, where you can extract a subset of the input data in spatial dimension as well as from the channels. The position and channel information will be updated to reflect the correct position and channel data in the output. The slicing can be input an explicit mode, where each slice dimension and the channel data are defined in separate fields; or in a condensed mode, where all indices are defined in one field. Example 1: Extract a subset of input data Input shape: [128, 128, 12, 5, 8] Explicit: Slice Dimension i: 10:end Slice Dimension j: 30:49 Slice Dimension k: 2:7 Select Channels: 0:2, 3:3 Condensed: Select Subimage: [10:end, 30:49, 2:7, 0:2, 3:3] Output shape: [118, 20, 6, 3, 1] Inputs Input Input image or mask. Type: Mask, Image, List, Required, Single Outputs Output Resulting subvolume. Type: Mask, Image, List Settings Method Selection Define the slice input method. Explicit lets you define the slicing for each spatial dimenion and the channels separately, whereas Condensed lets you define the slicing in one string. Values: Explicit, Condensed Slice Dimension i Text Slicing for dimension i. Slice Dimension j Text Slicing for dimension j. Slice Dimension k Text Slicing for dimension k. Select Channels Text Slicing for the channels. Select Subimage Text Slicing for the entire image. This field will reflect the selections in the Explicit mode, but will be read-only. See also Keywords: ", "tags": "", "url": "nodes.mask.reshape.get_subvolume.html"},
{"title": "Create Patches", "text": "Create Patches Extract patches with a user-defined shape from the input data, and return the patches in an output list. Inputs Input Input image or mask. Type: Mask, Image, Required, Single Outputs Output Output list of patches. Type: Mask, Image, List Settings Patch size Integers If any dimension of the patch size is not divisible by the input spatial shape, the output shape and list size can be handled in 3 ways: Exact: The last patch in each dimension will be smaller than the defined patch size. Pad: The last patch in each dimension will be padded with a pad value, so that each patch is the defined size. Crop: The last patches in each dimension will be discarded. Values: Exact, Pad, Crop Pad value Integer Pad value that will be used if Pad is selected as the Match size criterion. See also Keywords: ", "tags": "", "url": "nodes.mask.reshape.create_patches.html"},
{"title": "Merge Patches", "text": "Merge Patches Merge a list of patches generated using the Create Patches node. Inputs Input List of patches. Type: Image, Mask, List, Required, Single Outputs Output Reconstructed image. Type: Image, Mask Settings Image Spatial Shape Integers The spatial shape of the output image (should be the same as the size of the input to the Create Patches node used to produce the patches. Match Patch Size Selection Set to the same setting as used in Create Patches when creating the patches. Values: Exact, Padded, Cropped Pad value Integer When cropping was used for creating the patches, padding is required to reconstruct the defined image spatial shape. Set the padding value for this scenario. See also Keywords: ", "tags": "", "url": "nodes.mask.reshape.merge_patches.html"},
{"title": "Create Mosaic", "text": "Create Mosaic Creates a 2D mosaic layout from a multi-slice or multi-channel image/mask. The mosaic arranges the slices or channels in a grid pattern with a specified number of columns. This is useful for visualizing multiple slices or channels simultaneously in a single 2D view. Inputs Input The image or mask to create a mosaic from. Can be either a single image/mask or a list of images/masks. Type: Image List, Mask List, Required, Single Outputs Output The resulting mosaic image/mask. If the input is a list, outputs a list of mosaic images/masks. Type: Image, Mask Settings Number of Columns Integer Specifies how many columns the mosaic should have. The slices/channels will be arranged row by row, filling each row with this many columns before starting a new row. Default: 5 Minimum: 1 Can be connected as input: Yes Dimension Selection Specifies whether to create the mosaic from slices or a specific channel. Values: Slice, Channel Default: Slice Channel Integer When Dimension is set to &ldquo;Channel&rdquo;, specifies which channel to use for creating the mosaic. Only visible when Channel dimension is selected. Default: 0 Minimum: 0 Can be connected as input: Yes Visibility: Only when Dimension = Channel Details The node processes the input in the following steps: Splits the input along the selected dimension (slices or specified channel) Arranges the split parts into rows based on the specified number of columns Combines the arranged parts into a single 2D mosaic image/mask Example Uses Viewing multiple slices of a 3D image in a single 2D layout Comparing different channels of a multi-channel image in a grid view Creating thumbnail grids of image sequences Generating overview visualizations of 3D or multi-channel data See also Keywords: mosaic, montage, grid, visualization, layout, slice view, channel view, tiling, tile ", "tags": "", "url": "nodes.mask.reshape.create_mosaic.html"},
{"title": "Split Mask", "text": "Split Split an Image or Mask along a specific spatial dimension or channel into blocks of a predefined size, and return result as a list. Example 1 Return all slices of an image in a list: Split Along: k, Block Size: 1 Example 2 Split 4D mask with 60 volumes into 12 images with 5 volumes each: Split Along: Channel, Channel: 0, Block Size: 5 Inputs Input Input image or mask Type: Image, Mask, List, Required, Single Outputs Output Resulting list of subvolumes. Type: Image, Mask, List Of Lists, List Settings Configure Split Along Selection Define the dimension where the input is split. Values: i, j, k, Channels Splitting Channel Integer Set the channel number. Block Size Integer Set the block size. See also Keywords: ", "tags": "", "url": "nodes.mask.reshape.split_mask.html"},
{"title": "Stack Masks", "text": "Stack Stack Images or Masks along a specific spatial dimension or channel. All inputs must share the same shape along all dimensions except the stacking dimension. Inputs Input 0 Connected inputs. Type: Mask, Image, List, Required, Single Outputs Output Resulting stacked input. Type: Mask, Image, List Settings Stack along Selection Select along which dimension to stack the input. Values: i, j, k, Channel Channel Number Integer Select which channel to stack the input. List Handling Selection Define if multiple lists should be stacked to one output, or if list element should be broadcasted. Example: Input 0 is an image, Input 1 is a list of 3 images. If &ldquo;Stack&rdquo; is selected, the node will stack all four images to one output image. If &ldquo;Broadcast&rdquo; is selected, the node will return a list of 3 elements where element 0 is Input 0 stacked with element 0 of Input 1, element 1 is Input 0 stacked with element 1 of Input 1, and element 2 is Input 0 stacked with element 2 of Input 1. Values: Stack, Broadcast See also Keywords: ", "tags": "", "url": "nodes.mask.reshape.stack_masks.html"},
{"title": "Pad/Crop", "text": "Pad/Crop Pad or crop an input image or mask. Example 1 Pad the input with 20 voxels in the positive and negative i and j directions: Method: Add/Subtract, Pad/Crop i: [20, 20], Pad/Crop j: [20, 20], Pad/Crop k: [0, 0] Example 2 Pad positive and i direction with 20 voxels and crop the negative i direction with 20 voxels: Method: Add/Subtract, Pad/Crop i: [-20, 20], Pad/Crop j: [0, 0], Pad/Crop k: [0, 0] Example 3 Set the new size to [192, 192, 192]: Method: New Size, New Size: [192, 192, 192] Inputs Input Input Mask or Image. Type: Mask, Image, List, Required, Single Outputs Output Input Mask or Image. Type: Mask, Image, List Settings Output Size Method Selection Select method for defining output size. Values: Add/Subtract, New Size Pad/Crop i Integers Pad or crop in the i direction. Pad/Crop j Integers Pad or crop in the j direction. Pad/Crop k Integers Pad or crop in the k direction. New Size 3D Vector Set output size. The result will be symmetrically padded or cropped in each dimension. Pad Method Pad Method Selection Select the padding method. Constant inserts the specified Pad Value into added voxels. Mirror mirrors the padded dimension so the output is [..., end-2, end-1, end, end-1, end-2, ...]. Repeat repeats the padded dimension so the output is [..., end-2, end-1, end, end, end, ...]. Values: Constant, Mirror, Repeat Pad Value Float Set the value of the padded voxels. See also Keywords: ", "tags": "", "url": "nodes.mask.reshape.padcrop.html"},
{"title": "Flip Axes", "text": "Flip Axes Reverses the input image or mask matrix along the specified spatial dimensions and/or channels. Inputs Input Input Image or Mask. Type: Mask, Image, List, Required, Single Outputs Output Missing description. Type: Image Settings Flip i-axis Boolean Flip the i-axis, i.e. the first matrix index. Flip j-axis Boolean Flip the j-axis, i.e. the second matrix index. Flip k-axis Boolean Flip the k-axis, i.e. the third matrix index. Channels Integers List of channels to flip See also Keywords: ", "tags": "", "url": "nodes.mask.reshape.flip_axes.html"},
{"title": "Permute Axes", "text": "Permute Axes Permute the spatial dimensions of an input image or mask. This operation reorders the input matrix as defined by the permutation setting. Example An input image with spatial shape [192, 128, 32] is permuted in the jki order. The output spatial shape is [128, 32, 192]. NOTE that the image matrix is the only affected property of the input. The input position, voxel size or orientation are not affected. Inputs Input Input Image or Mask. Type: Mask, Image, List, Required, Single Outputs Output Result. Type: Mask, Image, List Settings Permute Axes Selection Select axes permutation. Values: ijk, ikj, jik, jki, kij, kji See also Keywords: ", "tags": "", "url": "nodes.mask.reshape.permute_axes.html"},
{"title": "Multi-Planar Reconstruction", "text": "Multi-Planar Reconstruction Permute and flip the matrix of an input image or mask as needed to obtain an approximation to Axial, Coronal and Sagittal orientations in radiological and neurological conventions. In the neurological convention, left in the patient is left in the image, and in the radiological convention left in the patient is right in the image. Position, orientation and voxel size are modified to reflect the shifts in the image matrix. The physical coordinate of each voxel will remain unchanged, but the order of the stored voxels may change. In oblique images, the closest permutation to the selected projection will be returned. Note that there is no resampling of the image matrix, only a reordering of the data. In the neurological convention, left in the patient is left in the image, and in the readiological convention left in the patient is right in the image.Position, orientation and voxel size are shifted to reflect the shifts in the image matrix. The physical coordinate of each pixel will remain unchanged, but the order of the stored pixels may change. Please note that there os no resampling of the image matrix, only a reordering of the data.---> Inputs Input The input Image or Mask to be reoriented. Type: Image, Mask, List, Required, Single Outputs Output The reoriented Image or Mask with updated orientation metadata. Pixel values are unchanged, but their ordering may differ. Type: Image, Mask Settings Orientation Selection Set the desired coordinate orientation for the output image. If &ldquo;Custom Orientation Code&hellip;&rdquo; is selected, you can manually specify the desired orientation using a 3-character code corresponding to the direction of the image axes: The code must follow DICOM orientation conventions: Each character defines the positive direction of an anatomical axis: R/L: Right/Left A/P: Anterior/Posterior I/S: Inferior/Superior For example: LPS: Left–Posterior–Superior (neurological default) RAS: Right–Anterior–Superior (radiological default) IPL: Inferior–Posterior–Left The first character corresponds to the i-axis, the second to the j-axis, and the third to the k-axis in the image’s physical space. Invalid or ambiguous codes will cause an error. Values: Ax/Tra (Radiological), Ax/Tra (Neurological), Coronal (Radiological), Coronal (Neurological), Sagittal (A-&gt;P), Sagittal (P-&gt;A), Custom Orientation Code&hellip; See also Keywords: mpr, orientation, axial, sagittal, coronal, neurological, radiological ", "tags": "", "url": "nodes.mask.reshape.multi-planar_reconstruction.html"},
{"title": "Insert Channel", "text": "Insert Channel Insert a channel dimension into an input Image or Mask. Inputs Input Input Image or Mask. Type: Mask, Image, List, Required, Single Outputs Output Result. Type: Image Settings New Channel Dimension Integer The channel number of the new channel. Channel Name Text The name of the new channel. Channel Unit Text The unit of the new channel. See also Keywords: ", "tags": "", "url": "nodes.mask.reshape.insert_channel.html"},
{"title": "Expand Channels", "text": "Expand Channels Expand the number of channels in an input image or mask by broadcasting. The existing channel shapes cannot be changed using this node. Example: Input with channel shape [3, 2] can be expanded to channel shape [3, 2, 6], or [3, 2, 15, 4], or any arbitrary shape as long as the existing channels are not changed. Inputs Input Input image or mask. Type: Mask, Image, List, Required, Single Outputs Output Result. Type: Image Settings New Channel Shape Integers New channel shape. See also Keywords: ", "tags": "", "url": "nodes.mask.reshape.expand_channels.html"},
{"title": "Reshape Channels", "text": "Reshape Channels Reshape the channel dimensions of an input image or mask. The number of volumes in the output must match the number of volumes in the input. Example: Input with channel shape [3, 4] can be reshaped to e.g. [4, 3], [2, 6] or [1, 12]; but not [3, 6]. Inputs Input Input image or mask. Type: Mask, Image, List, Required, Single Outputs Output Result Type: Image Settings New Channel Shape Integers New channel shape. See also Keywords: ", "tags": "", "url": "nodes.mask.reshape.reshape_channels.html"},
{"title": "Squeeze Channels", "text": "Squeeze Channels Remove singleton channels, i.e. channels with 1 element. Example 1: An input with channel shape [1, 3, 1] will have a new channel shape of [3] if all singleton channels are squeezed. Example 2: An input with channel shape [1, 3, 1] will have a new channel shape of [3, 1] if only channel [0] is squeezed. Inputs Input Input Image or Mask. Type: Mask, Image, List, Required, Single Outputs Output Result. Type: Image, List Settings Type Selection Select if all or specific singleton dimensions should be removed. Values: All, Specific Channels to Squeeze Integers Select specific singleton channel indices that will be removed. See also Keywords: ", "tags": "", "url": "nodes.mask.reshape.squeeze_channels.html"},
{"title": "Permute Channels", "text": "Permute Channels Permute the channels to a new order. This operation permutes the input image or mask channels as well as metadata and channel descriptions accordingly. Example: An input has channel shape [3, 2]. To switch the order of the channels, set New Channel Order to [1, 0]. The output will have channel shape [2, 3] Inputs Input Input Image or Mask. Type: Mask, Image, List, Required, Single Outputs Output Result Type: Image Settings New Order Integers Define the new order of the channels by their existing index. To reverse the order of an input with 3 channels, set New Channel Order to [2, 1, 0]. See also Keywords: ", "tags": "", "url": "nodes.mask.reshape.permute_channels.html"},
{"title": "Any", "text": "Any Project a mask using local any over all dimensions (reducing the image to a bit, i.e. TRUE if any voxel in a mask is TRUE), a selected axis or channel. The output is TRUE if any voxel in the selected dimension is TRUE. Inputs Input Input mask(s). Type: Mask, List, Required, Single Outputs Output Output. Type: Mask Settings Projection Along Selection Select over which dimensions to project. Values: All, i, j, k, Channel Channel Integer Select over which channel to project. Keep Channel Boolean If selected, the channel which was selected will be kept as a singleton dimension. E.g. if you have an image [i, j, k, c] and select Keep Channel, the output will be [i, j, k, 1], otherwise it will be [i, j, k]. See also Keywords: ", "tags": "", "url": "nodes.mask.projection.any.html"},
{"title": "All", "text": "All Project a mask using local all over all dimensions (reducing the image to a bit, i.e. TRUE if all voxels in a mask is TRUE), a selected axis or channel. The output is TRUE if all voxels in the selected dimension is TRUE. Inputs Input Input mask(s). Type: Mask, List, Required, Single Outputs Output Output. Type: Mask Settings Projection Along Selection Select over which dimensions to project. Values: All, i, j, k, Channel Channel Integer Select over which channel to project. Keep Channel Boolean If selected, the channel which was selected will be kept as a singleton dimension. E.g. if you have an image [i, j, k, c] and select Keep Channel, the output will be [i, j, k, 1], otherwise it will be [i, j, k]. See also Keywords: ", "tags": "", "url": "nodes.mask.projection.all.html"},
{"title": "Display", "text": "Display Display values or shapes depending on input in process. Copies input connection to output. Inputs Input Input. Type: Any, List, Required, Single Outputs Output Output. Type: Any, List Settings Clip Selection If the displayed value is longer than 96 characters, the displayed value will be clipped. If End is selected, the characters in the end of the value will be replaced with .... If Beginning is selected, the clipping will be done in the beginning of the value. Values: End, Beginning See also Keywords: ", "tags": "", "url": "nodes.mask.visualization.display.html"},
{"title": "Display Property", "text": "Display Property Display a property in process. Copies input connection to output. Inputs Input Input. Type: Any, List, Required, Single Outputs Output Output. Type: Any, List Settings Property Text Path to the property to display. Clip Selection If the displayed value is longer than 96 characters, the displayed value will be clipped. If End is selected, the characters in the end of the value will be replaced with .... If Beginning is selected, the clipping will be done in the beginning of the value. Values: End, Beginning See also Keywords: ", "tags": "", "url": "nodes.mask.visualization.display_property.html"},
{"title": "Visualize", "text": "Visualize Send images and masks to the visualizer with custom visualization settings. Inputs In Input image or mask to visualize. Type: Image, Mask, Required, Single Settings Viewport Integer Index of the viewport to visualize in. Layer Integer Layer to visualize in. Lock Viewport Boolean Lock selected viewport with other viewports to sync geometry. Full Range Window Boolean Use full range windowing for visualization. Window Min Float If not using full windowing, set the minimum windowing level. Window Max Float If not using full windowing, set the maximum windowing level. Opacity Float Set the opacity of the visualized item. Slice Integer Set default slice to visualize. Frame Integer Set default frame to visualize. Orientation Selection Set the viewing orientation of the visualized item. Select beteen Axial (AX), sagittal (SE), coronal (CO) or 3D. Values: AX, SE, CO, 3D Colormap Colormap Set the colormap to use for visualization Interpolation Selection Select the interpolation method used for the visualized item. Values: Cubic, Linear, Nearest See also Keywords: ", "tags": "", "url": "nodes.mask.visualization.visualize.html"},
{"title": "Create Checkerboard", "text": "Checkerboard The Checkerboard node takes two input Image(s) or Mask(s) that must have the same shape, position, and voxel size, and produces an output image of the same size by combining the pixels from the two input images in a checkerboard pattern. This filter is commonly used for visually comparing two images, in particular for evaluating the results of an image registration process. Inputs Input 1 First input Image or Mask. Type: Mask, Image, List, Required, Single Input 2 Second input Image or Mask. Type: Mask, Image, List, Required, Single Outputs Output Output Image or Mask. Type: Image, Mask, List Settings Pattern Integers The number of checker boxes per spatial dimension of the image. See also Keywords: ", "tags": "", "url": "nodes.mask.visualization.create_checkerboard.html"},
{"title": "Cast to Type", "text": "Cast Cast the value type of the input to a new value type. Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Output(s). Type: Numeric Array Settings Configure Value Type Selection The new value type. Values: Float64, Float32, Integer64, Integer32, Complex64x2, Complex32x2 Column Settings Column Name Text Name of the output column. See also Keywords: ", "tags": "", "url": "nodes.mask.converters.cast_to_type.html"},
{"title": "To Image", "text": "Mask to Image Convert Mask(s) to an Image(s) by setting the positions corresponding to true and false values to specified values. Inputs Input Input Mask(s). Type: Mask, List, Required, Single Outputs Output Output Image(s). Type: Image, List Settings True Value Array Set true values in the mask to this value in the image. False Value Array Set false values in the mask to this value in the image. Data Type Selection Set data type for the output image. Values: Integer32, Integer64, Float32, Float64, Complex64, Complex128 See also Keywords: ", "tags": "", "url": "nodes.mask.converters.to_image.html"},
{"title": "To Label Map", "text": "Label Map This filter labels the objects in a Mask. The object labels in the output Image start with 1 and are consecutive. Inputs Input Input Mask(s) Type: Mask, List, Required, Single Outputs Output Output Image(s) containing label maps. Type: Image, List Num. Labels Outputs the number of labels in the output label map Image. Type: Numeric Array Settings Connectivity Selection Set whether the connected components are defined strictly by face connectivity or by face+edge+vertex (full) connectivity. Values: Face Connectivity, Full Connectivity See also Keywords: ", "tags": "", "url": "nodes.mask.converters.to_label_map.html"},
{"title": "To Contours", "text": "To Contours Draw contours around regions in masks or images. In case of images a threshold value must be provided for the regions to be considered inside contours. Inputs Input Mask Type: Mask, Image, List, Required, Single Outputs Output The resulting contours. In case the input is a list, the output will be a list of lists of contours. Type: Contour, List, List of Lists Settings Threshold Float Threshold value for what is considered to be inside the contours. Only applicable for images. Slicing Plane Selection The plane in which the contours are drawn. Values: ij, ik, jk Encircle Pixels Boolean Set to true if pixels should be encircled when creating the contours. If false, contours are allowed to intersect pixels. Only applicable for masks. Simplify Boolean Join consecutive line segments with identical direction into a single line segment. Output List Selection Output contours as a merged list, i.e. all contours in one list, using Merge or as a list of lists using Append. Values: Merge, Append See also Keywords: isosurface ", "tags": "", "url": "nodes.mask.converters.to_contours.html"},
{"title": "Save Hero Data to Disk", "text": "Save Hero Data Save data to disk using Hero data in binary format .hdata or xml format .hxdata. Inputs Input Data that is saved. Type: Any, Required, Single Settings Folder Path Folder where the file is stored. The path can be both absolute and relative. File Text Name of the file. If file extension is omitted, .hdata will be apended. The file ending can be either .hdata for binary storage or .hxdata for xml-based storage. Overwrite Boolean Overwrite file if it already exists. Compress Boolean Compress the file to save space. Will slow down the write and read speed. See also Load Hero Data Keywords: ", "tags": "", "url": "nodes.mask.export.save_hero_data_to_disk.html"},
{"title": "Save Hero Data to Database", "text": "Save to Database Save data to a specific location in the database under a name specified in the node. Inputs Input The data to be stored in the database. Type: Any, Required, Single Study Link The destination in the database for the data to be stored. For Images and Masks this is optional. If not provided the Metadata will be used to find the destination. Typically this metadata is available for data imported into the database, such as DICOM images. Type: Struct, Required/Optional, Single Settings Use Name from Input Boolean Whether to take the name from the input data (applies to Images and Masks only) or from a node setting. Name in Database Text What name the data should be stored under in the database. See also Keywords: ", "tags": "", "url": "nodes.mask.export.save_hero_data_to_database.html"},
{"title": "Create Study", "text": "Create Study Create a new study in the database. The study is defined by its Study ID, and is connected to a Patient ID in the database at creation. NOTE: If an image with a different Patient ID or Patient Name is saved to this study, it will still be displayed in the Patient ID/Patient name of study in the database panel, but will retain the original Patient ID and Patient name when loaded into the workflow. Outputs Output A structure describing the new study. Type: Struct Settings Database Text The name of the database in which the study is created. Study ID Text The Study ID. This must be a unique ID, two studies cannot share a Study ID. Study Description Text The Study Description, or name of the study. Patient ID Text The Patient ID to which the study belongs. Patient Name Text The patient name. Frame of Reference UID Text The Frame of Reference UID. See also Keywords: ", "tags": "", "url": "nodes.mask.export.create_study.html"},
{"title": "Export as NIfTI (.nii)", "text": "Export NifTI Write an image to disk in the NIfTI format. Inputs Input Input Image or Mask. Type: Mask, Image, Required, Single Settings Folder Path Output folder. The path can be both absolute and relative. File Text Output filename. Compress Boolean Use image compression. See also Keywords: ", "tags": "", "url": "nodes.mask.export.export_as_nifti_(.nii).html"},
{"title": "Apply Mask", "text": "Apply Mask Apply a mask to an image. True values will be kept, False values will be set to a specified value. Inputs Input Input Image on which to apply the Mask Type: Image, Mask, List, Required, Single Mask Input Mask Type: Mask, List, Required, Single Outputs Output Masked Image Type: Image, Mask, List Settings Configure Fill Value Complex Number Defines the value assigned to the voxels that are masked out. You can specify any value to replace the excluded regions in the image. Invert Mask Boolean When enabled, this option inverts the binary mask before applying it. Use this when you want to mask the areas marked as True and retain the areas marked as False in the original mask. Crop to Mask Bounding Box Boolean Crop the resulting image to the bounding box of the mask. The bounding box is the smallest cuboid that completely contains the TRUE (or FALSE if inverted) values in the mask. Multi-Channel Multiframe Boundingbox Selection If input image has multiple frames, determine how to crop the image. Combined uses the combined bounding box of all volumes, Channel Index uses the bounding box in a specific frame to crop the image. Values: Combined, Channel Index Frame Integers Channel index for the selected frame. See also Keywords: ", "tags": "", "url": "nodes.mask.apply_mask.html"},
{"title": "Combine Images", "text": "Combine Images This node combines two images using a specified mask. The output image retains the values from the True image where the mask is True, and the values from the False image where the mask is False. Inputs Mask Mask indicating which pixels to take from the True and False images. Type: Mask, List, Required, Single True Input image that contributes values wherever the mask is True. Type: Image, List, Required, Single False Input image that contributes values wherever the mask is False. Type: Image, List, Required, Single Outputs Output Combined image based on the mask selection. Type: Image Settings True Value From Selection Selects whether the True value is sourced from the input image or the specified settings. Values: Input, Settings False Value From Selection Selects whether the False value is sourced from the input image or the specified settings. Values: Input, Settings True Value Decimal Number Defines the value to be assigned to pixels from the True image where the mask is True. False Value Decimal Number Defines the value to be assigned to pixels from the False image where the mask is False. Metadata From Selection Specifies the source for the metadata for the output image, which can come from the Mask, True image, or False image. Values: Mask, True, False See also Keywords: Combine, Image manipulation, Masking ", "tags": "", "url": "nodes.mask.combine_images.html"},
{"title": "Export ROI", "text": "Export ROI Outputs Output Missing description. Type: NodeIOMask Settings Save Method Selection Missing description. Values: Undefined, Don't save, To Disk, To Database File Path File Path Missing description. Overwrite Boolean Missing description. Name in Database Text Missing description. ParentDB Text Missing description. Series ID Text Missing description. Study ID Text Missing description. See also Keywords: ", "tags": "", "url": "nodes.mask.export_roi.html"},
{"title": "Load Hero Data", "text": "Load Hero Data Load Hero Data from disk. Outputs Output The loaded Hero Data. Type: Numeric Array Settings File Filepath Path to the Hero Data file. The path can be both absolute and relative. Data Type Selection The type of the data. Values: Numeric Array, Text, Boolean Array, Image, Mask, Structure, Table, Column, Contour, Text List, Image List, Mask List, Structure List, List of Lists, Table List, Column List, Numeric Array List, Boolean Array List, Contour List See also Keywords: ", "tags": "", "url": "nodes.contour.createimport.load_hero_data.html"},
{"title": "Import NDPA", "text": "Import NDPA Import Regions of Interest stored in the Open Slide NDPA format. Outputs Contours Resulting Contours. Type: Contour List Settings Path Filepath Path to file. The path can be both absolute and relative. See also Keywords: ", "tags": "", "url": "nodes.contour.createimport.import_ndpa.html"},
{"title": "Has Property", "text": "Has Property Check if property exists. Inputs Input Input. Type: Any, List, Required, Single Outputs Output Output True/False. Type: Boolean Array Settings Property Text Property Path. See also Keywords: ", "tags": "", "url": "nodes.contour.getset_property.has_property.html"},
{"title": "Get Property", "text": "Get Property Get property from input. Inputs Input Input new property value. Type: Any, List, Required, Single Outputs Output Output. Type: Numeric Array Settings Property Text Property path. For example, if the input is a single Image the path to the Sex property is Subject.Sex. The paths can be found in the Properties viewer by right-clicking on the property and choosing Copy Property Path. Property Type Selection Property type. Values: Boolean Array, Boolean Array List, Column, Column List, Contour, Contour List, Image, Image List, List of Lists, Mask, Mask List, Numeric Array, Numeric Array List, Structure, Structure List, Table, Table List, Text, Text List See also Keywords: ", "tags": "", "url": "nodes.contour.getset_property.get_property.html"},
{"title": "Edit Property", "text": "Edit Property Modify a property of an input. Only Text, Numeric arrays, and Boolean arrays are editable. The Edit Property node enables users to set the property as a setting within the node, while the Set Property node accepts the property value as an input. The Edit Property node cannot alter the property type, but the Set Property node is able to do so. Inputs Input Input of any type. Type: Any, Required, Single Outputs Output Output of the same type as the input. Type: Numeric Array Settings Value Text Set the new property value. Property Text Property path. For example, if the input is a single Image the path to the Sex property is Subject.Sex. The paths can be found in the Properties viewer by right-clicking on the property and choosing Copy Property Path. See also Keywords: ", "tags": "", "url": "nodes.contour.getset_property.edit_property.html"},
{"title": "Set Property", "text": "Set Property Set a specific property to a value supplied as an input. This operation allows changing the property value type, e.g. from a Numeric Array to a Text List. The property has to exist in the input data. If it does not exist, use the Insert Property node. Inputs Input Input. Type: Any, List, Required, Single New Value New property value. Type: Any, Required, Single Outputs Output Input data with the changed property. Type: Any, List Settings Property Text Property path. For example, if the input is a single Image the path to the Sex property is Subject.Sex. The paths can be found in the Properties viewer by right-clicking on the property and choosing Copy Property Path. Broadcast Input Boolean Broadcast input to property list elements. If set to True and the property is a list, the input will be assigned to each element of the property list. If set to False and the property and input are lists of equal length, the i:th element of the input list is assigned to the i:th element of the property list. See also Keywords: ", "tags": "", "url": "nodes.contour.getset_property.set_property.html"},
{"title": "Insert Property", "text": "Insert Property Insert a Hero Data item at a specific location in input. Inputs Input Input Type: Any, List, Required, Single New Value New value. Type: Any, List, Required, Single Outputs Output Output. Type: Any Settings Property Text Property path. For example, if the input is a single Image the path to the Sex property is Subject.Sex. The paths can be found in the Properties viewer by right-clicking on the property and choosing Copy Property Path. Values: Boolean Array, Boolean Array List, Column, Column List, Contour, Contour List, Image, Image List, List of Lists, Mask, Mask List, Numeric Array, Numeric Array List, Structure, Structure List, Table, Table List, Text, Text List Broadcast Property Boolean Set many values in a list to the same value. See also Keywords: ", "tags": "", "url": "nodes.contour.getset_property.insert_property.html"},
{"title": "Remove Property", "text": "Remove Property Remove a Hero Data item at a specific location in input data. Inputs Input Input Type: Any, List, Required, Single Outputs Output Output Type: Numeric Array Settings Property Text Property Path. See also Keywords: ", "tags": "", "url": "nodes.contour.getset_property.remove_property.html"},
{"title": "Rename", "text": "Rename Rename input data. You can supply a new name, or add a prefix and/or suffix to existing name. You can add a counter to the name with the {n} syntax , which is useful if you want to rename a list of inputs. Example: &ldquo;New Name {n}&rdquo; will give the first new name as &ldquo;New Name 1&rdquo; if the counter starts at 1. Inputs Input Input. Type: Image List, Mask List, Contour List, Table List, Column List, Required, Single Outputs Output Output. Type: Image Settings Method Selection Select renaming method: new name or add prefix/suffix to existing name. Values: Rename, Prefix/Suffix Prefix Text Prefix. Suffix Text Suffix. Separator Text Separator between the original name and the prefix/suffix. New Name Text Set new name. Counter {n} Starts At: Integer Counter starting value. See also Keywords: ", "tags": "", "url": "nodes.contour.getset_property.rename.html"},
{"title": "Contour Repeater", "text": "Repeater Copies input connection to output. Settings Repeater Description Text The title of the repeater. If used as an input for a group, set value to brief description of expected input type. Sparse Connections Boolean A sparse connection removes the wire between the repeater output and connected nodes, and replaces them with a label displaying the repeater description. This is very useful when you have a large workflow wih many wires. Change Image/Data Name Set New Image/Data Name Boolean Should the image/data get a new name, only applies to Image4D and DataCollection. Misc IOType Text Missing description. See also Keywords: ", "tags": "", "url": "nodes.contour.repeaters.contour_repeater.html"},
{"title": "Contour List Repeater", "text": "Repeater Copies input connection to output. Settings Repeater Description Text The title of the repeater. If used as an input for a group, set value to brief description of expected input type. Sparse Connections Boolean A sparse connection removes the wire between the repeater output and connected nodes, and replaces them with a label displaying the repeater description. This is very useful when you have a large workflow wih many wires. Change Image/Data Name Set New Image/Data Name Boolean Should the image/data get a new name, only applies to Image4D and DataCollection. Misc IOType Text Missing description. See also Keywords: ", "tags": "", "url": "nodes.contour.repeaters.contour_list_repeater.html"},
{"title": "Clean", "text": "Clean Contour Removes islands from Contours depending on their area. Inputs Input Input Contour(s) to be cleaned. Type: Contour, List, Required, Single Outputs Output Resulting cleaned Contour(s). Type: Contour, List Settings Area [mm²] Float Area condition for the island removal. Condition Selection The criterium used to select islands. If criterium is fulfulled, the island will be removed. Values: Equal, Greater Than, Greater or Equal, Less Than, Less or Equal, Not Equal See also Keywords: ", "tags": "", "url": "nodes.contour.edit.clean.html"},
{"title": "Reduce", "text": "Reduce Contour Reduces the number of points of contours by calculating the area of the parallelogram defined by 3 consecutive points on the contour. One side is defined by point 1-2 and the other by 1-3. If the area of the parallelogram is less the the stopping criteria, point 2 is discarded. The process is iterative and will be continued until maximum iterations is reached, or no more points can be discarded with set stopping criteria. Inputs Input Input Contour(s). Type: Contour, List, Required, Single Outputs Output Reduced Contour(s). Type: Contour, List Settings Iterations Integer Set the maximum number of iterations for polygon reduction. Stopping Criterion Float The maximum area the parallelogram can have for a point to be removed in mm2. See also Keywords: ", "tags": "", "url": "nodes.contour.edit.reduce.html"},
{"title": "Create Translation Transform", "text": "Transform A translation transform is a linear transform that moves an object in a coordinate system in a given direction, without any rotation, scaling or shearing. The transform has three parameters; the translation in the x, y and z directions. Outputs T(x) Resulting transform. Type: Struct List Settings Configure Extrapolation Value Float The default voxel value for voxels outside the Frame of Reference. New Frame of Reference Boolean The Frame of Reference describes the position, orientation, matrix size, and voxel size, of the transformed input. Initial Transform Boolean Add an initial transform to the output. Parameters Translation [mm] Numbers The translation vector [x, y, z] of the transform. See also Keywords: ", "tags": "", "url": "nodes.contour.transform.create_transforms.create_translation_transform.html"},
{"title": "Create Rigid Transform", "text": "Transform A rigid transform is a linear transform that moves and rotates an object in a coordinate system. The transform has six parameters; the translation in the x, y and z directions; and a 3D rotation which can be represented by three parameters in a number of different ways. Outputs T(x) Resulting transform. Type: Struct Settings Configure Extrapolation Value Number The default voxel value for voxels outside the Frame of Reference. New Frame of Reference Boolean The Frame of Reference describes the position, orientation, matrix size, and voxel size, of the transformed input. Initial Transform Boolean Add an initial transform to the output. Rotation Rotational Representation Selection Select input rotation representation. Rotation Axis and Angle describes a rotation around an axis defined by a vector. The input vector does not have to be normalized. This is the default representation. Rotation Matrix describes the rotation as a 3x3 orthogonal matrix. The rotation matrix must have a determinant of 1. Euler Angles describes intrinsic rotation around three principal axes X, Y, Z, which can be described as yaw, pitch, and roll. Intrinsic rotation means that the rotations occur about the axes of a coordinate system that is attached to the moving body. The order in which the rotations are applied is important. Two options are available: ZXY and ZYX. Values: Rotation Axis and Angle, Rotation Matrix, Euler Angles (ZXY), Euler Angles (ZYX) Rotational Axis 3D Vector The axis of rotation, described as a vector. The input does not have to be normalized. Rotational Angle [rad] Number The rotation in radians around the axis of rotation. Rotation Matrix Array The matrix must be orthogonal with a determinant of 1. Euler Angles [rad] Numbers Set the rotation as described by Euler angles around X, Y and Z. Center Of Rotation [mm] Numbers The coordinate around which the rotation is defined. Parameters Translation [mm] Numbers The translation vector of the transform. See also Keywords: ", "tags": "", "url": "nodes.contour.transform.create_transforms.create_rigid_transform.html"},
{"title": "Create Similarity Transform", "text": "Transform A similarity transform is a geometric transformation in which an object is scaled, rotated, and translated, preserving its shape. It is a combination of a scaling, rotation, and translation, and can be represented by a single matrix. The similarity transform preserves the ratios of distances between points and the angles between lines in the original object. Outputs T(x) Resulting transform. Type: Struct Settings Configure Extrapolation Value Number The default voxel value for voxels outside the Frame of Reference. New Frame of Reference Boolean The Frame of Reference describes the position, orientation, matrix size, and voxel size, of the transformed input. Initial Transform Boolean Add an initial transform to the output. Rotation Rotational Representation Selection Select input rotation representation. Rotation Axis and Angle describes a rotation around an axis defined by a vector. The input vector does not have to be normalized. This is the default representation. Rotation Matrix describes the rotation as a 3x3 orthogonal matrix. The rotation matrix must have a determinant of 1. Euler Angles describes intrinsic rotation around three principal axes X, Y, Z, which can be described as yaw, pitch, and roll. Intrinsic rotation means that the rotations occur about the axes of a coordinate system that is attached to the moving body. The order in which the rotations are applied is important. Two options are available: ZXY and ZYX. Values: Rotation Axis and Angle, Rotation Matrix, Euler Angles (ZXY), Euler Angles (ZYX) Rotational Axis 3D Vector The axis of rotation, described as a vector. The input does not have to be normalized. Rotational Angle [rad] Number The rotation in radians around the axis of rotation. Rotation Matrix Array The matrix must be orthogonal with a determinant of 1. Euler Angles [rad] Numbers Set the rotation as described by Euler angles around X, Y and Z. Center Of Rotation [mm] Numbers The coordinate around which the rotation is defined. Parameters Translation [mm] Numbers The translation vector of the transform. Uniform Scale Number The uniform scaling of the transform. See also Keywords: ", "tags": "", "url": "nodes.contour.transform.create_transforms.create_similarity_transform.html"},
{"title": "Create Affine Transform", "text": "Transform An affine transform is a linear transform that moves, rotates, scales and shears an object in a coordinate system. The transform has twelve parameters; the translation in the x, y and z directions; a 3D rotation which can be represented by three parameters in a number of different ways; the scaling in the x, y, and z directions; and the shear in the x, y, and z directions. Outputs T(x) Resulting transform. Type: Struct Settings Configure Extrapolation Value Number The default voxel value for voxels outside the Frame of Reference. New Frame of Reference Boolean The Frame of Reference describes the position, orientation, matrix size, and voxel size, of the transformed input. Initial Transform Boolean Add an initial transform to the output. Rotation Rotational Representation Selection Select input rotation representation. Rotation Axis and Angle describes a rotation around an axis defined by a vector. The input vector does not have to be normalized. This is the default representation. Rotation Matrix describes the rotation as a 3x3 orthogonal matrix. The rotation matrix must have a determinant of 1. Euler Angles describes intrinsic rotation around three principal axes X, Y, Z, which can be described as yaw, pitch, and roll. Intrinsic rotation means that the rotations occur about the axes of a coordinate system that is attached to the moving body. The order in which the rotations are applied is important. Two options are available: ZXY and ZYX. Values: Rotation Axis and Angle, Rotation Matrix, Euler Angles (ZXY), Euler Angles (ZYX) Rotational Axis 3D Vector The axis of rotation, described as a vector. The input does not have to be normalized. Rotational Angle [rad] Number The rotation in radians around the axis of rotation. Rotation Matrix Array The matrix must be orthogonal with a determinant of 1. Euler Angles [rad] Numbers Set the rotation as described by Euler angles around X, Y and Z. Center Of Rotation [mm] Numbers The coordinate around which the rotation is defined. Parameters Translation [mm] Numbers The translation vector of the transform. Uniform Scale Number The uniform scaling of the transform. Scale Numbers The scaling parameters in the x, y, and z directions. Shear Numbers The shear parameters in the x, y, and z directions. See also Keywords: ", "tags": "", "url": "nodes.contour.transform.create_transforms.create_affine_transform.html"},
{"title": "Create BSpline Transform", "text": "Transform A BSpline transform is a non-rigid transform that is defined by a grid of control points. Inputs BSpline Defines the control points of the transform. The input must be a 4D image with three elements in the last channel. Each voxel position is a control point with the three elements describing the deformation in that point. Type: Image, List, Required, Single Outputs T(x) Resulting transform. Type: Struct Settings Configure Extrapolation Value Number The default voxel value for voxels outside the Frame of Reference. Spline Order Integer The spline order can take a value between 1 and 3. New Frame of Reference Boolean The Frame of Reference describes the position, orientation, matrix size, and voxel size, of the transformed input. Initial Transform Boolean Add an initial transform to the output. See also Keywords: ", "tags": "", "url": "nodes.contour.transform.create_transforms.create_bspline_transform.html"},
{"title": "Create Deformation Field Transform", "text": "Transform Create a deformation field transform, defined as a vector field that maps coordinates in the input domain to the output domain. Inputs Deformation Field The deformation vector field. The input can be a ND image, where the last channel must contain 3 elements. Type: Image, List, Required, Single Outputs T(x) Resulting transform. Type: Struct Settings Configure Extrapolation Value Number The default voxel value for voxels outside the Frame of Reference. New Frame of Reference Boolean The Frame of Reference describes the position, orientation, matrix size, and voxel size, of the transformed input. Initial Transform Boolean Add an initial transform to the output. See also Keywords: ", "tags": "", "url": "nodes.contour.transform.create_transforms.create_deformation_field_transform.html"},
{"title": "Get Deformation Field", "text": "Get Deformation Field Get a deformation field transform from an existing transform. Inputs T(x) Input transform. Type: List of Lists, Struct, List, Required, Single Outputs T(x) Resulting Deformation Field transform. Type: Struct Deformation Field Deformation field represented as a 4D or 5D image, where the last channel has three elements and hold the vector field information. Type: Image Settings Configure Extrapolation Value Number The default voxel value for voxels outside the Frame of Reference. New Frame of Reference Boolean The Frame of Reference describes the position, orientation, matrix size, and voxel size, of the transformed input. Initial Transform Boolean Add an initial transform to the output. See also Keywords: ", "tags": "", "url": "nodes.contour.transform.create_transforms.get_deformation_field.html"},
{"title": "Read Elastix Transform from File", "text": "Import Transform Import an Elastix transform from file. Outputs Output Imported transform. Type: Struct, Struct List Settings File Path Filepath Path to the transform file to be imported. Ignore Initial Transform Boolean Ignore initial transforms in the imported transform file. See also Keywords: ", "tags": "", "url": "nodes.contour.transform.create_transforms.read_elastix_transform_from_file.html"},
{"title": "Write Elastix Transform to File", "text": "Export Transform Export an input transform to file, in the Elastix format. Inputs Input Input transform. Type: List of Lists, Struct, List, Required, Single Settings File Text Transform file name. Folder Path Output path. Ignore Initial Transform Boolean Ignore initial transforms in the exported transform file. See also Keywords: ", "tags": "", "url": "nodes.contour.transform.create_transforms.write_elastix_transform_to_file.html"},
{"title": "Apply Transform", "text": "Apply Transform Apply one or more transforms to an input image, mask, numeric array with coordinates or a contour set. A numeric array with coordinates must be on the form Nx3. Inputs Input Input Image, Mask, Numeric Array or Contours. Type: Mask, Image, Numeric Array, Contour, List, Required, Single Transform Input transform. Type: List of Lists, Struct, List, Required, Single Outputs Output Resulting output. Type: Mask, Image, Numeric Array, Contour, List Settings Configure New Resample Reference Boolean Override the Input Transform Frame of Reference. This setting redefines in which space the result will be represented in. Image/Mask Settings Interpolator Selection Choose an appropriate interpolator for your task: Nearest Neighbour and Linear: These methods are the fastest but offer the least accuracy. Windowed Sinc: Provides more accurate results but is slower in comparison. Important Note: When transforming binary masks, always use the Nearest Neighbour interpolator to maintain accuracy. This setting applies only to images and masks. Contours and coordinates do not undergo any interpolation. Values: Nearest Neighbour, Linear, BSpline Order 2, BSpline Order 3, BSpline Order 4, BSpline Order 5, Gaussian, Hamming Windowed Sinc, Cosine Windowed Sinc, Welch Windowed Sinc, Lanczos Windowed Sinc, Blackman Windowed Sinc Contours/Point Settings Transform Direction Selection This setting allows you to specify the direction of the transform with two options: Moving to Fixed (default): Automatically inverts the transform, ensuring accurate alignment when transferring data from the moving (source) to the fixed (target) Frame of Reference. Fixed to Moving: Applies the transform directly without inversion. The direction setting is crucial because transforms affect images/masks and coordinates/contours differently. Images and masks are rendered in the fixed (target) Frame of Reference, whereas coordinates and contours are transformed from the fixed to the moving Frame of Reference. This means that coordinates and contours often require the inverse transform to accurately &ldquo;follow&rdquo; the image as it moves to a new frame of reference. Note that there is a separate setting, Invert Deformation Field Settings, which controls the inversion of nonlinear transforms. Values: Fixed To Moving, Moving To Fixed Invert Deformation Field Settings Invert a nonlinear transform using an iterative method, described here. Maximum Iterations Integer Maximum number of iterations. Mean Error Tol Decimal Number Mean Error Tolerance for the inverted displacement field. Max Error Tol Decimal Number Max Error Tolerance for the inverted displacement field. Enforce Boundary Cond Boolean Enables or disables boundary condition enforcement. See also Keywords: ", "tags": "", "url": "nodes.contour.transform.apply_transform.html"},
{"title": "Reslice Contour", "text": "Reslice Contour Reslices Contours to fit in a new image space, i.e. creates contours at new positions. This is done by first converting the input contours to a mesh, reading the slice positions from the reference image, and producing new contours at those slice locations. Inputs Contour The input Contours which is to be resliced. Type: Contour, List, Required, Single Reference The reference input with new slice positions. Type: Mask, Image, List, Required, Single Outputs Output The resliced Contours. Type: Contour, List Settings Min Polygon Area [mm²] Float Sets the minimum area a closed contour must have to be kept after reslicing. See also Keywords: ", "tags": "", "url": "nodes.contour.transform.reslice_contour.html"},
{"title": "Display", "text": "Display Display values or shapes depending on input in process. Copies input connection to output. Inputs Input Input. Type: Any, List, Required, Single Outputs Output Output. Type: Any, List Settings Clip Selection If the displayed value is longer than 96 characters, the displayed value will be clipped. If End is selected, the characters in the end of the value will be replaced with .... If Beginning is selected, the clipping will be done in the beginning of the value. Values: End, Beginning See also Keywords: ", "tags": "", "url": "nodes.contour.visualization.display.html"},
{"title": "Display Property", "text": "Display Property Display a property in process. Copies input connection to output. Inputs Input Input. Type: Any, List, Required, Single Outputs Output Output. Type: Any, List Settings Property Text Path to the property to display. Clip Selection If the displayed value is longer than 96 characters, the displayed value will be clipped. If End is selected, the characters in the end of the value will be replaced with .... If Beginning is selected, the clipping will be done in the beginning of the value. Values: End, Beginning See also Keywords: ", "tags": "", "url": "nodes.contour.visualization.display_property.html"},
{"title": "To Mask", "text": "Contour To Mask Renders countours to binary mask (or a fuzzy mask) on a reference image. Inputs Contour The contours to render. Type: Contour, List, Required, Single Reference The reference image(s) or mask(s) which provides the matrix (i.e. image position, voxel size etc) on which to render the contours. Type: Mask, Image, List, Required, Single Outputs Mask The rendered contours as Mask(s). Type: Mask, List Fuzzy Mask The rendered contours as Image(s), or fuzzy mask(s). A fuzzy mask is a type of binary mask that assigns a degree of membership to each pixel in an image, rather than a simple 0 or 1 value. The degree of membership ranges between 0 and 1, where a value of 1 indicates that the pixel is fully a member of the set and a value of 0 indicates that the pixel is not a member of the set. Fuzzy masks are commonly used in image processing for tasks such as image segmentation, edge detection, and pattern recognition, as they allow for more nuanced and flexible representation of image features compared to binary masks. This is especially impotant for small structures which have a relativly large fraction of edge pixels. Type: Image, List Statistics Statistics regarding the mask and fuzzy mask, such as volumes and volume error. Volume error is the relative difference between the volume calculated directly from the polygon structure compared to the rendered binary and smooth mask. Type: Table Settings Contour Selection Contour Name(s) Text Name of the contours to render, if you define several structures as a comma separated list it will render the first structure that matches. To select a contour that has a name that contains comma, use the escape character '\,'. Condition Selection Condition to use when matching strings to find the structure. Values: Contains, Equals, Does Not Contain, Not Equal, Regex Case Sensitive Boolean When enabled a case sensitive string match will be used. Configure Supersampling Method Selection Supersampling increases the accuracy of the rendered volume by creating a fuzzy mask. A fuzzy mask is a Hero specific concept which allows polygonal structures to be rendered on an image, allowing fractional values between 0 and 1. If the polygon cuts a voxel precisely diagonally, the voxel value of the fuzzy mask at that voxel will be 0.5. When producing different statistics based on regions of interest, these can be weighted by the intensity of the fuzzy mask, greatly improving the accuracy especially for structures with small volumes. Note that the fuzzy mask is an ordinary Image and not a specific datatype, so the user must ensure that the input really is a fuzzy mask to avoid nonsense statistics. None of course means that no supersampling takes place. Two-Step implies that the supersampling is done in two steps, where the Initial step supersamples the whole image, and the Refined step supersamples the voxels with values between 0 and 1. Dynamic is an iterative process where the supersampling tries to achieve a certain volume rendering accuracy (comparing the volume of the actual polygons to the volume in the rendered fuzzy mask). Values: None, Two-Step, Dynamic Mask Threshold [%] Float Sets how much of a single voxel that needs to be inside the structure for the voxel to be set to TRUE in the mask. Mask Threshold Type Selection The type of criteria used to set the resulting mask voxel to TRUE. Values: Equal, Greater Than, Greater or Equal, Less Than, Less or Equal, Not Equal End Cap Thickness [mm] Float Sets the end cap thickness of the structure. Two-Step Supersampling Initial Method Selection Set the initial supersampling method. Regular Grid divides the image grid (or matrix) into subvoxels, defined by the &ldquo;Initial Subvoxel Ratio&rdquo;. Monte Carlo randomly samples positions in voxels the number of times specified in the Initial Num. Points per Voxel. Values: Regular Grid, Monte Carlo Initial Subvoxel Ratio Integers Set how two divide a voxel to produce subvoxels, defined as [i, j, k]. If you specify, e.g. [2, 2, 4], each voxel will be divid into 2 in the i direction, 2 in the j direction and 4 in the k direction. Initial Points per Voxel Integer Set the number of points to sample per voxel with the Monte Carlo method. Refined Method Selection Set the method for the refined supersampling. See the section under Initial Method for additional information. Values: None, Regular Grid, Monte Carlo Refined Subvoxel Ratio Integers Set how two divide a voxel to produce subvoxels, defined as [i, j, k]. If you specify, e.g. [2, 2, 4], each voxel will be divid into 2 in the i direction, 2 in the j direction and 4 in the k direction. Refined Points per Voxel Integer Set the number of points to sample per voxel with the Monte Carlo method. Dynamic Supersampling Maximum Volume Error [%] Float The maximum volume error in %, i.e. \(\left| \dfrac{V_{polygons}}{V_{rendered}} - 1\right|*100\) that the filter tries to achieve by iterating with increasingly finer supersampling. Maximum Iterations Integer The maximum number of iterations for trying to achieve an error lower than the specified Maximum Volume Error [%]. Use Error Stopping Criterion Boolean Use Error Stopping Criterion will stop the calculations if the volume error has not improved by a certain amount, specified in the Error Stopping Criterion [%], compared to the last iteration. This will stop the algorithm from running all iterations set in the Maximum Iterations settings when the target error probably won't be reached. Error Stopping Criterion [%] Float Specify the amount if improvement expected between two iterations in order to continue calculations. See also Keywords: ", "tags": "", "url": "nodes.contour.converters.to_mask.html"},
{"title": "Save Hero Data to Disk", "text": "Save Hero Data Save data to disk using Hero data in binary format .hdata or xml format .hxdata. Inputs Input Data that is saved. Type: Any, Required, Single Settings Folder Path Folder where the file is stored. The path can be both absolute and relative. File Text Name of the file. If file extension is omitted, .hdata will be apended. The file ending can be either .hdata for binary storage or .hxdata for xml-based storage. Overwrite Boolean Overwrite file if it already exists. Compress Boolean Compress the file to save space. Will slow down the write and read speed. See also Load Hero Data Keywords: ", "tags": "", "url": "nodes.contour.export.save_hero_data_to_disk.html"},
{"title": "Save Hero Data to Database", "text": "Save to Database Save data to a specific location in the database under a name specified in the node. Inputs Input The data to be stored in the database. Type: Any, Required, Single Study Link The destination in the database for the data to be stored. For Images and Masks this is optional. If not provided the Metadata will be used to find the destination. Typically this metadata is available for data imported into the database, such as DICOM images. Type: Struct, Required/Optional, Single Settings Use Name from Input Boolean Whether to take the name from the input data (applies to Images and Masks only) or from a node setting. Name in Database Text What name the data should be stored under in the database. See also Keywords: ", "tags": "", "url": "nodes.contour.export.save_hero_data_to_database.html"},
{"title": "Create Study", "text": "Create Study Create a new study in the database. The study is defined by its Study ID, and is connected to a Patient ID in the database at creation. NOTE: If an image with a different Patient ID or Patient Name is saved to this study, it will still be displayed in the Patient ID/Patient name of study in the database panel, but will retain the original Patient ID and Patient name when loaded into the workflow. Outputs Output A structure describing the new study. Type: Struct Settings Database Text The name of the database in which the study is created. Study ID Text The Study ID. This must be a unique ID, two studies cannot share a Study ID. Study Description Text The Study Description, or name of the study. Patient ID Text The Patient ID to which the study belongs. Patient Name Text The patient name. Frame of Reference UID Text The Frame of Reference UID. See also Keywords: ", "tags": "", "url": "nodes.contour.export.create_study.html"},
{"title": "Export as RTSTRUCT (.dcm)", "text": "Export RTSTRUCT Converts and exports all connected Contour(s) into one Dicom RS (RT Structure Set) file. Inputs Contour The input Contour(s) to be exported. Type: Contour, List, Required, Single Reference Image The reference image to the RT structure set. The FrameOfReference tag, as well as PatientID, Name, BirthDate, Sex, Weight and referenced SOP Instance UIDs are taken from this reference image. Type: Image, Required, Single Settings RTStruct Set Label Text The structure set DICOM label, tag (3006,0002). Output Path Text Path to the folder where the exported Dicom RS file should be saved. The path can be both absolute and relative. See also Keywords: ", "tags": "", "url": "nodes.contour.export.export_as_rtstruct_(.dcm).html"},
{"title": "Export as CAD File (.stl)", "text": "Export STL Export one or more contour(s) as CAD .stl file(s). The output file names are the same as the contour names. Inputs Input Input contours Type: Contour List, Required, Single Settings Folder Path Output folder. The path can be both absolute and relative. See also Keywords: ", "tags": "", "url": "nodes.contour.export.export_as_cad_file_(.stl).html"},
{"title": "Create Table", "text": "Create Table The node returns a table that is constructed from the input columns and tables. The inputs are dynamic, and the output table will be constructed based on the order of the inputs. Duplicate column names will be renamed with a number at the end, e.g. if MyColumn is a duplicate name, output columns will be named MyColumn and MyColumn_0. Inputs Input 0 Input tables or columns. The inputs are dynamic, and the output table will be constructed based on the order of the inputs. Type: Table, Column, Required, Single Outputs Table Output table. Type: Table Settings Name Text The output name. Size Difference Selection Choose how to handle a mismatch in size of the inputs. Append Missing Values will set missing values to . Values: Append Missing Values, Throw Error See also Keywords: ", "tags": "", "url": "nodes.table.createimport.create_table.html"},
{"title": "Create Table From Array", "text": "Create Table Create a table from an input 1D or 2D numeric array or boolean array. A 1D array will be returned as a column. Inputs Input Input Numeric Array or Boolean Array. Type: Numeric Array, Boolean Array, Required, Single Outputs Table Output Table. Type: Table Settings Table Name Text The output table name. Column Name Text The output columns will have names ending with the column index, e.g. &ldquo;Column 0&rdquo;, &ldquo;Column 1&rdquo;, etc. if the Column Name is set to &ldquo;Column&rdquo;. See also Keywords: ", "tags": "", "url": "nodes.table.createimport.create_table_from_array.html"},
{"title": "Load Hero Data", "text": "Load Hero Data Load Hero Data from disk. Outputs Output The loaded Hero Data. Type: Numeric Array Settings File Filepath Path to the Hero Data file. The path can be both absolute and relative. Data Type Selection The type of the data. Values: Numeric Array, Text, Boolean Array, Image, Mask, Structure, Table, Column, Contour, Text List, Image List, Mask List, Structure List, List of Lists, Table List, Column List, Numeric Array List, Boolean Array List, Contour List See also Keywords: ", "tags": "", "url": "nodes.table.createimport.load_hero_data.html"},
{"title": "Import .csv", "text": "Import .csv Import a .csv file as a Table. Outputs Table Imported data as Table. Type: Table Settings Path Filepath Path to the .csv file to be imported. Delimiter Text Column delimiter in the imported file. Default is comma (,). Can be defined as a regular expression (RegEx). Useful RegEx examples: \s+ describes one or more spaces. ,\s* describes a comma, followed by zero or more spaces. File has Headers Boolean When set to true, the first row will be treated as the table header. See also Keywords: ", "tags": "", "url": "nodes.table.createimport.import_.csv.html"},
{"title": "Import .xlsx", "text": "Import .xlsx Import the content of a .xlsx file as tables. You can import a single sheet by specifying its index or name, or import all sheets as a list of tables. Outputs Output Output table(s). Type: Table, Table List Settings Configure Path Filepath Path to the .xlsx file to be imported. Table has Headers Boolean When set to true, the first row will be treated as the table header. Sheets Import All Sheets Boolean Import all sheets, or a single sheet from the xlsx file. When importing all sheets, the output will be a list of tables. Select Sheet By Selection Select sheet by index or sheet name. Values: Index, Name Sheet Index Integer Set the sheet index. Sheet Name Text Set the sheet name. See also Keywords: Excel ", "tags": "", "url": "nodes.table.createimport.import_.xlsx.html"},
{"title": "Has Property", "text": "Has Property Check if property exists. Inputs Input Input. Type: Any, List, Required, Single Outputs Output Output True/False. Type: Boolean Array Settings Property Text Property Path. See also Keywords: ", "tags": "", "url": "nodes.table.getset_property.has_property.html"},
{"title": "Get Property", "text": "Get Property Get property from input. Inputs Input Input new property value. Type: Any, List, Required, Single Outputs Output Output. Type: Numeric Array Settings Property Text Property path. For example, if the input is a single Image the path to the Sex property is Subject.Sex. The paths can be found in the Properties viewer by right-clicking on the property and choosing Copy Property Path. Property Type Selection Property type. Values: Boolean Array, Boolean Array List, Column, Column List, Contour, Contour List, Image, Image List, List of Lists, Mask, Mask List, Numeric Array, Numeric Array List, Structure, Structure List, Table, Table List, Text, Text List See also Keywords: ", "tags": "", "url": "nodes.table.getset_property.get_property.html"},
{"title": "Edit Property", "text": "Edit Property Modify a property of an input. Only Text, Numeric arrays, and Boolean arrays are editable. The Edit Property node enables users to set the property as a setting within the node, while the Set Property node accepts the property value as an input. The Edit Property node cannot alter the property type, but the Set Property node is able to do so. Inputs Input Input of any type. Type: Any, Required, Single Outputs Output Output of the same type as the input. Type: Numeric Array Settings Value Text Set the new property value. Property Text Property path. For example, if the input is a single Image the path to the Sex property is Subject.Sex. The paths can be found in the Properties viewer by right-clicking on the property and choosing Copy Property Path. See also Keywords: ", "tags": "", "url": "nodes.table.getset_property.edit_property.html"},
{"title": "Set Property", "text": "Set Property Set a specific property to a value supplied as an input. This operation allows changing the property value type, e.g. from a Numeric Array to a Text List. The property has to exist in the input data. If it does not exist, use the Insert Property node. Inputs Input Input. Type: Any, List, Required, Single New Value New property value. Type: Any, Required, Single Outputs Output Input data with the changed property. Type: Any, List Settings Property Text Property path. For example, if the input is a single Image the path to the Sex property is Subject.Sex. The paths can be found in the Properties viewer by right-clicking on the property and choosing Copy Property Path. Broadcast Input Boolean Broadcast input to property list elements. If set to True and the property is a list, the input will be assigned to each element of the property list. If set to False and the property and input are lists of equal length, the i:th element of the input list is assigned to the i:th element of the property list. See also Keywords: ", "tags": "", "url": "nodes.table.getset_property.set_property.html"},
{"title": "Insert Property", "text": "Insert Property Insert a Hero Data item at a specific location in input. Inputs Input Input Type: Any, List, Required, Single New Value New value. Type: Any, List, Required, Single Outputs Output Output. Type: Any Settings Property Text Property path. For example, if the input is a single Image the path to the Sex property is Subject.Sex. The paths can be found in the Properties viewer by right-clicking on the property and choosing Copy Property Path. Values: Boolean Array, Boolean Array List, Column, Column List, Contour, Contour List, Image, Image List, List of Lists, Mask, Mask List, Numeric Array, Numeric Array List, Structure, Structure List, Table, Table List, Text, Text List Broadcast Property Boolean Set many values in a list to the same value. See also Keywords: ", "tags": "", "url": "nodes.table.getset_property.insert_property.html"},
{"title": "Remove Property", "text": "Remove Property Remove a Hero Data item at a specific location in input data. Inputs Input Input Type: Any, List, Required, Single Outputs Output Output Type: Numeric Array Settings Property Text Property Path. See also Keywords: ", "tags": "", "url": "nodes.table.getset_property.remove_property.html"},
{"title": "Rename", "text": "Rename Rename input data. You can supply a new name, or add a prefix and/or suffix to existing name. You can add a counter to the name with the {n} syntax , which is useful if you want to rename a list of inputs. Example: &ldquo;New Name {n}&rdquo; will give the first new name as &ldquo;New Name 1&rdquo; if the counter starts at 1. Inputs Input Input. Type: Image List, Mask List, Contour List, Table List, Column List, Required, Single Outputs Output Output. Type: Image Settings Method Selection Select renaming method: new name or add prefix/suffix to existing name. Values: Rename, Prefix/Suffix Prefix Text Prefix. Suffix Text Suffix. Separator Text Separator between the original name and the prefix/suffix. New Name Text Set new name. Counter {n} Starts At: Integer Counter starting value. See also Keywords: ", "tags": "", "url": "nodes.table.getset_property.rename.html"},
{"title": "Rename Column", "text": "Rename Column Rename a column in a table. Inputs Input Input Table. Type: Table, Required, Single Outputs Output Result table with a renamed column. Type: Table Settings Old Name Text Old name of column. New Name Text New name of column. See also Keywords: ", "tags": "", "url": "nodes.table.getset_property.rename_column.html"},
{"title": "Table Repeater", "text": "Repeater Copies input connection to output. Settings Repeater Description Text The title of the repeater. If used as an input for a group, set value to brief description of expected input type. Sparse Connections Boolean A sparse connection removes the wire between the repeater output and connected nodes, and replaces them with a label displaying the repeater description. This is very useful when you have a large workflow wih many wires. Change Image/Data Name Set New Image/Data Name Boolean Should the image/data get a new name, only applies to Image4D and DataCollection. Misc IOType Text Missing description. See also Keywords: ", "tags": "", "url": "nodes.table.repeaters.table_repeater.html"},
{"title": "Table List Repeater", "text": "Repeater Copies input connection to output. Settings Repeater Description Text The title of the repeater. If used as an input for a group, set value to brief description of expected input type. Sparse Connections Boolean A sparse connection removes the wire between the repeater output and connected nodes, and replaces them with a label displaying the repeater description. This is very useful when you have a large workflow wih many wires. Change Image/Data Name Set New Image/Data Name Boolean Should the image/data get a new name, only applies to Image4D and DataCollection. Misc IOType Text Missing description. See also Keywords: ", "tags": "", "url": "nodes.table.repeaters.table_list_repeater.html"},
{"title": "Select Rows", "text": "Select Select rows in an input table or column based on true/false values in a boolean array or a column input, or indices in a numeric array or column input. Inputs Input Input table or column. Type: Table, Column, Required, Single Filter Input filter. Can be indices, represented in an integer numeric array or column, or bools represented in a boolean array or column. Type: Table, Column, Required, Single Outputs Output Output table or column. Type: Table List See also Keywords: ", "tags": "", "url": "nodes.table.select.select_rows.html"},
{"title": "Get Subtable", "text": "Get Subtable Extract rows and columns from a Table. Inputs Input Input Table. Type: Table, List, Required, Single Outputs Output Resulting Table. Type: Table, List Settings Select Rows Select By Selection Method of selection. Range lets you specify the start and stop rows to include. Index specifies the selected rows via a numeric array, i.e. to get the first and third row, input [0,2]. Bit Mask selects the rows using True/False notation, i.e. if you want the first and third row in a Table, input [1,0,1,0,0]. Values: Range, Index, Bit Mask Start Index Text If Range is selected, this specifies the first selected row. Stop Index Text If Range is selected, this specifies the last selected row. Indices Integers If Index is selected, input selected row indeces here as a numeric array of integers. Bit Mask Bits If Bit Mask is selected, input the selected rows via a boolean array. Select Columns Select By Selection Method of selection. Range lets you specify the start and stop columns to include. Index specifies the selected columns via a numeric array, i.e. to get the first and third columns, input [0,2]. Bit Mask selects the columns using True/False notation, i.e. if you want the first and third columns in a Table, input [1,0,1,0,0]. Names lets you specify the names of the columns to get using a comma separated string. If the column name has a comma in it, use the escape character, i.e. '\,'. Values: Range, Index, Bit Mask, Names Column Names Text Comma separated string with column names. Start Index Text If Range is selected, this specifies the first selected column. Stop Index Text If Range is selected, this specifies the last selected column. Indices Integers If Index is selected, input selected column indeces here as a numeric array of integers. Bit Mask Bits If Bit Mask is selected, input the selected columns via a boolean array. See also Keywords: ", "tags": "", "url": "nodes.table.select.get_subtable.html"},
{"title": "Get Column", "text": "Get Column Get a Column from a Table. Inputs Input Input Table. Type: Table, List, Required, Single Outputs Output Output Column. Type: Column Settings Selection Method Selection Method of selecting the column. Values: By Name, By Index Column Name Text If By Name is selected, input the name of the column you want to output. Column Index Integer If By Index is selected, input the index of the column you want to output. See also Keywords: ", "tags": "", "url": "nodes.table.select.get_column.html"},
{"title": "Merge Tables", "text": "Merge Tables Merge input tables. Inputs Table 0 Input Table. The inputs are dynamic, and the numbering will increase as more inputs are connected. Type: Table, List, Required, Single Outputs Table Merged output Table. Type: Table Settings Output Table Name Text Output Table name. Merge Direction Selection Select merge direction. Vertically will append rows, Horizontally will append columns. Vertically will match column names and insert for missing data. Horizontally can not contain duplicate column names. Values: Vertically, Horizontally List Handling Selection Set how to handle lists. Merge will merge all elements in to the same table. Broadcast will use broadcasting rules to produce a list of output Tables. Values: Merge, Broadcast See also Keywords: ", "tags": "", "url": "nodes.table.combine.merge_tables.html"},
{"title": "Join Tables", "text": "Join Tables Join tables on specified columns. Inputs Left Missing description. Type: Table, Required, Single Right Missing description. Type: Table, Required, Single Outputs Result Missing description. Type: Table Settings Output Name Text Missing description. Join Method Selection Missing description. Values: Inner, Outer, Left, Right Merge On Selection Missing description. Values: Common Column, Separate Columns Merge Column Name Text Missing description. Left Merge Column Name Text Missing description. Right Merge Column Name Text Missing description. Left Name Suffix Text Missing description. Right Name Suffix Text Missing description. See also Keywords: ", "tags": "", "url": "nodes.table.combine.join_tables.html"},
{"title": "Sort", "text": "Sort Sort a Table, Column or Numeric Array alphabetically or numerically depending on input. Inputs Input Input Table, Column or Numeric Array. Type: Table, Column, Numeric Array, List, Required, Single Outputs Output Output Table, Column or Numeric Array. Type: Table, Column, Numeric Array, List Settings Order Selection Sorting order. Values: Ascending, Descending Select Sorting Column By Selection If input is a Table, select the column to sort by using either column Name or Index. Values: Index, Name Column Index Integer Select column index to sort by. Column Name Text Select column name to sort by. Along Dimension Integer If input is a Numeric Array, select along which dimension to sort. See also Keywords: ", "tags": "", "url": "nodes.table.organize.sort.html"},
{"title": "Mean", "text": "Mean Project a Table or Column using the mean value (over selected columns if input is a Table). If input is a Table, the projection will only work if all selected columns have numeric values. Inputs Input Input Table(s) or Column(s). Type: Table, Column, List, Required, Single Outputs Output Output Table(s) or Column(s). Type: Table, Column, List Settings Applies only if input is a Table. Select Columns Select By Selection Method of selection. Range lets you specify the start and stop rows to include. Index specifies the selected rows via a numeric array, i.e. to get the first and third row, input [0,2]. Bit Mask selects the rows using True/False notation, i.e. if you want the first and third row in a Table, input [1,0,1,0,0]. Values: Range, Index, Bit Mask, Names Column Names Text Comma separated string with column names. Start Index Text If Range is selected, this specifies the first selected column. Stop Index Text If Range is selected, this specifies the last selected column. Indices Integers If Index is selected, input selected column indeces here as a numeric array of integers. Bit Mask Bits If Bit Mask is selected, input the selected columns via a boolean array. See also Keywords: ", "tags": "", "url": "nodes.table.projection.mean.html"},
{"title": "Sum", "text": "Sum Project a Table or Column using the sum (over selected columns if input is a Table). If input is a Table, the projection will only work if all selected columns have numeric values. Inputs Input Input Table(s) or Column(s). Type: Table, Column, List, Required, Single Outputs Output Output Table(s) or Column(s). Type: Table, Column, List Settings Applies only if input is a Table. Select Columns Select By Selection Method of selection. Range lets you specify the start and stop rows to include. Index specifies the selected rows via a numeric array, i.e. to get the first and third row, input [0,2]. Bit Mask selects the rows using True/False notation, i.e. if you want the first and third row in a Table, input [1,0,1,0,0]. Values: Range, Index, Bit Mask, Names Column Names Text Comma separated string with column names. Start Index Text If Range is selected, this specifies the first selected column. Stop Index Text If Range is selected, this specifies the last selected column. Indices Integers If Index is selected, input selected column indeces here as a numeric array of integers. Bit Mask Bits If Bit Mask is selected, input the selected columns via a boolean array. See also Keywords: ", "tags": "", "url": "nodes.table.projection.sum.html"},
{"title": "Product", "text": "Product Project a Table or Column using the product (over selected columns if input is a Table). If input is a Table, the projection will only work if all selected columns have numeric values. Inputs Input Input Table(s) or Column(s). Type: Table, Column, List, Required, Single Outputs Output Output Table(s) or Column(s). Type: Table, Column, List Settings Applies only if input is a Table. Select Columns Select By Selection Method of selection. Range lets you specify the start and stop rows to include. Index specifies the selected rows via a numeric array, i.e. to get the first and third row, input [0,2]. Bit Mask selects the rows using True/False notation, i.e. if you want the first and third row in a Table, input [1,0,1,0,0]. Values: Range, Index, Bit Mask, Names Column Names Text Comma separated string with column names. Start Index Text If Range is selected, this specifies the first selected column. Stop Index Text If Range is selected, this specifies the last selected column. Indices Integers If Index is selected, input selected column indeces here as a numeric array of integers. Bit Mask Bits If Bit Mask is selected, input the selected columns via a boolean array. See also Keywords: ", "tags": "", "url": "nodes.table.projection.product.html"},
{"title": "Standard Deviation", "text": "Standard Deviation Project a Table or Column using the standard deviation (over selected columns if input is a Table). If input is a Table, the projection will only work if all selected columns have numeric values. Inputs Input Input Table(s) or Column(s). Type: Table, Column, List, Required, Single Outputs Output Output Table(s) or Column(s). Type: Table, Column, List Settings Configure Unbiased Boolean Use Bessel's correction for an unbiased estimation of the standard deviation. Select Columns Select By Selection Method of selection. Range lets you specify the start and stop rows to include. Index specifies the selected rows via a numeric array, i.e. to get the first and third row, input [0,2]. Bit Mask selects the rows using True/False notation, i.e. if you want the first and third row in a Table, input [1,0,1,0,0]. Values: Range, Index, Bit Mask, Names Column Names Text Comma separated string with column names. Start Index Text If Range is selected, this specifies the first selected column. Stop Index Text If Range is selected, this specifies the last selected column. Indices Integers If Index is selected, input selected column indeces here as a numeric array of integers. Bit Mask Bits If Bit Mask is selected, input the selected columns via a boolean array. See also Keywords: ", "tags": "", "url": "nodes.table.projection.standard_deviation.html"},
{"title": "Variance", "text": "Variance Project a Table or Column using the variance (over selected columns if input is a Table). If input is a Table, the projection will only work if all selected columns have numeric values. Inputs Input Input Table(s) or Column(s). Type: Table, Column, List, Required, Single Outputs Output Output Table(s) or Column(s). Type: Table, Column, List Settings Configure Unbiased Boolean Use Bessel's correction for an unbiased estimation of the variance. Select Columns Select By Selection Method of selection. Range lets you specify the start and stop rows to include. Index specifies the selected rows via a numeric array, i.e. to get the first and third row, input [0,2]. Bit Mask selects the rows using True/False notation, i.e. if you want the first and third row in a Table, input [1,0,1,0,0]. Values: Range, Index, Bit Mask, Names Column Names Text Comma separated string with column names. Start Index Text If Range is selected, this specifies the first selected column. Stop Index Text If Range is selected, this specifies the last selected column. Indices Integers If Index is selected, input selected column indeces here as a numeric array of integers. Bit Mask Bits If Bit Mask is selected, input the selected columns via a boolean array. See also Keywords: ", "tags": "", "url": "nodes.table.projection.variance.html"},
{"title": "Min", "text": "Min Project a Table or Column using the minimum value (over selected columns if input is a Table). If input is a Table, the projection will only work if all selected columns have numeric values. Inputs Input Input Table(s) or Column(s). Type: Table, Column, List, Required, Single Outputs Output Output Table(s) or Column(s). Type: Table, Column, List Settings Applies only if input is a Table. Select Columns Select By Selection Method of selection. Range lets you specify the start and stop rows to include. Index specifies the selected rows via a numeric array, i.e. to get the first and third row, input [0,2]. Bit Mask selects the rows using True/False notation, i.e. if you want the first and third row in a Table, input [1,0,1,0,0]. Values: Range, Index, Bit Mask, Names Column Names Text Comma separated string with column names. Start Index Text If Range is selected, this specifies the first selected column. Stop Index Text If Range is selected, this specifies the last selected column. Indices Integers If Index is selected, input selected column indeces here as a numeric array of integers. Bit Mask Bits If Bit Mask is selected, input the selected columns via a boolean array. See also Keywords: ", "tags": "", "url": "nodes.table.projection.min.html"},
{"title": "Max", "text": "Max Project a Table or Column using the maximum value (over selected columns if input is a Table). If input is a Table, the projection will only work if all selected columns have numeric values. Inputs Input Input Table(s) or Column(s). Type: Table, Column, List, Required, Single Outputs Output Output Table(s) or Column(s). Type: Table, Column, List Settings Applies only if input is a Table. Select Columns Select By Selection Method of selection. Range lets you specify the start and stop rows to include. Index specifies the selected rows via a numeric array, i.e. to get the first and third row, input [0,2]. Bit Mask selects the rows using True/False notation, i.e. if you want the first and third row in a Table, input [1,0,1,0,0]. Values: Range, Index, Bit Mask, Names Column Names Text Comma separated string with column names. Start Index Text If Range is selected, this specifies the first selected column. Stop Index Text If Range is selected, this specifies the last selected column. Indices Integers If Index is selected, input selected column indeces here as a numeric array of integers. Bit Mask Bits If Bit Mask is selected, input the selected columns via a boolean array. See also Keywords: ", "tags": "", "url": "nodes.table.projection.max.html"},
{"title": "Median", "text": "Median Project a Table or Column using the median (over selected columns if input is a Table). If input is a Table, the projection will only work if all selected columns have numeric values. Inputs Input Input Table(s) or Column(s). Type: Table, Column, List, Required, Single Outputs Output Output Table(s) or Column(s). Type: Table, Column, List Settings Applies only if input is a Table. Select Columns Select By Selection Method of selection. Range lets you specify the start and stop rows to include. Index specifies the selected rows via a numeric array, i.e. to get the first and third row, input [0,2]. Bit Mask selects the rows using True/False notation, i.e. if you want the first and third row in a Table, input [1,0,1,0,0]. Values: Range, Index, Bit Mask, Names Column Names Text Comma separated string with column names. Start Index Text If Range is selected, this specifies the first selected column. Stop Index Text If Range is selected, this specifies the last selected column. Indices Integers If Index is selected, input selected column indeces here as a numeric array of integers. Bit Mask Bits If Bit Mask is selected, input the selected columns via a boolean array. See also Keywords: ", "tags": "", "url": "nodes.table.projection.median.html"},
{"title": "Norm", "text": "Norm Project a Table or Column using the norm (over selected columns if input is a Table). If input is a Table, the projection will only work if all selected columns have numeric values. Inputs Input Input Table(s) or Column(s). Type: Table, Column, List, Required, Single Outputs Output Output Table(s) or Column(s). Type: Table, Column, List Settings Configure Order Float Norm order. Select Columns Select By Selection Method of selection. Range lets you specify the start and stop rows to include. Index specifies the selected rows via a numeric array, i.e. to get the first and third row, input [0,2]. Bit Mask selects the rows using True/False notation, i.e. if you want the first and third row in a Table, input [1,0,1,0,0]. Values: Range, Index, Bit Mask, Names Column Names Text Comma separated string with column names. Start Index Text If Range is selected, this specifies the first selected column. Stop Index Text If Range is selected, this specifies the last selected column. Indices Integers If Index is selected, input selected column indeces here as a numeric array of integers. Bit Mask Bits If Bit Mask is selected, input the selected columns via a boolean array. See also Keywords: ", "tags": "", "url": "nodes.table.projection.norm.html"},
{"title": "Display", "text": "Display Display values or shapes depending on input in process. Copies input connection to output. Inputs Input Input. Type: Any, List, Required, Single Outputs Output Output. Type: Any, List Settings Clip Selection If the displayed value is longer than 96 characters, the displayed value will be clipped. If End is selected, the characters in the end of the value will be replaced with .... If Beginning is selected, the clipping will be done in the beginning of the value. Values: End, Beginning See also Keywords: ", "tags": "", "url": "nodes.table.visualization.display.html"},
{"title": "Display Property", "text": "Display Property Display a property in process. Copies input connection to output. Inputs Input Input. Type: Any, List, Required, Single Outputs Output Output. Type: Any, List Settings Property Text Path to the property to display. Clip Selection If the displayed value is longer than 96 characters, the displayed value will be clipped. If End is selected, the characters in the end of the value will be replaced with .... If Beginning is selected, the clipping will be done in the beginning of the value. Values: End, Beginning See also Keywords: ", "tags": "", "url": "nodes.table.visualization.display_property.html"},
{"title": "To Boolean Array", "text": "To Array Get values from a Table and output as a Boolean Array or Numeric Array. Inputs Input Input Table(s). Type: Table, List, Required, Single Outputs Output Missing description. Type: Boolean Array, Numeric Array, List Settings Configure Output Type Selection Set the output type to Numeric Array, Boolean Array or Text List. Note that if Boolean Array is selected, all values in the selected subtable must be booleans, and if Numeric Array is selected, all values in the selected subtable must be numbers (int, float, double etc.). Values: Numeric Array, Boolean Array, Text List Select Rows Select By Selection Method of selection. Range lets you specify the start and stop rows to include. Index specifies the selected rows via a numeric array, i.e. to get the first and third row, input [0,2]. Bit Mask selects the rows using True/False notation, i.e. if you want the first and third row in a Table, input [1,0,1,0,0]. Values: Range, Index, Bit Mask Start Index Text If Range is selected, this specifies the first selected row. Stop Index Text If Range is selected, this specifies the last selected row. Indices Integers If Index is selected, input selected row indeces here as a numeric array of integers. Bit Mask Bits If Bit Mask is selected, input the selected rows via a boolean array. Select Columns Select By Selection Method of selection. Range lets you specify the start and stop columns to include. Index specifies the selected columns via a numeric array, i.e. to get the first and third columns, input [0,2]. Bit Mask selects the columns using True/False notation, i.e. if you want the first and third columns in a Table, input [1,0,1,0,0]. Names lets you specify the names of the columns to get using a comma separated string. If the column name has a comma in it, use the escape character, i.e. '\,'. Values: Range, Index, Bit Mask, Names Column Names Text Comma separated string with column names. Start Index Text If Range is selected, this specifies the first selected column. Stop Index Text If Range is selected, this specifies the last selected column. Indices Integers If Index is selected, input selected column indeces here as a numeric array of integers. Bit Mask Bits If Bit Mask is selected, input the selected columns via a boolean array. ", "tags": "", "url": "nodes.table.conversion.to_boolean_array.html"},
{"title": "To Numeric Array", "text": "To Array Get values from a Table and output as a Boolean Array or Numeric Array. Inputs Input Input Table(s). Type: Table, List, Required, Single Outputs Output Missing description. Type: Boolean Array, Numeric Array, List Settings Configure Output Type Selection Set the output type to Numeric Array, Boolean Array or Text List. Note that if Boolean Array is selected, all values in the selected subtable must be booleans, and if Numeric Array is selected, all values in the selected subtable must be numbers (int, float, double etc.). Values: Numeric Array, Boolean Array, Text List Select Rows Select By Selection Method of selection. Range lets you specify the start and stop rows to include. Index specifies the selected rows via a numeric array, i.e. to get the first and third row, input [0,2]. Bit Mask selects the rows using True/False notation, i.e. if you want the first and third row in a Table, input [1,0,1,0,0]. Values: Range, Index, Bit Mask Start Index Text If Range is selected, this specifies the first selected row. Stop Index Text If Range is selected, this specifies the last selected row. Indices Integers If Index is selected, input selected row indeces here as a numeric array of integers. Bit Mask Bits If Bit Mask is selected, input the selected rows via a boolean array. Select Columns Select By Selection Method of selection. Range lets you specify the start and stop columns to include. Index specifies the selected columns via a numeric array, i.e. to get the first and third columns, input [0,2]. Bit Mask selects the columns using True/False notation, i.e. if you want the first and third columns in a Table, input [1,0,1,0,0]. Names lets you specify the names of the columns to get using a comma separated string. If the column name has a comma in it, use the escape character, i.e. '\,'. Values: Range, Index, Bit Mask, Names Column Names Text Comma separated string with column names. Start Index Text If Range is selected, this specifies the first selected column. Stop Index Text If Range is selected, this specifies the last selected column. Indices Integers If Index is selected, input selected column indeces here as a numeric array of integers. Bit Mask Bits If Bit Mask is selected, input the selected columns via a boolean array. ", "tags": "", "url": "nodes.table.conversion.to_numeric_array.html"},
{"title": "Save Hero Data to Disk", "text": "Save Hero Data Save data to disk using Hero data in binary format .hdata or xml format .hxdata. Inputs Input Data that is saved. Type: Any, Required, Single Settings Folder Path Folder where the file is stored. The path can be both absolute and relative. File Text Name of the file. If file extension is omitted, .hdata will be apended. The file ending can be either .hdata for binary storage or .hxdata for xml-based storage. Overwrite Boolean Overwrite file if it already exists. Compress Boolean Compress the file to save space. Will slow down the write and read speed. See also Load Hero Data Keywords: ", "tags": "", "url": "nodes.table.export.save_hero_data_to_disk.html"},
{"title": "Save Hero Data to Database", "text": "Save to Database Save data to a specific location in the database under a name specified in the node. Inputs Input The data to be stored in the database. Type: Any, Required, Single Study Link The destination in the database for the data to be stored. For Images and Masks this is optional. If not provided the Metadata will be used to find the destination. Typically this metadata is available for data imported into the database, such as DICOM images. Type: Struct, Required/Optional, Single Settings Use Name from Input Boolean Whether to take the name from the input data (applies to Images and Masks only) or from a node setting. Name in Database Text What name the data should be stored under in the database. See also Keywords: ", "tags": "", "url": "nodes.table.export.save_hero_data_to_database.html"},
{"title": "Create Study", "text": "Create Study Create a new study in the database. The study is defined by its Study ID, and is connected to a Patient ID in the database at creation. NOTE: If an image with a different Patient ID or Patient Name is saved to this study, it will still be displayed in the Patient ID/Patient name of study in the database panel, but will retain the original Patient ID and Patient name when loaded into the workflow. Outputs Output A structure describing the new study. Type: Struct Settings Database Text The name of the database in which the study is created. Study ID Text The Study ID. This must be a unique ID, two studies cannot share a Study ID. Study Description Text The Study Description, or name of the study. Patient ID Text The Patient ID to which the study belongs. Patient Name Text The patient name. Frame of Reference UID Text The Frame of Reference UID. See also Keywords: ", "tags": "", "url": "nodes.table.export.create_study.html"},
{"title": "Export to .xlsx", "text": "Export to .xlsx Export input table to Excel (.xlsx) format. If the input is a single table, the output will be a single-sheet Excel file with the same sheet name as the input table. If the input is a list of tables, each table will be saved as a separate sheet in the output Excel file. Note that the input tables must have unique names to avoid overwriting data. Inputs Input Input table(s). Type: Table List, Required, Single Settings Folder Path Output folder. The path can be both absolute and relative. Filename Text Output filename. Write Mode Selection The Write Mode setting offers four options to manage how data is written to the output Excel file: New File: Creates a new Excel (.xlsx) file. If a file with the same name already exists, it will be overwritten if the &ldquo;Overwrite&rdquo; setting is enabled, otherwise it will return an error. New Sheet: Adds a new sheet to an existing Excel file. If a sheet with the same name exists, it will be overwritten if the &ldquo;Overwrite&rdquo; setting is enabled, otherwise it will return an error. If the file does not exist, it will be created. Append Rows: The input table is appended as new rows to a specified sheet in your existing Excel file. The sheet is identified by the name of your input table. If the file or sheet do not exist, they will be created. Append Columns: The input table is appended as new columns to the specified sheet in your existing Excel file. The sheet is identified by the name of your input table. If the file or sheet do not exist, they will be created. Values: New File, New Sheet, Append Rows, Append Columns Overwrite Boolean Overwrite the file or the sheet, if it exists. If this is unselected and the file or sheet exists, it will return an error. See also Keywords: Excel, xlsx ", "tags": "", "url": "nodes.table.export.export_to_.xlsx.html"},
{"title": "Export to .csv", "text": "Export to CSV Export input table to .csv file. Inputs Input Input table. Type: Table, Required, Single Settings Folder Path Output folder. The path can be both absolute and relative. Filename Text Output filename. Separator Text Column separator. Comma is default. Write Mode Selection The Write Mode setting offers three options to manage how data is written to the output csv file: New File: Creates a new csv file. If a file with the same name already exists, it will be overwritten if the &ldquo;Overwrite&rdquo; setting is enabled, otherwise it will return an error. Append Rows: The input table is appended as new rows in your existing csv file. If the file does not exist, it will be created. Append Columns: The input table is appended as new columns in your existing csv file. If the file does not exist, it will be created. Values: New File, Append Rows, Append Columns See also Keywords: csv, comma ", "tags": "", "url": "nodes.table.export.export_to_.csv.html"},
{"title": "Create Column", "text": "Create Columns Creates a: Column from a Numeric Array, Boolean Array or Text List Columns List from a Numeric Array List, Boolean Array List or List of Lists containing Text List. Inputs Input Input 1D numeric array, boolean array or Text List, or a list of 1D numeric arrays, boolean arrays or Text Lists. Type: Numeric Array, Boolean Array, Text List, Required, Single Outputs Output Resulting column. Type: Column Settings Column Name(s) Text, List Name(s) of the column(s). The number of names must be equal to the number of output columns in the result. See also Keywords: ", "tags": "", "url": "nodes.column.createimport.create_column.html"},
{"title": "Load Hero Data", "text": "Load Hero Data Load Hero Data from disk. Outputs Output The loaded Hero Data. Type: Numeric Array Settings File Filepath Path to the Hero Data file. The path can be both absolute and relative. Data Type Selection The type of the data. Values: Numeric Array, Text, Boolean Array, Image, Mask, Structure, Table, Column, Contour, Text List, Image List, Mask List, Structure List, List of Lists, Table List, Column List, Numeric Array List, Boolean Array List, Contour List See also Keywords: ", "tags": "", "url": "nodes.column.createimport.load_hero_data.html"},
{"title": "Has Property", "text": "Has Property Check if property exists. Inputs Input Input. Type: Any, List, Required, Single Outputs Output Output True/False. Type: Boolean Array Settings Property Text Property Path. See also Keywords: ", "tags": "", "url": "nodes.column.getset_property.has_property.html"},
{"title": "Get Property", "text": "Get Property Get property from input. Inputs Input Input new property value. Type: Any, List, Required, Single Outputs Output Output. Type: Numeric Array Settings Property Text Property path. For example, if the input is a single Image the path to the Sex property is Subject.Sex. The paths can be found in the Properties viewer by right-clicking on the property and choosing Copy Property Path. Property Type Selection Property type. Values: Boolean Array, Boolean Array List, Column, Column List, Contour, Contour List, Image, Image List, List of Lists, Mask, Mask List, Numeric Array, Numeric Array List, Structure, Structure List, Table, Table List, Text, Text List See also Keywords: ", "tags": "", "url": "nodes.column.getset_property.get_property.html"},
{"title": "Edit Property", "text": "Edit Property Modify a property of an input. Only Text, Numeric arrays, and Boolean arrays are editable. The Edit Property node enables users to set the property as a setting within the node, while the Set Property node accepts the property value as an input. The Edit Property node cannot alter the property type, but the Set Property node is able to do so. Inputs Input Input of any type. Type: Any, Required, Single Outputs Output Output of the same type as the input. Type: Numeric Array Settings Value Text Set the new property value. Property Text Property path. For example, if the input is a single Image the path to the Sex property is Subject.Sex. The paths can be found in the Properties viewer by right-clicking on the property and choosing Copy Property Path. See also Keywords: ", "tags": "", "url": "nodes.column.getset_property.edit_property.html"},
{"title": "Set Property", "text": "Set Property Set a specific property to a value supplied as an input. This operation allows changing the property value type, e.g. from a Numeric Array to a Text List. The property has to exist in the input data. If it does not exist, use the Insert Property node. Inputs Input Input. Type: Any, List, Required, Single New Value New property value. Type: Any, Required, Single Outputs Output Input data with the changed property. Type: Any, List Settings Property Text Property path. For example, if the input is a single Image the path to the Sex property is Subject.Sex. The paths can be found in the Properties viewer by right-clicking on the property and choosing Copy Property Path. Broadcast Input Boolean Broadcast input to property list elements. If set to True and the property is a list, the input will be assigned to each element of the property list. If set to False and the property and input are lists of equal length, the i:th element of the input list is assigned to the i:th element of the property list. See also Keywords: ", "tags": "", "url": "nodes.column.getset_property.set_property.html"},
{"title": "Insert Property", "text": "Insert Property Insert a Hero Data item at a specific location in input. Inputs Input Input Type: Any, List, Required, Single New Value New value. Type: Any, List, Required, Single Outputs Output Output. Type: Any Settings Property Text Property path. For example, if the input is a single Image the path to the Sex property is Subject.Sex. The paths can be found in the Properties viewer by right-clicking on the property and choosing Copy Property Path. Values: Boolean Array, Boolean Array List, Column, Column List, Contour, Contour List, Image, Image List, List of Lists, Mask, Mask List, Numeric Array, Numeric Array List, Structure, Structure List, Table, Table List, Text, Text List Broadcast Property Boolean Set many values in a list to the same value. See also Keywords: ", "tags": "", "url": "nodes.column.getset_property.insert_property.html"},
{"title": "Remove Property", "text": "Remove Property Remove a Hero Data item at a specific location in input data. Inputs Input Input Type: Any, List, Required, Single Outputs Output Output Type: Numeric Array Settings Property Text Property Path. See also Keywords: ", "tags": "", "url": "nodes.column.getset_property.remove_property.html"},
{"title": "Rename", "text": "Rename Rename input data. You can supply a new name, or add a prefix and/or suffix to existing name. You can add a counter to the name with the {n} syntax , which is useful if you want to rename a list of inputs. Example: &ldquo;New Name {n}&rdquo; will give the first new name as &ldquo;New Name 1&rdquo; if the counter starts at 1. Inputs Input Input. Type: Image List, Mask List, Contour List, Table List, Column List, Required, Single Outputs Output Output. Type: Image Settings Method Selection Select renaming method: new name or add prefix/suffix to existing name. Values: Rename, Prefix/Suffix Prefix Text Prefix. Suffix Text Suffix. Separator Text Separator between the original name and the prefix/suffix. New Name Text Set new name. Counter {n} Starts At: Integer Counter starting value. See also Keywords: ", "tags": "", "url": "nodes.column.getset_property.rename.html"},
{"title": "Column Repeater", "text": "Repeater Copies input connection to output. Settings Repeater Description Text The title of the repeater. If used as an input for a group, set value to brief description of expected input type. Sparse Connections Boolean A sparse connection removes the wire between the repeater output and connected nodes, and replaces them with a label displaying the repeater description. This is very useful when you have a large workflow wih many wires. Change Image/Data Name Set New Image/Data Name Boolean Should the image/data get a new name, only applies to Image4D and DataCollection. Misc IOType Text Missing description. See also Keywords: ", "tags": "", "url": "nodes.column.repeaters.column_repeater.html"},
{"title": "Column List Repeater", "text": "Repeater Copies input connection to output. Settings Repeater Description Text The title of the repeater. If used as an input for a group, set value to brief description of expected input type. Sparse Connections Boolean A sparse connection removes the wire between the repeater output and connected nodes, and replaces them with a label displaying the repeater description. This is very useful when you have a large workflow wih many wires. Change Image/Data Name Set New Image/Data Name Boolean Should the image/data get a new name, only applies to Image4D and DataCollection. Misc IOType Text Missing description. See also Keywords: ", "tags": "", "url": "nodes.column.repeaters.column_list_repeater.html"},
{"title": "Add", "text": "Add Add two inputs with broadcasting. You can add any two supported inputs of the same type, and numbers can be added to all types. Inputs Upper First input. Type: Column, Image, Numeric Array, List, Required, Single Lower Second input. Type: Column, Image, Numeric Array, List, Optional, Single Outputs Output Resulting sum. The output type is determined by the input types. If one input is an Image or a Column, the output will be an Image or a Column, respectively. If both inputs are Numbers type, the output will be a Numeric Array type. Type: Column, Image, Numeric Array, List Settings Add Value Array Value to add if lower input is not connected. Value Type Selection Specify value type of Value. Values: Integer32, Integer64, Float32, Float64, Complex64, Complex128 Image Settings Metadata Source Selection Select the source for the output metadata. This is only applicable if the output is an image. Values: Upper, Lower Column Settings Column Name Text Set the name of the output column. Broadcast Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Image and Numeric Array. Values: Align Leading Dimensions, Align Trailing Dimensions See also Keywords: ", "tags": "", "url": "nodes.column.mathematics.add.html"},
{"title": "Subtract", "text": "Subtract Subtract two inputs with broadcasting. You can subtract any two supported inputs of the same type, and numbers can be subtracted from all types. Inputs Upper First input. Type: Column, Image, Numeric Array, List, Required, Single Lower Second input. Type: Column, Image, Numeric Array, List, Optional, Single Outputs Output Resulting subtraction. The output type is determined by the input types. If one input is an Image or a Column, the output will be an Image or a Column, respectively. If both inputs are Numbers type, the output will be a Numeric Array type. Type: Column, Image, Numeric Array, List Settings Subtract Value Array Value to subtract if lower input is not connected. Value Type Selection Specify value type of Value. Values: Integer32, Integer64, Float32, Float64, Complex64, Complex128 Image Settings Metadata Source Selection Select the source for the output metadata. This is only applicable if the output is an image. Values: Upper, Lower Column Settings Column Name Text Set the name of the output column. Broadcast Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Image and Numeric Array. Values: Align Leading Dimensions, Align Trailing Dimensions See also Keywords: ", "tags": "", "url": "nodes.column.mathematics.subtract.html"},
{"title": "Multiply", "text": "Multiply Multiply two inputs with broadcasting. You can multiply any two supported inputs of the same type, and numbers can be multiplied with all types. Inputs Upper First input. Type: Column, Image, Numeric Array, List, Required, Single Lower Second input. Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Resulting product. The output type is determined by the input types. If one input is an Image or a Column, the output will be an Image or a Column, respectively. If both inputs are Numbers type, the output will be a Numeric Array type. Type: Column, Image, Numeric Array, List Settings Multiply Value Array Value to multiply with if lower input is not connected. Value Type Selection Specify value type of Value. Values: Integer32, Integer64, Float32, Float64, Complex64, Complex128 Image Settings Metadata Source Selection Select the source for the output metadata. This is only applicable if the output is an image. Values: Upper, Lower Column Settings Column Name Text Set the name of the output column. Broadcast Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Image and Numeric Array. Values: Align Leading Dimensions, Align Trailing Dimensions See also Keywords: ", "tags": "", "url": "nodes.column.mathematics.multiply.html"},
{"title": "Divide", "text": "Divide Divide two inputs with broadcasting. You can divide any two supported inputs of the same type, and numbers can be the divisor or divedend with all types. Inputs Upper Dividend input. Type: Column, Image, Numeric Array, List, Required, Single Lower Divisor input. Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Resulting quotient. The output type is determined by the input types. If one input is an Image or a Column, the output will be an Image or a Column, respectively. If both inputs are Numbers type, the output will be a Numeric Array type. Type: Column, Image, Numeric Array, List Settings Divide Value Array Value to divide with if lower input is not connected. Value Type Selection Specify value type of Value. Values: Integer32, Integer64, Float32, Float64, Complex64, Complex128 Image Settings Metadata Source Selection Select the source for the output metadata. This is only applicable if the output is an image. Values: Upper, Lower Column Settings Column Name Text Set the name of the output column. Broadcast Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Image and Numeric Array. Values: Align Leading Dimensions, Align Trailing Dimensions See also Keywords: ", "tags": "", "url": "nodes.column.mathematics.divide.html"},
{"title": "From Real/Imag", "text": "Create Complex Create complex number from real and imaginary part Inputs Real Missing description. Type: Column, Image, Numeric Array, List, Required, Single Imag Missing description. Type: Column, Image, Numeric Array, List, Required, Single Outputs Complex Missing description. Type: Image Settings Image Settings Metadata Source Selection Select the source for the output metadata. This is only applicable if the output is an image. Values: Real, Imag Column Settings Column Name Text Set new column name. Broadcast Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Image and Numeric Array. Values: Align Leading Dimensions, Align Trailing Dimensions See also Keywords: ", "tags": "", "url": "nodes.column.mathematics.complex.from_realimag.html"},
{"title": "From Magnitude and Phase", "text": "Create Complex Create complex valued from magnitude and phase. Inputs Magnitude Missing description. Type: Column, Image, Numeric Array, List, Required, Single Phase Missing description. Type: Column, Image, Numeric Array, List, Required, Single Outputs Complex Missing description. Type: Image Settings Image Settings Metadata Source Selection Select the source for the output metadata. This is only applicable if the output is an image. Values: Magnitude, Phase Column Settings Column Name Text Set new column name. Broadcast Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Image and Numeric Array. Values: Align Leading Dimensions, Align Trailing Dimensions See also Keywords: ", "tags": "", "url": "nodes.column.mathematics.complex.from_magnitude_and_phase.html"},
{"title": "Conjugate", "text": "Complex Conjugate Computes the complex conjugate of the input: Let \(z = a + bi\). Then the complex conjugate \(z^* =a-bi\). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.column.mathematics.complex.conjugate.html"},
{"title": "Real", "text": "Real Part Get the real part. Inputs Complex Missing description. Type: Column, Image, Numeric Array, List, Required, Single Outputs Real Real part. Type: Image Settings Column Name Text Set new column name. See also Keywords: ", "tags": "", "url": "nodes.column.mathematics.complex.real.html"},
{"title": "Imaginary", "text": "Imaginary Part Get the imaginary part. Inputs Complex Complex data. Type: Column, Image, Numeric Array, List, Required, Single Outputs Imag Imaginary part. Type: Image Settings Column Name Text Set new column name. See also Keywords: ", "tags": "", "url": "nodes.column.mathematics.complex.imaginary.html"},
{"title": "Magnitude", "text": "Magnitude Get the magntiude. Inputs Complex Complex data. Type: Column, Image, Numeric Array, List, Required, Single Outputs Magnitude Magnitude of the input. Type: Image Settings Column Name Text Set new column name. See also Keywords: ", "tags": "", "url": "nodes.column.mathematics.complex.magnitude.html"},
{"title": "Phase", "text": "Phase Part Get the phase part of a number. Inputs Complex Complex data. Type: Column, Image, Numeric Array, List, Required, Single Outputs Phase Phase of the input. Type: Image Settings Column Name Text Set new column name. See also Keywords: ", "tags": "", "url": "nodes.column.mathematics.complex.phase.html"},
{"title": "Square Root", "text": "Square Root Elementwise square root. Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.column.mathematics.algebraic_functions.square_root.html"},
{"title": "Square", "text": "Square Elementwise square. Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.column.mathematics.algebraic_functions.square.html"},
{"title": "Reciprocal", "text": "Reciprocal Elementwise reciprocal. Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.column.mathematics.algebraic_functions.reciprocal.html"},
{"title": "Sign", "text": "Sign Gives the sign for each element in input, i.e. -1 for negative values and 1 for positive. Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.column.mathematics.algebraic_functions.sign.html"},
{"title": "Negate", "text": "Negate Elementwise negate. Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.column.mathematics.algebraic_functions.negate.html"},
{"title": "Absolute Value", "text": "Absolute Value Elementwise absolute value. Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.column.mathematics.algebraic_functions.absolute_value.html"},
{"title": "Sin", "text": "Sin Elementwise sin(). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.column.mathematics.trigonometric_functions.sin.html"},
{"title": "Cos", "text": "Cos Elementwise cos(). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.column.mathematics.trigonometric_functions.cos.html"},
{"title": "Tan", "text": "Tan Elementwise tan(). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.column.mathematics.trigonometric_functions.tan.html"},
{"title": "Asin", "text": "Asin Elementwise asin(). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.column.mathematics.trigonometric_functions.asin.html"},
{"title": "Acos", "text": "Acos Elementwise acos(). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.column.mathematics.trigonometric_functions.acos.html"},
{"title": "Atan", "text": "Atan Elementwise atan(). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.column.mathematics.trigonometric_functions.atan.html"},
{"title": "Sinh", "text": "Sinh Elementwise sinh(). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.column.mathematics.trigonometric_functions.sinh.html"},
{"title": "Cosh", "text": "Cosh Elementwise cosh(). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.column.mathematics.trigonometric_functions.cosh.html"},
{"title": "Tanh", "text": "Tanh Elemenwise tanh(). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.column.mathematics.trigonometric_functions.tanh.html"},
{"title": "Asinh", "text": "Asinh Elementwise asinh(). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.column.mathematics.trigonometric_functions.asinh.html"},
{"title": "Acosh", "text": "Acosh Elementwise acosh(). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.column.mathematics.trigonometric_functions.acosh.html"},
{"title": "Atanh", "text": "Atanh Elementwise atanh(). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.column.mathematics.trigonometric_functions.atanh.html"},
{"title": "Exp", "text": "Exp Exp() of each element of input, i.e. if input is \(x\), result is \(e^x\). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.column.mathematics.exponential_functions.exp.html"},
{"title": "2ˣ", "text": "Pow(2,·) 2^() of each element of input, i.e. if input is \(x\), result is \(2^x\). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.column.mathematics.exponential_functions.2ˣ.html"},
{"title": "10ˣ", "text": "Pow(10,·) 10^() of each element of input, i.e. if input is \(x\), result is \(10^x\). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.column.mathematics.exponential_functions.10ˣ.html"},
{"title": "Raise to Power", "text": "Raise to Power Raise each element \(A_i\) in the Upper input to the power of the element value in the Lower input \(B_{i}\) \[ \begin{equation} R_i = A_i^{B_{i}} \label{eq:sample} \end{equation} \] You can use any two supported inputs of the same type, and numbers can be the base or exponent with all types. Inputs Upper Base input. Type: Column, Image, Numeric Array, List, Required, Single Lower Exponent input. Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Resulting power. The output type is determined by the input types. If one input is an Image or a Column, the output will be an Image or a Column, respectively. If both inputs are Numbers type, the output will be a Numeric Array type. Type: Column, Image, Numeric Array, List Settings Exponent Value Array Exponent value if Lower input is not connected. Value Type Selection Specify value type of Value. Values: Integer32, Integer64, Float32, Float64, Complex64, Complex128 Image Settings Metadata Source Selection Select the source for the output metadata. This is only applicable if the output is an image. Values: Upper, Lower Column Settings Column Name Text Set the name of the output column. Broadcast Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Image and Numeric Array. Values: Align Leading Dimensions, Align Trailing Dimensions See also Keywords: ", "tags": "", "url": "nodes.column.mathematics.exponential_functions.raise_to_power.html"},
{"title": "Log", "text": "Log ln() of each element of input, i.e. if input is \(x\), result is \(\ln(x)\). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.column.mathematics.exponential_functions.log.html"},
{"title": "Log10", "text": "Log10 log() of each element of input, i.e. if input is \(x\), result is \(\log(x)\). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.column.mathematics.exponential_functions.log10.html"},
{"title": "Erf", "text": "Erf Computes the error function (Gauss error function) of each element of the input. Defined as \(erf(x) = \frac{2}{\sqrt{\pi}}\int_0^x e^{-t^2}dt\). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.column.mathematics.special_functions.erf.html"},
{"title": "Erfc", "text": "Erfc Computes the complementary error function of each element of the input. Defined as \(erfc(x) = 1 - erf(x)\). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.column.mathematics.special_functions.erfc.html"},
{"title": "Inverse Erf", "text": "Inverse Erf The inverse error function \(erf^{-1}(x)\) of each element in the input. Defined by the error function \(erf(x)\) such that \(x = erf^{-1}(erf(x)) = erf(erf^{-1}(x))\). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.column.mathematics.special_functions.inverse_erf.html"},
{"title": "Round", "text": "Round Rounds numerical values to the specified number of decimal places. Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Settings Column Name Text Set the name of the output column. Round Decimals Integer Set the number of decimals in the output. The default is 0, which will return integer values. See also Keywords: ", "tags": "", "url": "nodes.column.mathematics.round.html"},
{"title": "Ceiling", "text": "Ceiling Rounds each element value to the closest, larger integer. Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.column.mathematics.ceiling.html"},
{"title": "Floor", "text": "Floor Rounds each element value to the closest, smaller integer. Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.column.mathematics.floor.html"},
{"title": "Fraction", "text": "Fraction Elementwise fraction part of input, i.e. the remainder after a floor operation, e.g. if an input element is \(12.23\) the output will be \(0.23\). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.column.mathematics.fraction.html"},
{"title": "Remainder", "text": "Remainder Calculate the elementwise remainder with broadcasting. The remainder is the amount &ldquo;left over&rdquo; after performing elementwise division, i.e. the remainder of \(\frac{5}{2}=1\). Inputs Upper The dividend. Type: Column, Image, Numeric Array, List, Required, Single Lower The divisor. Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Resulting remainder. The output type is determined by the input types. If one input is an Image or a Column, the output will be an Image or a Column, respectively. If both inputs are Numbers type, the output will be a Numeric Array type. Type: Column, Image, Numeric Array, List Settings Divisor Value Array Value to divide with if lower input is not connected. Value Type Selection Specify value type of Value. Values: Integer32, Integer64, Float32, Float64, Complex64, Complex128 Image Settings Metadata Source Selection Select the source for the output metadata. This is only applicable if the output is an image. Values: Upper, Lower Column Settings Column Name Text Set the name of the output column. Broadcast Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Image and Numeric Array. Values: Align Leading Dimensions, Align Trailing Dimensions See also Keywords: ", "tags": "", "url": "nodes.column.mathematics.remainder.html"},
{"title": "Is NaN", "text": "Is NaN Elementwise check if NaN. Gives TRUE output if element is NaN. Inputs Input Input. Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Output depends on input. Input Column gives output Column, input Image yields output Mask and input Numeric Array gives output Boolean Array. Type: Column, Mask, Boolean Array, List, Required, Single Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.column.mathematics.is_nan.html"},
{"title": "Is Inf", "text": "Is Inf Elementwise check if infinite. Gives TRUE output if element is infinite. Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Output depends on input. Input Column gives output Column, input Image yields output Mask and input Numeric Array gives output Boolean Array. Type: Column, Mask, Boolean Array, List, Required, Single Settings Configure Infinity Type Selection Set to check for positive or negative infinity (or both). Values: +Inf or -Inf, +Inf, -Inf Column Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.column.mathematics.is_inf.html"},
{"title": "Is Finite", "text": "Is Finite Elementwise check if not NaN or Inf. Gives TRUE output if element is not NaN or infinite. Inputs Input Input. Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Output depends on input. Input Column gives output Column, input Image yields output Mask and input Numeric Array gives output Boolean Array. Type: Column, Mask, Boolean Array, List, Required, Single Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.column.mathematics.is_finite.html"},
{"title": "Set Non-finite", "text": "Set Non-finite Set inf and NaN values to real values. Inputs Input Input. Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Output. Type: Column, Image, Numeric Array, List Settings Configure NaN Float Set value to replace NaN values with. +Inf Float Set value to replace positive infitity values with. -Inf Float Set value to replace negative infitity values with. Column Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.column.mathematics.set_non-finite.html"},
{"title": "Normalize", "text": "Normalize Performs linear normalization of input data to fit within a specified intensity range. The function is defined by the following equation: \[ \begin{equation} V_{norm} = (V-\text{min}(V))\frac{\text{max}_{norm}-\text{min}_{norm}}{\text{max}(V)-\text{min}(V)}+\text{min}_{norm} \label{eq:normalize} \end{equation} \] Parameters and Definitions \(V\): The input values to be normalized. \(V_{norm}\): The result after normalization. \(\text{min}(V)\): The minimum value found in the input data. \(\text{max}(V)\): The maximum value found in the input data. \(\text{min}_{norm}\) and \(\text{max}_{norm}\): These define the desired range for the normalized output. For example, setting \(\text{min}_{norm}\) = 0 and \(\text{max}_{norm}\) = 1 would scale all input values to fall within the range of 0 to 1. For image inputs, the \(\text{min}(V)\) and \(\text{max}(V)\) values can be taken from the entire ND-image, the 3D-volume or on a slice-by-slice basis. If complex data is supplied, the real and imaginary parts are normalized independently. Inputs Input Input. Type: Numeric Array, Column, List, Required, Single Outputs Output Output. Type: Numeric Array, Column, List Settings Normalize Selection Set how to perform the normalization: Per Slice normalizes each slice separately, Per Volume normalizes each 3D-volume separatly and Entire Image normalizes the entire ND-image. Values: Per Slice, Per Volume, Entire Image Min Float Defines the lowest possible value in the output. All normalized values are scaled such that the smallest value aligns with this minimum value. Max Float Defines the highest possible value in the output. During normalization, the largest value is scaled to match this value. See also Keywords: ", "tags": "", "url": "nodes.column.mathematics.normalize.html"},
{"title": "Z-Normalize", "text": "Z-Normalize Normalizes input using the z-score (or standard score). It is calculated by subtracting the mean and then dividing the difference by the standard deviation. For Image inputs, the mean and standard deviation can be calculated from the entire ND-image, per 3D-volume or per slice. The standard deviation \(s\) is computed using \[ s = \sqrt{\frac{1}{N-1}\sum_ {i=1}^N{(x_i-\bar{x})(x_i-\bar{x})^{*}}} \] where \(x_i\) are individual data points, \(N\) is the total numer of data ponts, \(\bar{x}\) is the sample mean, and \(^*\) is the complex conjugate which only affects complex data. Inputs Input Input. Type: Numeric Array, Column, List, Required, Single Outputs Output Output, the same type as the input. Type: Numeric Array, Column, List Settings Normalize Selection Set how to perform the normalization: Per Slice normalizes each slice separately Per Volume normalizes each 3D-volume separatly Entire Image normalizes the entire ND-image. Values: Per Slice, Per Volume, Entire Image See also Keywords: ", "tags": "", "url": "nodes.column.mathematics.z-normalize.html"},
{"title": "Sigmoid", "text": "Sigmoid Computes the sigmoid function element-wise. A linear transformation is applied first on the argument of the sigmoid function. The resulting total transform is given by \(f(x) = (Max-Min) * \dfrac{1}{1+e^{-(x - \beta) / \alpha }} + Min\) Every output element is equal to f(x), where x is the intensity of the homologous input element, and alpha and beta are user-provided constants. Consider an exampel of an image. The \(\beta\) value can be thought of the offset on the pixel value that you are trying to isolate. E.g., if the object you are trying to isolate is at a pixel intensity above 150, you would choose a \(\beta\) value that is around that value. The \(\alpha\) value can be thought of as the scaling or variance of the sigmoid. Lower \(\alpha\) values will make the pixel range of your intensity sharper. Your \(\alpha\) value would decide how much of the noise you would want to include in your transformation. Smaller \(\alpha\) values (0.25, 0.5) would zero out most of the noise, but it might make your actual signal thicker and not specific enough. Conversely, larger alpha values (e.g. 3+) might have a smoother signal but might include more noise. Negative alpha values can be thought of as using a positive alpha value and then inverting the image. Inputs Input Input. Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Output. Type: Column, Image, Numeric Array, List Settings Configure Alpha Float Alpha parameter. Low values cancel noise, but makes signal thicker. Negative values inverts image. Beta Float Beta parameter. Set to ~the pixel value you want to isolate. Min Float Output min value. Max Float Output max value. See also Keywords: ", "tags": "", "url": "nodes.column.mathematics.sigmoid.html"},
{"title": "Clip", "text": "Clip The input value range is limited between a specified minimum and maximum value as defined in the settings. The limits can be set explicitly, or as percentiles of the input. Any values outside of this range will be set to the closest limit. Inputs Input Input Type: Column, Image, Mask, Required, Single Outputs Output Output image Type: Image Settings Clip Min Value Float Minimum value in the output. Max Value Float Maximum value in the output. Min Percentile [%] Float Minimum value in the output is set as a percentile of the input. Max Percentile [%] Float Maximum value in the output is set as a percentile of the input. Configure Set NaN Float Assign NaN values to this number. Bounds definition Selection Choose whether to set the minimum and maximum values explicitly or as percentiles of the input. Values: Explicit, Percentiles Return Bounds Boolean Return the min and max values of the output. This can be useful when percentiles have been used to define the bounds. Column Settings Column Name Text Set output column name. See also Keywords: truncate, clamp ", "tags": "", "url": "nodes.column.mathematics.clip.html"},
{"title": "And", "text": "And Performs element-wise boolean AND operation in supplied inputs with broadcasting. If an element is TRUE in both inputs, the resulting output element is TRUE, otherwise it is FALSE. You can perform the operation on any two supported inputs of the same type. The operation can be performed on any supported input type and a boolean. Inputs Upper First input. Type: Mask, Column, Boolean Array, List, Required, Single Lower Second input. Type: Mask, Column, Boolean Array, List, Optional, Single Outputs Output Resulting output. The output type is determined by the input types. If one input is an Mask or a Column, the output will be an Mask or a Column, respectively. If both inputs are Boolean Array type, the output will be a Boolean Array type. Type: Mask, Column, Boolean Array, List Settings Value Value Array If optional input is not suppliad, the AND operation will be performed between mandatory Upper input and specified value. Image Settings Metadata Source Selection Select the source for the output metadata. This is only applicable if the output is a mask. Values: Upper, Lower Column Settings Column Name Text Set the name of the output column. Broadcast Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Mask and Boolean Array. Values: Align Leading Dimensions, Align Trailing Dimensions See also Keywords: ", "tags": "", "url": "nodes.column.boolean_algebra.and.html"},
{"title": "Or", "text": "Or Performs element-wise boolean OR operation in supplied inputs with broadcasting. If atleast one input element is TRUE, the resulting output element is TRUE, otherwise it is FALSE. You can perform the operation on any two supported inputs of the same type. The operation can be performed on any supported input type and a boolean. Inputs Upper First input. Type: Mask, Column, Boolean Array, List, Required, Single Lower Second input. Type: Mask, Column, Boolean Array, List, Optional, Single Outputs Output Resulting output. The output type is determined by the input types. If one input is an Mask or a Column, the output will be an Mask or a Column, respectively. If both inputs are Boolean Array type, the output will be a Boolean Array type. Type: Mask, Column, Boolean Array, List Settings Value Value Array If optional input is not suppliad, the AND operation will be performed between mandatory Upper input and specified value. Image Settings Metadata Source Selection Select the source for the output metadata. This is only applicable if the output is a mask. Values: Upper, Lower Column Settings Column Name Text Set the name of the output column. Broadcast Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Mask and Boolean Array. Values: Align Leading Dimensions, Align Trailing Dimensions See also Keywords: ", "tags": "", "url": "nodes.column.boolean_algebra.or.html"},
{"title": "XOr", "text": "XOr Performs element-wise boolean XOR operation in supplied inputs with broadcasting. If the two input elements are not equal, the resulting output element is TRUE, otherwise it is FALSE. You can perform the operation on any two supported inputs of the same type. The operation can be performed on any supported input type and a boolean. Inputs Upper First input. Type: Mask, Column, Boolean Array, List, Required, Single Lower Second input. Type: Mask, Column, Boolean Array, List, Optional, Single Outputs Output Resulting output. The output type is determined by the input types. If one input is an Mask or a Column, the output will be an Mask or a Column, respectively. If both inputs are Boolean Array type, the output will be a Boolean Array type. Type: Mask, Column, Boolean Array, List Settings Value Value Array If optional input is not suppliad, the AND operation will be performed between mandatory Upper input and specified value. Image Settings Metadata Source Selection Select the source for the output metadata. This is only applicable if the output is a mask. Values: Upper, Lower Column Settings Column Name Text Set the name of the output column. Broadcast Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Mask and Boolean Array. Values: Align Leading Dimensions, Align Trailing Dimensions See also Keywords: ", "tags": "", "url": "nodes.column.boolean_algebra.xor.html"},
{"title": "Not", "text": "Not Performs logical elementwise NOT. Inputs Input Input. Type: Mask, Column, Boolean Array, List, Required, Single Outputs Output Output. Type: Mask, Column, Boolean Array, List Settings Append Column Name With Text Append text to Column Name. Append Mask Name With Text Append text to Mask Name. See also Keywords: ", "tags": "", "url": "nodes.column.boolean_algebra.not.html"},
{"title": "Any", "text": "Any Voxelwise logical OR over all elements in input list with broadcasting, i.e. if a voxel or entry is TRUE in any element of the input list, the output voxel or entry is TRUE. Inputs In Input. Type: Mask, Column, Boolean Array, List, Required, Single Outputs Out Output. Type: Mask, Column, Boolean Array Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Mask and Boolean Array. Values: Leading Dimensions, Trailing Dimensions Metadata From Element Integer Select the source for the output metadata. This is only applicable if the output is a mask. See also Keywords: ", "tags": "", "url": "nodes.column.boolean_algebra.any.html"},
{"title": "All", "text": "All Voxelwise logical OR over all elements in input list with broadcasting, i.e. if a voxel or entry is TRUE in all elements of the input list, the output voxel or entry is TRUE. Inputs In Input. Type: Mask, Column, Boolean Array, List, Required, Single Outputs Out Output. Type: Mask, Column, Boolean Array Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Mask and Boolean Array. Values: Leading Dimensions, Trailing Dimensions Metadata From Element Integer Select the source for the output metadata. This is only applicable if the output is a mask. See also Keywords: ", "tags": "", "url": "nodes.column.boolean_algebra.all.html"},
{"title": "Equal", "text": "Equal Elementwise compare inputs with broadcasting. If input elements are equal, the output element is TRUE. You can compare any supported inputs to inputs of the same type, and also Mask to Bits, Image to Numbers and Column to Numeric Array and Boolean Array. Inputs Upper First input. Type: Mask, Column, Image, Numeric Array, Boolean Array, List, Required, Single Lower Second input. Type: Mask, Column, Image, Numeric Array, Boolean Array, List, Optional, Single Outputs Output Output. The output depends on the input. An Image input gives an Image output, a Mask input gives a Mask output and a Column input gives a Column output, regardless of the second input type. Two Numbers inputs gives Numeric Array output and two Bits inputs gives Boolean Array output. Type: Mask, Column, Image, Numeric Array, Boolean Array, List Settings Equal Value Array Value to compare the first input to. Only valid if the optional input is not connected. Value Type Selection Value type of the Value setting. Values: Boolean, Integer32, Integer64, Float32, Float64, Complex64, Complex128 Image Settings Metadata Source Selection Select the source for the output metadata. This is only applicable if the output is an Image or a Mask. Values: Upper, Lower Column Settings Column Name Text Set the name of the output column. Broadcast Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Image and Numeric Array. Values: Align Leading Dimensions, Align Trailing Dimensions See also Keywords: ", "tags": "", "url": "nodes.column.compare.equal.html"},
{"title": "Not Equal", "text": "Not Equal Elementwise compare inputs with broadcasting. If input elements are not equal, the output element is TRUE. You can compare any supported inputs to inputs of the same type, and also Mask to Bits, Image to Numbers and Column to Numeric Array and Boolean Array. Inputs Upper First input. Type: Mask, Column, Image, Numeric Array, Boolean Array, List, Required, Single Lower Second input. Type: Mask, Column, Image, Numeric Array, Boolean Array, List, Required, Single Outputs Output Output. The output depends on the input. An Image input gives an Image output, a Mask input gives a Mask output and a Column input gives a Column output, regardless of the second input type. Two Numbers inputs gives Numeric Array output and two Bits inputs gives Boolean Array output. Type: Mask, Column, Image, Numeric Array, Boolean Array, List Settings Value Value Array Value to compare the first input to. Only valid if the optional input is not connected. Value Type Selection Value type of the Value setting. Values: Boolean, Integer32, Integer64, Float32, Float64, Complex64, Complex128 Image Settings Metadata Source Selection Select the source for the output metadata. This is only applicable if the output is an Image or a Mask. Values: Upper, Lower Column Settings Column Name Text Set the name of the output column. Broadcast Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Image and Numeric Array. Values: Align Leading Dimensions, Align Trailing Dimensions See also Keywords: ", "tags": "", "url": "nodes.column.compare.not_equal.html"},
{"title": "Less Than", "text": "Less Than Elementwise compare inputs with broadcasting. If Upper input elements are less than Lower input elements, the output element is TRUE. You can compare any supported inputs to inputs of the same type, and any input element to Numeric Array. Inputs Upper First input. Type: Column, Image, Numeric Array, List, Required, Single Lower Second input. Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Output. The output type is determined by the input types. If one input is an Image or a Column, the output will be an Image or a Column, respectively. If both inputs are Numbers type, the output will be a Numeric Array type. Type: Column, Image, Numeric Array, List Settings Value Value Array Value to compare the first input to. Only valid if the optional input is not connected. Value Type Selection Value type of the Value setting. Values: Integer32, Integer64, Float32, Float64 Image Settings Metadata Source Selection Select the source for the output metadata. This is only applicable if the output is an image. Values: Upper, Lower Column Settings Column Name Text Set the name of the output column. Broadcast Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Image and Numeric Array. Values: Align Leading Dimensions, Align Trailing Dimensions See also Keywords: ", "tags": "", "url": "nodes.column.compare.less_than.html"},
{"title": "Less Than or Equal", "text": "Less Than or Equal Elementwise compare inputs with broadcasting. If Upper input elements are less than or equal Lower input elements, the output element is TRUE. You can compare any supported inputs to inputs of the same type, and any input element to Numeric Array. Inputs Upper First input. Type: Column, Image, Numeric Array, List, Required, Single Lower Second input. Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Output. The output type is determined by the input types. If one input is an Image or a Column, the output will be an Image or a Column, respectively. If both inputs are Numbers type, the output will be a Numeric Array type. Type: Column, Image, Numeric Array, List Settings Value Value Array Value to compare the first input to. Only valid if the optional input is not connected. Value Type Selection Value type of the Value setting. Values: Integer32, Integer64, Float32, Float64 Image Settings Metadata Source Selection Select the source for the output metadata. This is only applicable if the output is an image. Values: Upper, Lower Column Settings Column Name Text Set the name of the output column. Broadcast Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Image and Numeric Array. Values: Align Leading Dimensions, Align Trailing Dimensions See also Keywords: ", "tags": "", "url": "nodes.column.compare.less_than_or_equal.html"},
{"title": "Greater Than", "text": "Greater Than Elementwise compare inputs with broadcasting. If Upper input elements are greater than Lower input elements, the output element is TRUE. You can compare any supported inputs to inputs of the same type, and any input element to Numbers. Inputs Upper First input. Type: Column, Image, Numbers, List, Required, Single Lower Second input. Type: Column, Image, Numbers, List, Required, Single Outputs Output Output. The output type is determined by the input types. If one input is an Image or a Column, the output will be an Image or a Column, respectively. If both inputs are Numbers type, the output will be a Numbers type. Type: Column, Image, Numbers, List Settings Value Value Array Value to compare the first input to. Only valid if the optional input is not connected. Value Type Selection Value type of the Value setting. Values: Integer32, Integer64, Float32, Float64 Image Settings Metadata Source Selection Select the source for the output metadata. This is only applicable if the output is an image. Values: Upper, Lower Column Settings Column Name Text Set the name of the output column. Broadcast Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Image and Numbers. Values: Align Leading Dimensions, Align Trailing Dimensions See also Keywords: ", "tags": "", "url": "nodes.column.compare.greater_than.html"},
{"title": "Greater Than or Equal", "text": "Greater Than or Equal Elementwise compare inputs with broadcasting. If Upper input elements are greater than or equal to Lower input elements, the output element is TRUE. You can compare any supported inputs to inputs of the same type, and any input element to Numbers. Inputs Upper First input. Type: Column, Image, Numbers, List, Required, Single Lower Second input. Type: Column, Image, Numbers, List, Required, Single Outputs Output Output. The output type is determined by the input types. If one input is an Image or a Column, the output will be an Image or a Column, respectively. If both inputs are Numbers type, the output will be a Numbers type. Type: Column, Image, Numbers, List Settings Value Value Array Value to compare the first input to. Only valid if the optional input is not connected. Value Type Selection Value type of the Value setting. Values: Integer32, Integer64, Float32, Float64 Image Settings Select the source for the output metadata. This is only applicable if the output is an image. Values: Upper, Lower Column Settings Column Name Text Set the name of the output column. Broadcast Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Image and Numbers. Values: Align Leading Dimensions, Align Trailing Dimensions See also Keywords: ", "tags": "", "url": "nodes.column.compare.greater_than_or_equal.html"},
{"title": "Select Elements", "text": "Select Select rows in an input table or column based on true/false values in a boolean array or a column input, or indices in a numeric array or column input. Inputs Input Input table or column. Type: Table, Column, Required, Single Filter Input filter. Can be indices, represented in an integer numeric array or column, or bools represented in a boolean array or column. Type: Table, Column, Required, Single Outputs Output Output table or column. Type: Table List See also Keywords: ", "tags": "", "url": "nodes.column.select.select_elements.html"},
{"title": "Sort", "text": "Sort Sort a Table, Column or Numeric Array alphabetically or numerically depending on input. Inputs Input Input Table, Column or Numeric Array. Type: Table, Column, Numeric Array, List, Required, Single Outputs Output Output Table, Column or Numeric Array. Type: Table, Column, Numeric Array, List Settings Order Selection Sorting order. Values: Ascending, Descending Select Sorting Column By Selection If input is a Table, select the column to sort by using either column Name or Index. Values: Index, Name Column Index Integer Select column index to sort by. Column Name Text Select column name to sort by. Along Dimension Integer If input is a Numeric Array, select along which dimension to sort. See also Keywords: ", "tags": "", "url": "nodes.column.organize.sort.html"},
{"title": "Mean", "text": "Mean Project a Table or Column using the mean value (over selected columns if input is a Table). If input is a Table, the projection will only work if all selected columns have numeric values. Inputs Input Input Table(s) or Column(s). Type: Table, Column, List, Required, Single Outputs Output Output Table(s) or Column(s). Type: Table, Column, List Settings Applies only if input is a Table. Select Columns Select By Selection Method of selection. Range lets you specify the start and stop rows to include. Index specifies the selected rows via a numeric array, i.e. to get the first and third row, input [0,2]. Bit Mask selects the rows using True/False notation, i.e. if you want the first and third row in a Table, input [1,0,1,0,0]. Values: Range, Index, Bit Mask, Names Column Names Text Comma separated string with column names. Start Index Text If Range is selected, this specifies the first selected column. Stop Index Text If Range is selected, this specifies the last selected column. Indices Integers If Index is selected, input selected column indeces here as a numeric array of integers. Bit Mask Bits If Bit Mask is selected, input the selected columns via a boolean array. See also Keywords: ", "tags": "", "url": "nodes.column.projection.mean.html"},
{"title": "Sum", "text": "Sum Project a Table or Column using the sum (over selected columns if input is a Table). If input is a Table, the projection will only work if all selected columns have numeric values. Inputs Input Input Table(s) or Column(s). Type: Table, Column, List, Required, Single Outputs Output Output Table(s) or Column(s). Type: Table, Column, List Settings Applies only if input is a Table. Select Columns Select By Selection Method of selection. Range lets you specify the start and stop rows to include. Index specifies the selected rows via a numeric array, i.e. to get the first and third row, input [0,2]. Bit Mask selects the rows using True/False notation, i.e. if you want the first and third row in a Table, input [1,0,1,0,0]. Values: Range, Index, Bit Mask, Names Column Names Text Comma separated string with column names. Start Index Text If Range is selected, this specifies the first selected column. Stop Index Text If Range is selected, this specifies the last selected column. Indices Integers If Index is selected, input selected column indeces here as a numeric array of integers. Bit Mask Bits If Bit Mask is selected, input the selected columns via a boolean array. See also Keywords: ", "tags": "", "url": "nodes.column.projection.sum.html"},
{"title": "Product", "text": "Product Project a Table or Column using the product (over selected columns if input is a Table). If input is a Table, the projection will only work if all selected columns have numeric values. Inputs Input Input Table(s) or Column(s). Type: Table, Column, List, Required, Single Outputs Output Output Table(s) or Column(s). Type: Table, Column, List Settings Applies only if input is a Table. Select Columns Select By Selection Method of selection. Range lets you specify the start and stop rows to include. Index specifies the selected rows via a numeric array, i.e. to get the first and third row, input [0,2]. Bit Mask selects the rows using True/False notation, i.e. if you want the first and third row in a Table, input [1,0,1,0,0]. Values: Range, Index, Bit Mask, Names Column Names Text Comma separated string with column names. Start Index Text If Range is selected, this specifies the first selected column. Stop Index Text If Range is selected, this specifies the last selected column. Indices Integers If Index is selected, input selected column indeces here as a numeric array of integers. Bit Mask Bits If Bit Mask is selected, input the selected columns via a boolean array. See also Keywords: ", "tags": "", "url": "nodes.column.projection.product.html"},
{"title": "Standard Deviation", "text": "Standard Deviation Project a Table or Column using the standard deviation (over selected columns if input is a Table). If input is a Table, the projection will only work if all selected columns have numeric values. Inputs Input Input Table(s) or Column(s). Type: Table, Column, List, Required, Single Outputs Output Output Table(s) or Column(s). Type: Table, Column, List Settings Configure Unbiased Boolean Use Bessel's correction for an unbiased estimation of the standard deviation. Select Columns Select By Selection Method of selection. Range lets you specify the start and stop rows to include. Index specifies the selected rows via a numeric array, i.e. to get the first and third row, input [0,2]. Bit Mask selects the rows using True/False notation, i.e. if you want the first and third row in a Table, input [1,0,1,0,0]. Values: Range, Index, Bit Mask, Names Column Names Text Comma separated string with column names. Start Index Text If Range is selected, this specifies the first selected column. Stop Index Text If Range is selected, this specifies the last selected column. Indices Integers If Index is selected, input selected column indeces here as a numeric array of integers. Bit Mask Bits If Bit Mask is selected, input the selected columns via a boolean array. See also Keywords: ", "tags": "", "url": "nodes.column.projection.standard_deviation.html"},
{"title": "Variance", "text": "Variance Project a Table or Column using the variance (over selected columns if input is a Table). If input is a Table, the projection will only work if all selected columns have numeric values. Inputs Input Input Table(s) or Column(s). Type: Table, Column, List, Required, Single Outputs Output Output Table(s) or Column(s). Type: Table, Column, List Settings Configure Unbiased Boolean Use Bessel's correction for an unbiased estimation of the variance. Select Columns Select By Selection Method of selection. Range lets you specify the start and stop rows to include. Index specifies the selected rows via a numeric array, i.e. to get the first and third row, input [0,2]. Bit Mask selects the rows using True/False notation, i.e. if you want the first and third row in a Table, input [1,0,1,0,0]. Values: Range, Index, Bit Mask, Names Column Names Text Comma separated string with column names. Start Index Text If Range is selected, this specifies the first selected column. Stop Index Text If Range is selected, this specifies the last selected column. Indices Integers If Index is selected, input selected column indeces here as a numeric array of integers. Bit Mask Bits If Bit Mask is selected, input the selected columns via a boolean array. See also Keywords: ", "tags": "", "url": "nodes.column.projection.variance.html"},
{"title": "Min", "text": "Min Project a Table or Column using the minimum value (over selected columns if input is a Table). If input is a Table, the projection will only work if all selected columns have numeric values. Inputs Input Input Table(s) or Column(s). Type: Table, Column, List, Required, Single Outputs Output Output Table(s) or Column(s). Type: Table, Column, List Settings Applies only if input is a Table. Select Columns Select By Selection Method of selection. Range lets you specify the start and stop rows to include. Index specifies the selected rows via a numeric array, i.e. to get the first and third row, input [0,2]. Bit Mask selects the rows using True/False notation, i.e. if you want the first and third row in a Table, input [1,0,1,0,0]. Values: Range, Index, Bit Mask, Names Column Names Text Comma separated string with column names. Start Index Text If Range is selected, this specifies the first selected column. Stop Index Text If Range is selected, this specifies the last selected column. Indices Integers If Index is selected, input selected column indeces here as a numeric array of integers. Bit Mask Bits If Bit Mask is selected, input the selected columns via a boolean array. See also Keywords: ", "tags": "", "url": "nodes.column.projection.min.html"},
{"title": "Max", "text": "Max Project a Table or Column using the maximum value (over selected columns if input is a Table). If input is a Table, the projection will only work if all selected columns have numeric values. Inputs Input Input Table(s) or Column(s). Type: Table, Column, List, Required, Single Outputs Output Output Table(s) or Column(s). Type: Table, Column, List Settings Applies only if input is a Table. Select Columns Select By Selection Method of selection. Range lets you specify the start and stop rows to include. Index specifies the selected rows via a numeric array, i.e. to get the first and third row, input [0,2]. Bit Mask selects the rows using True/False notation, i.e. if you want the first and third row in a Table, input [1,0,1,0,0]. Values: Range, Index, Bit Mask, Names Column Names Text Comma separated string with column names. Start Index Text If Range is selected, this specifies the first selected column. Stop Index Text If Range is selected, this specifies the last selected column. Indices Integers If Index is selected, input selected column indeces here as a numeric array of integers. Bit Mask Bits If Bit Mask is selected, input the selected columns via a boolean array. See also Keywords: ", "tags": "", "url": "nodes.column.projection.max.html"},
{"title": "Median", "text": "Median Project a Table or Column using the median (over selected columns if input is a Table). If input is a Table, the projection will only work if all selected columns have numeric values. Inputs Input Input Table(s) or Column(s). Type: Table, Column, List, Required, Single Outputs Output Output Table(s) or Column(s). Type: Table, Column, List Settings Applies only if input is a Table. Select Columns Select By Selection Method of selection. Range lets you specify the start and stop rows to include. Index specifies the selected rows via a numeric array, i.e. to get the first and third row, input [0,2]. Bit Mask selects the rows using True/False notation, i.e. if you want the first and third row in a Table, input [1,0,1,0,0]. Values: Range, Index, Bit Mask, Names Column Names Text Comma separated string with column names. Start Index Text If Range is selected, this specifies the first selected column. Stop Index Text If Range is selected, this specifies the last selected column. Indices Integers If Index is selected, input selected column indeces here as a numeric array of integers. Bit Mask Bits If Bit Mask is selected, input the selected columns via a boolean array. See also Keywords: ", "tags": "", "url": "nodes.column.projection.median.html"},
{"title": "Norm", "text": "Norm Project a Table or Column using the norm (over selected columns if input is a Table). If input is a Table, the projection will only work if all selected columns have numeric values. Inputs Input Input Table(s) or Column(s). Type: Table, Column, List, Required, Single Outputs Output Output Table(s) or Column(s). Type: Table, Column, List Settings Configure Order Float Norm order. Select Columns Select By Selection Method of selection. Range lets you specify the start and stop rows to include. Index specifies the selected rows via a numeric array, i.e. to get the first and third row, input [0,2]. Bit Mask selects the rows using True/False notation, i.e. if you want the first and third row in a Table, input [1,0,1,0,0]. Values: Range, Index, Bit Mask, Names Column Names Text Comma separated string with column names. Start Index Text If Range is selected, this specifies the first selected column. Stop Index Text If Range is selected, this specifies the last selected column. Indices Integers If Index is selected, input selected column indeces here as a numeric array of integers. Bit Mask Bits If Bit Mask is selected, input the selected columns via a boolean array. See also Keywords: ", "tags": "", "url": "nodes.column.projection.norm.html"},
{"title": "Display", "text": "Display Display values or shapes depending on input in process. Copies input connection to output. Inputs Input Input. Type: Any, List, Required, Single Outputs Output Output. Type: Any, List Settings Clip Selection If the displayed value is longer than 96 characters, the displayed value will be clipped. If End is selected, the characters in the end of the value will be replaced with .... If Beginning is selected, the clipping will be done in the beginning of the value. Values: End, Beginning See also Keywords: ", "tags": "", "url": "nodes.column.visualization.display.html"},
{"title": "Display Property", "text": "Display Property Display a property in process. Copies input connection to output. Inputs Input Input. Type: Any, List, Required, Single Outputs Output Output. Type: Any, List Settings Property Text Path to the property to display. Clip Selection If the displayed value is longer than 96 characters, the displayed value will be clipped. If End is selected, the characters in the end of the value will be replaced with .... If Beginning is selected, the clipping will be done in the beginning of the value. Values: End, Beginning See also Keywords: ", "tags": "", "url": "nodes.column.visualization.display_property.html"},
{"title": "To Boolean Array", "text": "To Array Get values from a column and output as a Numeric Array, Boolean Array or Text List. Inputs Input Input Column(s). Type: Column, List, Required, Single Outputs Output Output values. Type: Numeric Array, Boolean Array, Text, List Settings Output Type Selection Select output type. Values: Numeric Array, Boolean Array, Text List Select Rows Select By Selection Method of selection. Range lets you specify the start and stop rows to include. Index specifies the selected rows via a numeric array, i.e. to get the first and third row, input [0,2]. Bit Mask selects the rows using True/False notation, i.e. if you want the first and third row in a Table, input [1,0,1,0,0]. Values: Range, Index, Bit Mask Start Index Text If Range is selected, this specifies the first selected row. Stop Index Text If Range is selected, this specifies the last selected row. Indices Integers If Index is selected, input selected row indeces here as a numeric array of integers. Bit Mask Bits If Bit Mask is selected, input the selected rows via a boolean array. See also Keywords: ", "tags": "", "url": "nodes.column.conversion.to_boolean_array.html"},
{"title": "To Numeric Array", "text": "To Array Get values from a column and output as a Numeric Array, Boolean Array or Text List. Inputs Input Input Column(s). Type: Column, List, Required, Single Outputs Output Output values. Type: Numeric Array, Boolean Array, Text, List Settings Output Type Selection Select output type. Values: Numeric Array, Boolean Array, Text List Select Rows Select By Selection Method of selection. Range lets you specify the start and stop rows to include. Index specifies the selected rows via a numeric array, i.e. to get the first and third row, input [0,2]. Bit Mask selects the rows using True/False notation, i.e. if you want the first and third row in a Table, input [1,0,1,0,0]. Values: Range, Index, Bit Mask Start Index Text If Range is selected, this specifies the first selected row. Stop Index Text If Range is selected, this specifies the last selected row. Indices Integers If Index is selected, input selected row indeces here as a numeric array of integers. Bit Mask Bits If Bit Mask is selected, input the selected rows via a boolean array. See also Keywords: ", "tags": "", "url": "nodes.column.conversion.to_numeric_array.html"},
{"title": "To Text", "text": "To Array Get values from a column and output as a Numeric Array, Boolean Array or Text List. Inputs Input Input Column(s). Type: Column, List, Required, Single Outputs Output Output values. Type: Numeric Array, Boolean Array, Text, List Settings Output Type Selection Select output type. Values: Numeric Array, Boolean Array, Text List Select Rows Select By Selection Method of selection. Range lets you specify the start and stop rows to include. Index specifies the selected rows via a numeric array, i.e. to get the first and third row, input [0,2]. Bit Mask selects the rows using True/False notation, i.e. if you want the first and third row in a Table, input [1,0,1,0,0]. Values: Range, Index, Bit Mask Start Index Text If Range is selected, this specifies the first selected row. Stop Index Text If Range is selected, this specifies the last selected row. Indices Integers If Index is selected, input selected row indeces here as a numeric array of integers. Bit Mask Bits If Bit Mask is selected, input the selected rows via a boolean array. See also Keywords: ", "tags": "", "url": "nodes.column.conversion.to_text.html"},
{"title": "Create Study", "text": "Create Study Create a new study in the database. The study is defined by its Study ID, and is connected to a Patient ID in the database at creation. NOTE: If an image with a different Patient ID or Patient Name is saved to this study, it will still be displayed in the Patient ID/Patient name of study in the database panel, but will retain the original Patient ID and Patient name when loaded into the workflow. Outputs Output A structure describing the new study. Type: Struct Settings Database Text The name of the database in which the study is created. Study ID Text The Study ID. This must be a unique ID, two studies cannot share a Study ID. Study Description Text The Study Description, or name of the study. Patient ID Text The Patient ID to which the study belongs. Patient Name Text The patient name. Frame of Reference UID Text The Frame of Reference UID. See also Keywords: ", "tags": "", "url": "nodes.column.conversion.create_study.html"},
{"title": "Cast to Type", "text": "Cast Cast the value type of the input to a new value type. Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Output(s). Type: Numeric Array Settings Configure Value Type Selection The new value type. Values: Float64, Float32, Integer64, Integer32, Complex64x2, Complex32x2 Column Settings Column Name Text Name of the output column. See also Keywords: ", "tags": "", "url": "nodes.column.conversion.cast_to_type.html"},
{"title": "Save Hero Data to Disk", "text": "Save Hero Data Save data to disk using Hero data in binary format .hdata or xml format .hxdata. Inputs Input Data that is saved. Type: Any, Required, Single Settings Folder Path Folder where the file is stored. The path can be both absolute and relative. File Text Name of the file. If file extension is omitted, .hdata will be apended. The file ending can be either .hdata for binary storage or .hxdata for xml-based storage. Overwrite Boolean Overwrite file if it already exists. Compress Boolean Compress the file to save space. Will slow down the write and read speed. See also Load Hero Data Keywords: ", "tags": "", "url": "nodes.column.export.save_hero_data_to_disk.html"},
{"title": "Save Hero Data to Database", "text": "Save to Database Save data to a specific location in the database under a name specified in the node. Inputs Input The data to be stored in the database. Type: Any, Required, Single Study Link The destination in the database for the data to be stored. For Images and Masks this is optional. If not provided the Metadata will be used to find the destination. Typically this metadata is available for data imported into the database, such as DICOM images. Type: Struct, Required/Optional, Single Settings Use Name from Input Boolean Whether to take the name from the input data (applies to Images and Masks only) or from a node setting. Name in Database Text What name the data should be stored under in the database. See also Keywords: ", "tags": "", "url": "nodes.column.export.save_hero_data_to_database.html"},
{"title": "Create Numeric Array", "text": "Create Numeric Array Creates a numeric array. Outputs Output The created numeric array. Type: Numeric Array Settings Value Array Set the value for the output array. Data Type Selection Set the output datatype of the array values. Values: Integer32, Integer64, Float32, Float64, Complex64, Complex128 See also Keywords: ", "tags": "", "url": "nodes.numeric_array.createimport.create_numeric_array.html"},
{"title": "Create Constant Numeric Array", "text": "Create Constant Numeric Array Creates numeric array with constant values. Outputs Output The output numeric array. Type: Numeric Array Settings Value Float Set the value to use for the numeric array elements. Array Shape Integers Set the output shape of the array. Data Type Selection Set the datatype of the array values. Values: Integer32, Integer64, Float32, Float64, Complex64, Complex128 See also Keywords: ", "tags": "", "url": "nodes.numeric_array.createimport.create_constant_numeric_array.html"},
{"title": "Create Range", "text": "Create Range Create a 1D numeric array with a range of values defined by the start and stop values. Outputs Output The output array. Type: Numeric Array Settings Start Float The first value in the range. Stop Float The greatest possible value in the range. Step Size Float The step size between consecutive elements in the range. Data Type Selection The data type of the output array. Values: Integer32, Integer64, Float32, Float64 See also Keywords: ", "tags": "", "url": "nodes.numeric_array.createimport.create_range.html"},
{"title": "Create Linearly Spaced Array", "text": "Create Linspace Creates linearly spaced numbers. Outputs Output The array with linearly spaced numbers. Type: Numeric Array Settings Start Float The first value. Stop Float The last value. Number of Steps Integer The total numbers of values including the first and last values. Data Type Selection Type of numerical values. Values: Float64, Float32 See also Keywords: ", "tags": "", "url": "nodes.numeric_array.createimport.create_linearly_spaced_array.html"},
{"title": "Create Logarithmically Spaced Array", "text": "Create Logspace Creates values spaced evenly on a logarithmic scale with start and stop values defined defined on the logarithmic scale. Outputs Output The array with logarithmically spaced values. Type: Numeric Array Settings Start Float The starting exponent of the array. Stop Float The stopping exponent of the array. Number of Steps Integer The total numbers of values including the first and last values. Data Type Selection Type of numerical values. Values: Float32, Float64 See also Keywords: ", "tags": "", "url": "nodes.numeric_array.createimport.create_logarithmically_spaced_array.html"},
{"title": "Create Geometrically Spaced Array", "text": "Create Geomspace Creates values spaced evenly on a logarithmic scale with start and stop values defined directly, in contrast to a logarithmically spaced array where the endpoints are defined on the logarithmic scale. Outputs Output The array with geometrically spaced values. Type: Numeric Array Settings Start Float The starting value of the array. Stop Float The stopping value of the array. Number of Steps Integer The total numbers of values including the first and last values. Data Type Selection Type of numerical values. Values: Float32, Float64 See also Keywords: ", "tags": "", "url": "nodes.numeric_array.createimport.create_geometrically_spaced_array.html"},
{"title": "Create Numeric Meshgrid", "text": "Create Numeric Meshgrid This node constructs a numeric grid using sets of 1D input arrays. Each input array defines values along a specific dimension based on its connection name. If you provide N input arrays, the node generates N N-dimensional grids, where the grid shapes depend on the input array lengths. The output is a single numeric array with N+1 dimensions. If any input is a list, the node returns a list of expanded results. Example: if you input arrays with lengths 4 and 3, the output grid will be of shape [4, 3, 2]. With input arrays of lengths 4, 3, and 2, the output grid's shape becomes [4, 3, 2, 3]. This node is similar to MATLAB's ndgrid or numpy's meshgrid. Inputs Dimension 0 Input 1D numeric array (lists). The inputs are dynamic, and the numbering will increase as more inputs are connected. A scalar, i.e. a 0D input will be treated as a 1D input of a single element. Type: Numeric Array, Required, Single Outputs Output Output meshgrid. Type: Numeric Array See also TORCH.MESHGRID Keywords: mesh, meshgrid, ndgrid ", "tags": "", "url": "nodes.numeric_array.createimport.create_numeric_meshgrid.html"},
{"title": "Parse Text", "text": "Parse Parse text to a numerical or boolean array or scalar. The format of the text should be square brackets &ldquo;[]&rdquo; for each array dimension and comma separator &quot;, &quot; between items. Since it is ambiguous from the text what the data type should be it must be specified. Examples: 3.4 → Scalar number. [1, 2, 3] → 1D array of numbers. [[1, 2], [3, 4]] → 2D array of numbers. [True, False] → 1D array of boolean values. Inputs Input input Text(s) to be parsed. Type: Text, List, Required, Single Outputs Output Output array(s). Type: Numeric Array, Boolean Array, List Settings Data Type Selection Type of data in the resulting array(s). Values: Boolean, Integer32, Integer64, Float32, Float64, Complex64, Complex128 See also Parse Text Keywords: ", "tags": "", "url": "nodes.numeric_array.createimport.parse_text.html"},
{"title": "Import from Text File", "text": "Import from Text File Import the content of a text file as a numeric array. Outputs Output Output numeric array Type: Numeric Array Settings Path Filepath Path to text file. The path can be both absolute and relative. Delimiter Text Delimiter in the text file, i.e. the character that is used to separate elements. Can be expressed as a single character, or a regular expression (RegEx). Useful RegEx examples: \s+ describes one or more spaces. This is the default value. ,\s* describes a comma, followed by zero or more spaces. File has Headers Boolean If True, the first row is treated as the column headers, and will ignored when reading the file content. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.createimport.import_from_text_file.html"},
{"title": "Import Numpy Array", "text": "Import Numpy Array Import a numpy array as a numeric array. Outputs Output Output Numeric Array Type: Numeric Array Settings Path Filepath Path to Numpy Array file. The path can be both absolute and relative. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.createimport.import_numpy_array.html"},
{"title": "Uniform Distribution", "text": "Random Creates uniformly distributed random numbers. Outputs Out Output Numeric Array containg random numbers. Type: Numeric Array Settings Configure Shape Integers Shape of the output array. Broadcasting Selection Select how to align the input data for broadcasting. Values: Align Leading Dimension, Align Trailing Dimension Data Type Selection Specify value type of the values in the output Numeric Array. Values: Float32, Float64 Distribution Lower Float Lower limit of the distribution. Elementwise Lower Boolean Provide the lower limit of the distribution elementwise via input. Upper Float Upper limit of the distribution. Elementwise Upper Boolean Provide the upper limit of the distribution elementwise via input. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.createimport.random.uniform_distribution.html"},
{"title": "Normal Distribution", "text": "Random Creates normally distributed random numbers. Outputs Out Output Numeric Array containg random numbers. Type: Numeric Array Settings Configure Shape Integers Shape of the output array. Broadcasting Selection Select how to align the input data for broadcasting. Values: Align Leading Dimension, Align Trailing Dimension Data Type Selection Specify value type of the values in the output Numeric Array. Values: Float32, Float64 Distribution Mean Float Mean value of the output distribution. Elementwise Mean Boolean Provide the mean value of the distribution elementwise via input. Std Float Standard deviation of the output distribution. Elementwise Std Boolean Provide the standard deviation of the distribution elementwise via input. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.createimport.random.normal_distribution.html"},
{"title": "Rician Distribution", "text": "Random Creates Rician distributed random numbers. Outputs Out Output Numeric Array containg random numbers. Type: Numeric Array Settings Configure Shape Integers Shape of the output array. Broadcasting Selection Select how to align the input data for broadcasting. Values: Align Leading Dimension, Align Trailing Dimension Data Type Selection Specify value type of the values in the output Numeric Array. Values: Float32, Float64 Distribution ν Float Non-centrality parameter of the distribution. Elementwise ν Boolean Provide the non-centrality parameter elementwise via input. σ Float Standard deviation of the distribution. Elementwise σ Boolean Provide the standard deviation of the distribution elementwise via input. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.createimport.random.rician_distribution.html"},
{"title": "Poisson Distribution", "text": "Random Creates Poisson distributed random numbers. Outputs Out Output Numeric Array containg random numbers. Type: Numeric Array Settings Configure Shape Integers Shape of the output array. Data Type Selection Specify value type of the values in the output Numeric Array. Values: Float32, Float64 Distribution λ Float Rate parameter of the distribution. Elementwise λ Boolean Provide the rate parameter of the distribution elementwise via input. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.createimport.random.poisson_distribution.html"},
{"title": "χ² Distribution", "text": "Random Creates χ² distributed random numbers. Outputs Out Output Numeric Array containg random numbers. Type: Numeric Array Settings Configure Shape Integers Shape of the output array. Data Type Selection Specify value type of the values in the output Numeric Array. Values: Float32, Float64 Distribution df Float Number of degrees of freedom. Elementwise df Boolean Provide the number of degrees of freedom elementwise via input. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.createimport.random.χ²_distribution.html"},
{"title": "Log-Normal Distribution", "text": "Random Creates lognormally distributed random numbers, i.e. numbers whose logarithm is normally distributed. Outputs Out Output Numeric Array containg random numbers. Type: Numeric Array Settings Configure Shape Integers Shape of the output array. Broadcasting Selection Select how to align the input data for broadcasting. Values: Align Leading Dimension, Align Trailing Dimension Data Type Selection Specify value type of the values in the output Numeric Array. Values: Float32, Float64 Distribution Mean Float Mean value of the output distribution. Elementwise Mean Boolean Provide the mean value of the distribution elementwise via input. Std Float Standard deviation of the output distribution. Elementwise Std Boolean Provide the standard deviation of the distribution elementwise via input. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.createimport.random.log-normal_distribution.html"},
{"title": "Laplace Distribution", "text": "Random Creates Laplace distributed random numbers. Outputs Out Output Numeric Array containg random numbers. Type: Numeric Array Settings Configure Shape Integers Shape of the output array. Broadcasting Selection Select how to align the input data for broadcasting. Values: Align Leading Dimension, Align Trailing Dimension Data Type Selection Specify value type of the values in the output Numeric Array. Values: Float32, Float64 Distribution μ Float Mean value of the distribution. Elementwise μ Boolean Provide the mean value of the distribution elementwise via input. b Float Diversity parameter of the distribution. Elementwise b Boolean Provide the diversity parameter of the distribution elementwise via input. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.createimport.random.laplace_distribution.html"},
{"title": "Beta Distribution", "text": "Random Creates Beta distributed random numbers. Outputs Out Output Numeric Array containg random numbers. Type: Numeric Array Settings Configure Shape Integers Shape of the output array. Broadcasting Selection Select how to align the input data for broadcasting. Values: Align Leading Dimension, Align Trailing Dimension Data Type Selection Specify value type of the values in the output Numeric Array. Values: Float32, Float64 Distribution α Float α shape parameter of the distribution. Elementwise α Boolean Provide the α shape parameter of the distribution elementwise via input. β Float β shape parameter of the distribution. Elementwise β Boolean Provide the β shape parameter of the distribution elementwise via input. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.createimport.random.beta_distribution.html"},
{"title": "Gamma Distribution", "text": "Random Creates Gamma distributed random numbers. Outputs Out Output Numeric Array containg random numbers. Type: Numeric Array Settings Configure Shape Integers Shape of the output array. Broadcasting Selection Select how to align the input data for broadcasting. Values: Align Leading Dimension, Align Trailing Dimension Data Type Selection Specify value type of the values in the output Numeric Array. Values: Float32, Float64 Distribution α Float α shape parameter of the distribution. Elementwise α Boolean Provide the α shape parameter of the distribution elementwise via input. β Float β shape parameter of the distribution. Elementwise β Boolean Provide the β shape parameter of the distribution elementwise via input. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.createimport.random.gamma_distribution.html"},
{"title": "Load Hero Data", "text": "Load Hero Data Load Hero Data from disk. Outputs Output The loaded Hero Data. Type: Numeric Array Settings File Filepath Path to the Hero Data file. The path can be both absolute and relative. Data Type Selection The type of the data. Values: Numeric Array, Text, Boolean Array, Image, Mask, Structure, Table, Column, Contour, Text List, Image List, Mask List, Structure List, List of Lists, Table List, Column List, Numeric Array List, Boolean Array List, Contour List See also Keywords: ", "tags": "", "url": "nodes.numeric_array.createimport.load_hero_data.html"},
{"title": "Has Property", "text": "Has Property Check if property exists. Inputs Input Input. Type: Any, List, Required, Single Outputs Output Output True/False. Type: Boolean Array Settings Property Text Property Path. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.getset_property.has_property.html"},
{"title": "Get Property", "text": "Get Property Get property from input. Inputs Input Input new property value. Type: Any, List, Required, Single Outputs Output Output. Type: Numeric Array Settings Property Text Property path. For example, if the input is a single Image the path to the Sex property is Subject.Sex. The paths can be found in the Properties viewer by right-clicking on the property and choosing Copy Property Path. Property Type Selection Property type. Values: Boolean Array, Boolean Array List, Column, Column List, Contour, Contour List, Image, Image List, List of Lists, Mask, Mask List, Numeric Array, Numeric Array List, Structure, Structure List, Table, Table List, Text, Text List See also Keywords: ", "tags": "", "url": "nodes.numeric_array.getset_property.get_property.html"},
{"title": "Edit Property", "text": "Edit Property Modify a property of an input. Only Text, Numeric arrays, and Boolean arrays are editable. The Edit Property node enables users to set the property as a setting within the node, while the Set Property node accepts the property value as an input. The Edit Property node cannot alter the property type, but the Set Property node is able to do so. Inputs Input Input of any type. Type: Any, Required, Single Outputs Output Output of the same type as the input. Type: Numeric Array Settings Value Text Set the new property value. Property Text Property path. For example, if the input is a single Image the path to the Sex property is Subject.Sex. The paths can be found in the Properties viewer by right-clicking on the property and choosing Copy Property Path. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.getset_property.edit_property.html"},
{"title": "Set Property", "text": "Set Property Set a specific property to a value supplied as an input. This operation allows changing the property value type, e.g. from a Numeric Array to a Text List. The property has to exist in the input data. If it does not exist, use the Insert Property node. Inputs Input Input. Type: Any, List, Required, Single New Value New property value. Type: Any, Required, Single Outputs Output Input data with the changed property. Type: Any, List Settings Property Text Property path. For example, if the input is a single Image the path to the Sex property is Subject.Sex. The paths can be found in the Properties viewer by right-clicking on the property and choosing Copy Property Path. Broadcast Input Boolean Broadcast input to property list elements. If set to True and the property is a list, the input will be assigned to each element of the property list. If set to False and the property and input are lists of equal length, the i:th element of the input list is assigned to the i:th element of the property list. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.getset_property.set_property.html"},
{"title": "Insert Property", "text": "Insert Property Insert a Hero Data item at a specific location in input. Inputs Input Input Type: Any, List, Required, Single New Value New value. Type: Any, List, Required, Single Outputs Output Output. Type: Any Settings Property Text Property path. For example, if the input is a single Image the path to the Sex property is Subject.Sex. The paths can be found in the Properties viewer by right-clicking on the property and choosing Copy Property Path. Values: Boolean Array, Boolean Array List, Column, Column List, Contour, Contour List, Image, Image List, List of Lists, Mask, Mask List, Numeric Array, Numeric Array List, Structure, Structure List, Table, Table List, Text, Text List Broadcast Property Boolean Set many values in a list to the same value. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.getset_property.insert_property.html"},
{"title": "Remove Property", "text": "Remove Property Remove a Hero Data item at a specific location in input data. Inputs Input Input Type: Any, List, Required, Single Outputs Output Output Type: Numeric Array Settings Property Text Property Path. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.getset_property.remove_property.html"},
{"title": "Numeric Array Repeater", "text": "Repeater Copies input connection to output. Settings Repeater Description Text The title of the repeater. If used as an input for a group, set value to brief description of expected input type. Sparse Connections Boolean A sparse connection removes the wire between the repeater output and connected nodes, and replaces them with a label displaying the repeater description. This is very useful when you have a large workflow wih many wires. Change Image/Data Name Set New Image/Data Name Boolean Should the image/data get a new name, only applies to Image4D and DataCollection. Misc IOType Text Missing description. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.repeaters.numeric_array_repeater.html"},
{"title": "Numeric Array List Repeater", "text": "Repeater Copies input connection to output. Settings Repeater Description Text The title of the repeater. If used as an input for a group, set value to brief description of expected input type. Sparse Connections Boolean A sparse connection removes the wire between the repeater output and connected nodes, and replaces them with a label displaying the repeater description. This is very useful when you have a large workflow wih many wires. Change Image/Data Name Set New Image/Data Name Boolean Should the image/data get a new name, only applies to Image4D and DataCollection. Misc IOType Text Missing description. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.repeaters.numeric_array_list_repeater.html"},
{"title": "Add", "text": "Add Add two inputs with broadcasting. You can add any two supported inputs of the same type, and numbers can be added to all types. Inputs Upper First input. Type: Column, Image, Numeric Array, List, Required, Single Lower Second input. Type: Column, Image, Numeric Array, List, Optional, Single Outputs Output Resulting sum. The output type is determined by the input types. If one input is an Image or a Column, the output will be an Image or a Column, respectively. If both inputs are Numbers type, the output will be a Numeric Array type. Type: Column, Image, Numeric Array, List Settings Add Value Array Value to add if lower input is not connected. Value Type Selection Specify value type of Value. Values: Integer32, Integer64, Float32, Float64, Complex64, Complex128 Image Settings Metadata Source Selection Select the source for the output metadata. This is only applicable if the output is an image. Values: Upper, Lower Column Settings Column Name Text Set the name of the output column. Broadcast Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Image and Numeric Array. Values: Align Leading Dimensions, Align Trailing Dimensions See also Keywords: ", "tags": "", "url": "nodes.numeric_array.mathematics.add.html"},
{"title": "Subtract", "text": "Subtract Subtract two inputs with broadcasting. You can subtract any two supported inputs of the same type, and numbers can be subtracted from all types. Inputs Upper First input. Type: Column, Image, Numeric Array, List, Required, Single Lower Second input. Type: Column, Image, Numeric Array, List, Optional, Single Outputs Output Resulting subtraction. The output type is determined by the input types. If one input is an Image or a Column, the output will be an Image or a Column, respectively. If both inputs are Numbers type, the output will be a Numeric Array type. Type: Column, Image, Numeric Array, List Settings Subtract Value Array Value to subtract if lower input is not connected. Value Type Selection Specify value type of Value. Values: Integer32, Integer64, Float32, Float64, Complex64, Complex128 Image Settings Metadata Source Selection Select the source for the output metadata. This is only applicable if the output is an image. Values: Upper, Lower Column Settings Column Name Text Set the name of the output column. Broadcast Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Image and Numeric Array. Values: Align Leading Dimensions, Align Trailing Dimensions See also Keywords: ", "tags": "", "url": "nodes.numeric_array.mathematics.subtract.html"},
{"title": "Multiply", "text": "Multiply Multiply two inputs with broadcasting. You can multiply any two supported inputs of the same type, and numbers can be multiplied with all types. Inputs Upper First input. Type: Column, Image, Numeric Array, List, Required, Single Lower Second input. Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Resulting product. The output type is determined by the input types. If one input is an Image or a Column, the output will be an Image or a Column, respectively. If both inputs are Numbers type, the output will be a Numeric Array type. Type: Column, Image, Numeric Array, List Settings Multiply Value Array Value to multiply with if lower input is not connected. Value Type Selection Specify value type of Value. Values: Integer32, Integer64, Float32, Float64, Complex64, Complex128 Image Settings Metadata Source Selection Select the source for the output metadata. This is only applicable if the output is an image. Values: Upper, Lower Column Settings Column Name Text Set the name of the output column. Broadcast Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Image and Numeric Array. Values: Align Leading Dimensions, Align Trailing Dimensions See also Keywords: ", "tags": "", "url": "nodes.numeric_array.mathematics.multiply.html"},
{"title": "Divide", "text": "Divide Divide two inputs with broadcasting. You can divide any two supported inputs of the same type, and numbers can be the divisor or divedend with all types. Inputs Upper Dividend input. Type: Column, Image, Numeric Array, List, Required, Single Lower Divisor input. Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Resulting quotient. The output type is determined by the input types. If one input is an Image or a Column, the output will be an Image or a Column, respectively. If both inputs are Numbers type, the output will be a Numeric Array type. Type: Column, Image, Numeric Array, List Settings Divide Value Array Value to divide with if lower input is not connected. Value Type Selection Specify value type of Value. Values: Integer32, Integer64, Float32, Float64, Complex64, Complex128 Image Settings Metadata Source Selection Select the source for the output metadata. This is only applicable if the output is an image. Values: Upper, Lower Column Settings Column Name Text Set the name of the output column. Broadcast Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Image and Numeric Array. Values: Align Leading Dimensions, Align Trailing Dimensions See also Keywords: ", "tags": "", "url": "nodes.numeric_array.mathematics.divide.html"},
{"title": "From Real/Imag", "text": "Create Complex Create complex number from real and imaginary part Inputs Real Missing description. Type: Column, Image, Numeric Array, List, Required, Single Imag Missing description. Type: Column, Image, Numeric Array, List, Required, Single Outputs Complex Missing description. Type: Image Settings Image Settings Metadata Source Selection Select the source for the output metadata. This is only applicable if the output is an image. Values: Real, Imag Column Settings Column Name Text Set new column name. Broadcast Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Image and Numeric Array. Values: Align Leading Dimensions, Align Trailing Dimensions See also Keywords: ", "tags": "", "url": "nodes.numeric_array.mathematics.complex.from_realimag.html"},
{"title": "From Magnitude and Phase", "text": "Create Complex Create complex valued from magnitude and phase. Inputs Magnitude Missing description. Type: Column, Image, Numeric Array, List, Required, Single Phase Missing description. Type: Column, Image, Numeric Array, List, Required, Single Outputs Complex Missing description. Type: Image Settings Image Settings Metadata Source Selection Select the source for the output metadata. This is only applicable if the output is an image. Values: Magnitude, Phase Column Settings Column Name Text Set new column name. Broadcast Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Image and Numeric Array. Values: Align Leading Dimensions, Align Trailing Dimensions See also Keywords: ", "tags": "", "url": "nodes.numeric_array.mathematics.complex.from_magnitude_and_phase.html"},
{"title": "Conjugate", "text": "Complex Conjugate Computes the complex conjugate of the input: Let \(z = a + bi\). Then the complex conjugate \(z^* =a-bi\). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.mathematics.complex.conjugate.html"},
{"title": "Real", "text": "Real Part Get the real part. Inputs Complex Missing description. Type: Column, Image, Numeric Array, List, Required, Single Outputs Real Real part. Type: Image Settings Column Name Text Set new column name. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.mathematics.complex.real.html"},
{"title": "Imaginary", "text": "Imaginary Part Get the imaginary part. Inputs Complex Complex data. Type: Column, Image, Numeric Array, List, Required, Single Outputs Imag Imaginary part. Type: Image Settings Column Name Text Set new column name. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.mathematics.complex.imaginary.html"},
{"title": "Magnitude", "text": "Magnitude Get the magntiude. Inputs Complex Complex data. Type: Column, Image, Numeric Array, List, Required, Single Outputs Magnitude Magnitude of the input. Type: Image Settings Column Name Text Set new column name. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.mathematics.complex.magnitude.html"},
{"title": "Phase", "text": "Phase Part Get the phase part of a number. Inputs Complex Complex data. Type: Column, Image, Numeric Array, List, Required, Single Outputs Phase Phase of the input. Type: Image Settings Column Name Text Set new column name. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.mathematics.complex.phase.html"},
{"title": "Sum of List Elements", "text": "Sum Sum all images in a list elementwise with broadcasting. Inputs In Input list. Type: Image, Mask, Column, List, Required, Single Outputs Out Output sum. Type: Image, Mask, Column Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Image and Numeric Array. Values: Align Leading Dimension, Align Trailing Dimension Metadata From Element Integer Select the source for the output metadata. This is only applicable if the output is an image. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.mathematics.sum_of_list_elements.html"},
{"title": "Product of List Elements", "text": "Product Multiply all images in a list elementwise with broadcasting. Inputs In Input list. Type: Image, Mask, Column, List, Required, Single Outputs Out Output sum. Type: Image, Mask, Column Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Image and Numeric Array. Values: Align Leading Dimension, Align Trailing Dimension Metadata From Element Integer Select the source for the output metadata. This is only applicable if the output is an image. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.mathematics.product_of_list_elements.html"},
{"title": "Square Root", "text": "Square Root Elementwise square root. Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.mathematics.algebraic_functions.square_root.html"},
{"title": "Square", "text": "Square Elementwise square. Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.mathematics.algebraic_functions.square.html"},
{"title": "Reciprocal", "text": "Reciprocal Elementwise reciprocal. Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.mathematics.algebraic_functions.reciprocal.html"},
{"title": "Sign", "text": "Sign Gives the sign for each element in input, i.e. -1 for negative values and 1 for positive. Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.mathematics.algebraic_functions.sign.html"},
{"title": "Negate", "text": "Negate Elementwise negate. Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.mathematics.algebraic_functions.negate.html"},
{"title": "Absolute Value", "text": "Absolute Value Elementwise absolute value. Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.mathematics.algebraic_functions.absolute_value.html"},
{"title": "Sin", "text": "Sin Elementwise sin(). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.mathematics.trigonometric_functions.sin.html"},
{"title": "Cos", "text": "Cos Elementwise cos(). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.mathematics.trigonometric_functions.cos.html"},
{"title": "Tan", "text": "Tan Elementwise tan(). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.mathematics.trigonometric_functions.tan.html"},
{"title": "Asin", "text": "Asin Elementwise asin(). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.mathematics.trigonometric_functions.asin.html"},
{"title": "Acos", "text": "Acos Elementwise acos(). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.mathematics.trigonometric_functions.acos.html"},
{"title": "Atan", "text": "Atan Elementwise atan(). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.mathematics.trigonometric_functions.atan.html"},
{"title": "Sinh", "text": "Sinh Elementwise sinh(). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.mathematics.trigonometric_functions.sinh.html"},
{"title": "Cosh", "text": "Cosh Elementwise cosh(). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.mathematics.trigonometric_functions.cosh.html"},
{"title": "Tanh", "text": "Tanh Elemenwise tanh(). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.mathematics.trigonometric_functions.tanh.html"},
{"title": "Asinh", "text": "Asinh Elementwise asinh(). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.mathematics.trigonometric_functions.asinh.html"},
{"title": "Acosh", "text": "Acosh Elementwise acosh(). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.mathematics.trigonometric_functions.acosh.html"},
{"title": "Atanh", "text": "Atanh Elementwise atanh(). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.mathematics.trigonometric_functions.atanh.html"},
{"title": "Exp", "text": "Exp Exp() of each element of input, i.e. if input is \(x\), result is \(e^x\). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.mathematics.exponential_functions.exp.html"},
{"title": "2ˣ", "text": "Pow(2,·) 2^() of each element of input, i.e. if input is \(x\), result is \(2^x\). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.mathematics.exponential_functions.2ˣ.html"},
{"title": "10ˣ", "text": "Pow(10,·) 10^() of each element of input, i.e. if input is \(x\), result is \(10^x\). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.mathematics.exponential_functions.10ˣ.html"},
{"title": "Raise to Power", "text": "Raise to Power Raise each element \(A_i\) in the Upper input to the power of the element value in the Lower input \(B_{i}\) \[ \begin{equation} R_i = A_i^{B_{i}} \label{eq:sample} \end{equation} \] You can use any two supported inputs of the same type, and numbers can be the base or exponent with all types. Inputs Upper Base input. Type: Column, Image, Numeric Array, List, Required, Single Lower Exponent input. Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Resulting power. The output type is determined by the input types. If one input is an Image or a Column, the output will be an Image or a Column, respectively. If both inputs are Numbers type, the output will be a Numeric Array type. Type: Column, Image, Numeric Array, List Settings Exponent Value Array Exponent value if Lower input is not connected. Value Type Selection Specify value type of Value. Values: Integer32, Integer64, Float32, Float64, Complex64, Complex128 Image Settings Metadata Source Selection Select the source for the output metadata. This is only applicable if the output is an image. Values: Upper, Lower Column Settings Column Name Text Set the name of the output column. Broadcast Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Image and Numeric Array. Values: Align Leading Dimensions, Align Trailing Dimensions See also Keywords: ", "tags": "", "url": "nodes.numeric_array.mathematics.exponential_functions.raise_to_power.html"},
{"title": "Log", "text": "Log ln() of each element of input, i.e. if input is \(x\), result is \(\ln(x)\). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.mathematics.exponential_functions.log.html"},
{"title": "Log10", "text": "Log10 log() of each element of input, i.e. if input is \(x\), result is \(\log(x)\). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.mathematics.exponential_functions.log10.html"},
{"title": "Erf", "text": "Erf Computes the error function (Gauss error function) of each element of the input. Defined as \(erf(x) = \frac{2}{\sqrt{\pi}}\int_0^x e^{-t^2}dt\). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.mathematics.special_functions.erf.html"},
{"title": "Erfc", "text": "Erfc Computes the complementary error function of each element of the input. Defined as \(erfc(x) = 1 - erf(x)\). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.mathematics.special_functions.erfc.html"},
{"title": "Inverse Erf", "text": "Inverse Erf The inverse error function \(erf^{-1}(x)\) of each element in the input. Defined by the error function \(erf(x)\) such that \(x = erf^{-1}(erf(x)) = erf(erf^{-1}(x))\). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.mathematics.special_functions.inverse_erf.html"},
{"title": "Round", "text": "Round Rounds numerical values to the specified number of decimal places. Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Settings Column Name Text Set the name of the output column. Round Decimals Integer Set the number of decimals in the output. The default is 0, which will return integer values. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.mathematics.round.html"},
{"title": "Ceiling", "text": "Ceiling Rounds each element value to the closest, larger integer. Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.mathematics.ceiling.html"},
{"title": "Floor", "text": "Floor Rounds each element value to the closest, smaller integer. Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.mathematics.floor.html"},
{"title": "Fraction", "text": "Fraction Elementwise fraction part of input, i.e. the remainder after a floor operation, e.g. if an input element is \(12.23\) the output will be \(0.23\). Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Result(s). Type: Column, Image, Numeric Array, List Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.mathematics.fraction.html"},
{"title": "Remainder", "text": "Remainder Calculate the elementwise remainder with broadcasting. The remainder is the amount &ldquo;left over&rdquo; after performing elementwise division, i.e. the remainder of \(\frac{5}{2}=1\). Inputs Upper The dividend. Type: Column, Image, Numeric Array, List, Required, Single Lower The divisor. Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Resulting remainder. The output type is determined by the input types. If one input is an Image or a Column, the output will be an Image or a Column, respectively. If both inputs are Numbers type, the output will be a Numeric Array type. Type: Column, Image, Numeric Array, List Settings Divisor Value Array Value to divide with if lower input is not connected. Value Type Selection Specify value type of Value. Values: Integer32, Integer64, Float32, Float64, Complex64, Complex128 Image Settings Metadata Source Selection Select the source for the output metadata. This is only applicable if the output is an image. Values: Upper, Lower Column Settings Column Name Text Set the name of the output column. Broadcast Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Image and Numeric Array. Values: Align Leading Dimensions, Align Trailing Dimensions See also Keywords: ", "tags": "", "url": "nodes.numeric_array.mathematics.remainder.html"},
{"title": "Is NaN", "text": "Is NaN Elementwise check if NaN. Gives TRUE output if element is NaN. Inputs Input Input. Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Output depends on input. Input Column gives output Column, input Image yields output Mask and input Numeric Array gives output Boolean Array. Type: Column, Mask, Boolean Array, List, Required, Single Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.mathematics.is_nan.html"},
{"title": "Is Inf", "text": "Is Inf Elementwise check if infinite. Gives TRUE output if element is infinite. Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Output depends on input. Input Column gives output Column, input Image yields output Mask and input Numeric Array gives output Boolean Array. Type: Column, Mask, Boolean Array, List, Required, Single Settings Configure Infinity Type Selection Set to check for positive or negative infinity (or both). Values: +Inf or -Inf, +Inf, -Inf Column Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.mathematics.is_inf.html"},
{"title": "Is Finite", "text": "Is Finite Elementwise check if not NaN or Inf. Gives TRUE output if element is not NaN or infinite. Inputs Input Input. Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Output depends on input. Input Column gives output Column, input Image yields output Mask and input Numeric Array gives output Boolean Array. Type: Column, Mask, Boolean Array, List, Required, Single Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.mathematics.is_finite.html"},
{"title": "Set Non-finite", "text": "Set Non-finite Set inf and NaN values to real values. Inputs Input Input. Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Output. Type: Column, Image, Numeric Array, List Settings Configure NaN Float Set value to replace NaN values with. +Inf Float Set value to replace positive infitity values with. -Inf Float Set value to replace negative infitity values with. Column Settings Column Name Text Set the name of the output column. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.mathematics.set_non-finite.html"},
{"title": "Normalize", "text": "Normalize Performs linear normalization of input data to fit within a specified intensity range. The function is defined by the following equation: \[ \begin{equation} V_{norm} = (V-\text{min}(V))\frac{\text{max}_{norm}-\text{min}_{norm}}{\text{max}(V)-\text{min}(V)}+\text{min}_{norm} \label{eq:normalize} \end{equation} \] Parameters and Definitions \(V\): The input values to be normalized. \(V_{norm}\): The result after normalization. \(\text{min}(V)\): The minimum value found in the input data. \(\text{max}(V)\): The maximum value found in the input data. \(\text{min}_{norm}\) and \(\text{max}_{norm}\): These define the desired range for the normalized output. For example, setting \(\text{min}_{norm}\) = 0 and \(\text{max}_{norm}\) = 1 would scale all input values to fall within the range of 0 to 1. For image inputs, the \(\text{min}(V)\) and \(\text{max}(V)\) values can be taken from the entire ND-image, the 3D-volume or on a slice-by-slice basis. If complex data is supplied, the real and imaginary parts are normalized independently. Inputs Input Input. Type: Numeric Array, Column, List, Required, Single Outputs Output Output. Type: Numeric Array, Column, List Settings Normalize Selection Set how to perform the normalization: Per Slice normalizes each slice separately, Per Volume normalizes each 3D-volume separatly and Entire Image normalizes the entire ND-image. Values: Per Slice, Per Volume, Entire Image Min Float Defines the lowest possible value in the output. All normalized values are scaled such that the smallest value aligns with this minimum value. Max Float Defines the highest possible value in the output. During normalization, the largest value is scaled to match this value. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.mathematics.normalize.html"},
{"title": "Z-Normalize", "text": "Z-Normalize Normalizes input using the z-score (or standard score). It is calculated by subtracting the mean and then dividing the difference by the standard deviation. For Image inputs, the mean and standard deviation can be calculated from the entire ND-image, per 3D-volume or per slice. The standard deviation \(s\) is computed using \[ s = \sqrt{\frac{1}{N-1}\sum_ {i=1}^N{(x_i-\bar{x})(x_i-\bar{x})^{*}}} \] where \(x_i\) are individual data points, \(N\) is the total numer of data ponts, \(\bar{x}\) is the sample mean, and \(^*\) is the complex conjugate which only affects complex data. Inputs Input Input. Type: Numeric Array, Column, List, Required, Single Outputs Output Output, the same type as the input. Type: Numeric Array, Column, List Settings Normalize Selection Set how to perform the normalization: Per Slice normalizes each slice separately Per Volume normalizes each 3D-volume separatly Entire Image normalizes the entire ND-image. Values: Per Slice, Per Volume, Entire Image See also Keywords: ", "tags": "", "url": "nodes.numeric_array.mathematics.z-normalize.html"},
{"title": "Sigmoid", "text": "Sigmoid Computes the sigmoid function element-wise. A linear transformation is applied first on the argument of the sigmoid function. The resulting total transform is given by \(f(x) = (Max-Min) * \dfrac{1}{1+e^{-(x - \beta) / \alpha }} + Min\) Every output element is equal to f(x), where x is the intensity of the homologous input element, and alpha and beta are user-provided constants. Consider an exampel of an image. The \(\beta\) value can be thought of the offset on the pixel value that you are trying to isolate. E.g., if the object you are trying to isolate is at a pixel intensity above 150, you would choose a \(\beta\) value that is around that value. The \(\alpha\) value can be thought of as the scaling or variance of the sigmoid. Lower \(\alpha\) values will make the pixel range of your intensity sharper. Your \(\alpha\) value would decide how much of the noise you would want to include in your transformation. Smaller \(\alpha\) values (0.25, 0.5) would zero out most of the noise, but it might make your actual signal thicker and not specific enough. Conversely, larger alpha values (e.g. 3+) might have a smoother signal but might include more noise. Negative alpha values can be thought of as using a positive alpha value and then inverting the image. Inputs Input Input. Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Output. Type: Column, Image, Numeric Array, List Settings Configure Alpha Float Alpha parameter. Low values cancel noise, but makes signal thicker. Negative values inverts image. Beta Float Beta parameter. Set to ~the pixel value you want to isolate. Min Float Output min value. Max Float Output max value. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.mathematics.sigmoid.html"},
{"title": "Clip", "text": "Clip The input value range is limited between a specified minimum and maximum value as defined in the settings. The limits can be set explicitly, or as percentiles of the input. Any values outside of this range will be set to the closest limit. Inputs Input Input Type: Column, Image, Mask, Required, Single Outputs Output Output image Type: Image Settings Clip Min Value Float Minimum value in the output. Max Value Float Maximum value in the output. Min Percentile [%] Float Minimum value in the output is set as a percentile of the input. Max Percentile [%] Float Maximum value in the output is set as a percentile of the input. Configure Set NaN Float Assign NaN values to this number. Bounds definition Selection Choose whether to set the minimum and maximum values explicitly or as percentiles of the input. Values: Explicit, Percentiles Return Bounds Boolean Return the min and max values of the output. This can be useful when percentiles have been used to define the bounds. Column Settings Column Name Text Set output column name. See also Keywords: truncate, clamp ", "tags": "", "url": "nodes.numeric_array.mathematics.clip.html"},
{"title": "Union Set", "text": "Union Set This node combines multiple numeric arrays or lists into one numeric array, containing all unique numerical values from the inputs. For a single input numeric array input, this node is equivalent of finding all distinct values in the input. The output arrat is sorted from lowest to highest values of the inputs. Inputs Input One or more numeric array or numeric array lists. Type: Numeric Array List, Required, Multiple Outputs Output A numeric array containing all unique numerical values from the inputs. Type: Numeric Array Settings Broadcast over Lists Boolean When set to TRUE, the node processes each element in the input list individually and returns a list of results. When set to FALSE, the node processes all numeric arrays found in the input lists together and returns a single numeric array as the result. See also Keywords: Union, unique, distinct ", "tags": "", "url": "nodes.numeric_array.mathematics.union_set.html"},
{"title": "Intersection Set", "text": "Intersection Set This node takes one or more numeric arrays or numeric array lists, and returns a numeric array containing only the shared numerical values present in all inputs.T he output array is sorted from lowest to highest values of the inputs. Inputs Input One or more numeric array or numeric array lists Type: Numeric Array List, Required, Multiple Outputs Output A numeric array containing only the shared numerical values present in all inputs. Type: Numeric Array Settings Broadcast over Lists Boolean When set to TRUE, the node processes each element in the input list individually and returns a list of results. When set to FALSE, the node processes all numeric arrays found in the input lists together and returns a single numeric array as the result. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.mathematics.intersection_set.html"},
{"title": "Expression", "text": "Math Expression Evaluate a numeric expression from zero or more inputs. The inputs can be images, masks, numeric arrays or boolean arrays. Inputs x1 Input variable to the expression. Type: Image List, Mask List, Numeric Array List, Boolean Array List Outputs Y Resulting value. Type: Image Settings Expression Y = Text Define the mathematical expression. Valid operations include, arithmetic operations: +-*/, algebraic functions: pow(a,b) to raise a to the power of b, sqrt() trigonometric functions: sin(), cos(), tan(), asin(), acos(), atan() hyperbolic functions: sinh() cosh(), tanh(), asinh(), acosh(), atanh() exponential and logarithmic functions: exp(), log(), log10() Add Variable Button Add a new varaible as an input Add SubExpression Button Create a subexpression. This can be useful when you want to simplify the final expression by creating subexpressions that can be used as variables. Configure Output Type Selection Define the output type manually. Values: Image, Image List, Mask, Mask List, Numeric Array, Numeric Array List, Boolean Array, Boolean Array List Metadata From Selection Assign from which input the output image or mask should inherit the metadata. Values: None Broadcasting Selection Define how broadcasting should be performed. Values: Align Leading Dimensions, Align Trailing Dimensions Variable: x1 Variable Name Text Set or change the variable name. Remove Variable Button Remove variable. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.mathematics.expression.html"},
{"title": "Sort", "text": "Sort Sort a Table, Column or Numeric Array alphabetically or numerically depending on input. Inputs Input Input Table, Column or Numeric Array. Type: Table, Column, Numeric Array, List, Required, Single Outputs Output Output Table, Column or Numeric Array. Type: Table, Column, Numeric Array, List Settings Order Selection Sorting order. Values: Ascending, Descending Select Sorting Column By Selection If input is a Table, select the column to sort by using either column Name or Index. Values: Index, Name Column Index Integer Select column index to sort by. Column Name Text Select column name to sort by. Along Dimension Integer If input is a Numeric Array, select along which dimension to sort. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.mathematics.sort.html"},
{"title": "FFT", "text": "FFT Perform forward discrete Fourier transform along selected dimensions using the Fast Fourier Transform (FFT) algorithm. The (non-centered) forward discrete Fourier transform along a specific dimension is defined as \(X(...,k ,...) = Z \cdot \sum_{j=0}^{n-1} x(..., j, ...) e^{-i2\pi kj/n}\), where \(Z\) is a normalization constant. Inputs Input Input(s) Type: Image, Numeric Array, List, Required, Single Outputs Output Output(s) Type: Image, Numeric Array Settings Centered Boolean True if the center of the frequency spectrum is placed at the center index. I.e. \(c = N - \lfloor N/2 \rfloor\). Otherwise the center frequency will be placed at the 0 index. Dimensions Integers The dimensions over which the FFT is performed. Normalization Selection The type of normalization: Ortho - Make the Fourier transform unitary. Sets the scaling factor \(Z = \frac{1}{\sqrt{n}}\). Backward Sets the scaling factor \(Z = 1\). Forward Sets the scaling factor \(Z = \frac{1}{n}\). Values: Ortho (1/sqrt(n)), Backward (None), Forward (1/n) See also IFFT, FFT Shift, IFFT Shift Keywords: ", "tags": "", "url": "nodes.numeric_array.mathematics.fft.fft.html"},
{"title": "IFFT", "text": "IFFT Perform inverse discrete Fourier transform along selected dimensions using the Fast Fourier Transform (FFT) algorithm. The (non-centered) inverse discrete Fourier transform along a specific dimension is defined as \(X(...,k ,...) = Z \cdot \sum_{j=0}^{n-1} x(..., j, ...) e^{i2\pi kj/n}\), where \(Z\) is a normalization constant. Inputs Input Input(s) Type: Image, Numeric Array, List, Required, Single Outputs Output Output(s) Type: Image, Numeric Array Settings Centered Boolean True if the center of the frequency spectrum is placed at the center index. I.e. \(c = N - \lfloor N/2 \rfloor\). Otherwise the center frequency will be placed at the 0 index. Dimensions Integers The dimensions over which the FFT is performed. Normalization Selection Ortho - Make the Fourier transform unitary. Sets the scaling factor \(Z = \frac{1}{\sqrt{n}}\). Backward Sets the scaling factor \(Z = \frac{1}{n}\). Forward Sets the scaling factor \(Z = 1\). Values: Ortho (1/sqrt(n)), Backward (None), Forward (1/n) See also FFT, FFT Shift, IFFT Shift Keywords: ", "tags": "", "url": "nodes.numeric_array.mathematics.fft.ifft.html"},
{"title": "FFT Shift", "text": "FFT Shift Swaps the half-spaces for all selected dimension. Inputs Input Input(s) Type: Image, Numeric Array, List, Required, Single Outputs Output Output(s) Type: Image, Numeric Array Settings Dimensions Integers Dimensions over which to swap half-spaces. See also FFT, IFFT, IFFT Shift Keywords: ", "tags": "", "url": "nodes.numeric_array.mathematics.fft.fft_shift.html"},
{"title": "IFFT Shift", "text": "IFFT Shift Swaps the half-spaces for all selected dimension. Identical to FFT shift except how it treats odd size dimensions. Inputs Input Input(s) Type: Image, Numeric Array, List, Required, Single Outputs Output Output(s) Type: Image, Numeric Array Settings Dimensions Integers Dimensions over which to swap half-spaces. See also FFT, IFFT, FFT Shift Keywords: ", "tags": "", "url": "nodes.numeric_array.mathematics.fft.ifft_shift.html"},
{"title": "Equal", "text": "Equal Elementwise compare inputs with broadcasting. If input elements are equal, the output element is TRUE. You can compare any supported inputs to inputs of the same type, and also Mask to Bits, Image to Numbers and Column to Numeric Array and Boolean Array. Inputs Upper First input. Type: Mask, Column, Image, Numeric Array, Boolean Array, List, Required, Single Lower Second input. Type: Mask, Column, Image, Numeric Array, Boolean Array, List, Optional, Single Outputs Output Output. The output depends on the input. An Image input gives an Image output, a Mask input gives a Mask output and a Column input gives a Column output, regardless of the second input type. Two Numbers inputs gives Numeric Array output and two Bits inputs gives Boolean Array output. Type: Mask, Column, Image, Numeric Array, Boolean Array, List Settings Equal Value Array Value to compare the first input to. Only valid if the optional input is not connected. Value Type Selection Value type of the Value setting. Values: Boolean, Integer32, Integer64, Float32, Float64, Complex64, Complex128 Image Settings Metadata Source Selection Select the source for the output metadata. This is only applicable if the output is an Image or a Mask. Values: Upper, Lower Column Settings Column Name Text Set the name of the output column. Broadcast Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Image and Numeric Array. Values: Align Leading Dimensions, Align Trailing Dimensions See also Keywords: ", "tags": "", "url": "nodes.numeric_array.compare.equal.html"},
{"title": "Not Equal", "text": "Not Equal Elementwise compare inputs with broadcasting. If input elements are not equal, the output element is TRUE. You can compare any supported inputs to inputs of the same type, and also Mask to Bits, Image to Numbers and Column to Numeric Array and Boolean Array. Inputs Upper First input. Type: Mask, Column, Image, Numeric Array, Boolean Array, List, Required, Single Lower Second input. Type: Mask, Column, Image, Numeric Array, Boolean Array, List, Required, Single Outputs Output Output. The output depends on the input. An Image input gives an Image output, a Mask input gives a Mask output and a Column input gives a Column output, regardless of the second input type. Two Numbers inputs gives Numeric Array output and two Bits inputs gives Boolean Array output. Type: Mask, Column, Image, Numeric Array, Boolean Array, List Settings Value Value Array Value to compare the first input to. Only valid if the optional input is not connected. Value Type Selection Value type of the Value setting. Values: Boolean, Integer32, Integer64, Float32, Float64, Complex64, Complex128 Image Settings Metadata Source Selection Select the source for the output metadata. This is only applicable if the output is an Image or a Mask. Values: Upper, Lower Column Settings Column Name Text Set the name of the output column. Broadcast Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Image and Numeric Array. Values: Align Leading Dimensions, Align Trailing Dimensions See also Keywords: ", "tags": "", "url": "nodes.numeric_array.compare.not_equal.html"},
{"title": "Less Than", "text": "Less Than Elementwise compare inputs with broadcasting. If Upper input elements are less than Lower input elements, the output element is TRUE. You can compare any supported inputs to inputs of the same type, and any input element to Numeric Array. Inputs Upper First input. Type: Column, Image, Numeric Array, List, Required, Single Lower Second input. Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Output. The output type is determined by the input types. If one input is an Image or a Column, the output will be an Image or a Column, respectively. If both inputs are Numbers type, the output will be a Numeric Array type. Type: Column, Image, Numeric Array, List Settings Value Value Array Value to compare the first input to. Only valid if the optional input is not connected. Value Type Selection Value type of the Value setting. Values: Integer32, Integer64, Float32, Float64 Image Settings Metadata Source Selection Select the source for the output metadata. This is only applicable if the output is an image. Values: Upper, Lower Column Settings Column Name Text Set the name of the output column. Broadcast Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Image and Numeric Array. Values: Align Leading Dimensions, Align Trailing Dimensions See also Keywords: ", "tags": "", "url": "nodes.numeric_array.compare.less_than.html"},
{"title": "Less Than or Equal", "text": "Less Than or Equal Elementwise compare inputs with broadcasting. If Upper input elements are less than or equal Lower input elements, the output element is TRUE. You can compare any supported inputs to inputs of the same type, and any input element to Numeric Array. Inputs Upper First input. Type: Column, Image, Numeric Array, List, Required, Single Lower Second input. Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Output. The output type is determined by the input types. If one input is an Image or a Column, the output will be an Image or a Column, respectively. If both inputs are Numbers type, the output will be a Numeric Array type. Type: Column, Image, Numeric Array, List Settings Value Value Array Value to compare the first input to. Only valid if the optional input is not connected. Value Type Selection Value type of the Value setting. Values: Integer32, Integer64, Float32, Float64 Image Settings Metadata Source Selection Select the source for the output metadata. This is only applicable if the output is an image. Values: Upper, Lower Column Settings Column Name Text Set the name of the output column. Broadcast Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Image and Numeric Array. Values: Align Leading Dimensions, Align Trailing Dimensions See also Keywords: ", "tags": "", "url": "nodes.numeric_array.compare.less_than_or_equal.html"},
{"title": "Greater Than", "text": "Greater Than Elementwise compare inputs with broadcasting. If Upper input elements are greater than Lower input elements, the output element is TRUE. You can compare any supported inputs to inputs of the same type, and any input element to Numbers. Inputs Upper First input. Type: Column, Image, Numbers, List, Required, Single Lower Second input. Type: Column, Image, Numbers, List, Required, Single Outputs Output Output. The output type is determined by the input types. If one input is an Image or a Column, the output will be an Image or a Column, respectively. If both inputs are Numbers type, the output will be a Numbers type. Type: Column, Image, Numbers, List Settings Value Value Array Value to compare the first input to. Only valid if the optional input is not connected. Value Type Selection Value type of the Value setting. Values: Integer32, Integer64, Float32, Float64 Image Settings Metadata Source Selection Select the source for the output metadata. This is only applicable if the output is an image. Values: Upper, Lower Column Settings Column Name Text Set the name of the output column. Broadcast Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Image and Numbers. Values: Align Leading Dimensions, Align Trailing Dimensions See also Keywords: ", "tags": "", "url": "nodes.numeric_array.compare.greater_than.html"},
{"title": "Greater Than or Equal", "text": "Greater Than or Equal Elementwise compare inputs with broadcasting. If Upper input elements are greater than or equal to Lower input elements, the output element is TRUE. You can compare any supported inputs to inputs of the same type, and any input element to Numbers. Inputs Upper First input. Type: Column, Image, Numbers, List, Required, Single Lower Second input. Type: Column, Image, Numbers, List, Required, Single Outputs Output Output. The output type is determined by the input types. If one input is an Image or a Column, the output will be an Image or a Column, respectively. If both inputs are Numbers type, the output will be a Numbers type. Type: Column, Image, Numbers, List Settings Value Value Array Value to compare the first input to. Only valid if the optional input is not connected. Value Type Selection Value type of the Value setting. Values: Integer32, Integer64, Float32, Float64 Image Settings Select the source for the output metadata. This is only applicable if the output is an image. Values: Upper, Lower Column Settings Column Name Text Set the name of the output column. Broadcast Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Image and Numbers. Values: Align Leading Dimensions, Align Trailing Dimensions See also Keywords: ", "tags": "", "url": "nodes.numeric_array.compare.greater_than_or_equal.html"},
{"title": "Split", "text": "Split Split a Numeric Array or Boolean Array along a specific dimension into blocks of a predefined size, and return result as a list. Example 1 Return all slices of a 3D array in a list: Split Along: 2, Block Size: 1 Example 2 Split 4D array with [i,j,k,60] into a list with 12 elements with 5 arrays each: Split Along: [3], Block Size: 5 Inputs Input Input Numeric Array or Boolean Array. Type: Numeric Array, Boolean Array, List, Required, Single Outputs Output Output Numeric Array, Boolean Array or List Of Lists. Type: Type: Numeric Array, Boolean Array, List Of Lists, List Settings Split along Dimension Integer Specify the index of the dimension which you want to split along. Block Size Integer Specify the block size along the split dimension. Squeeze Boolean Remove singleton dimensions. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.reshape.split.html"},
{"title": "Stack", "text": "Stack Stack Numeric Arrays or Boolean Arrays along a specific dimension. All inputs must share the same shape along all dimensions except the stacking dimension. Inputs Input 0 Input Numeric Arrays or Boolean Arrays. Type: Numeric Array, Boolean Array, List, Required, Single Outputs Array Output Numeric Arrays or Boolean Arrays. Type: Numeric Array, Boolean Array, Required, Single Settings New Dimension Boolean Select if you want to create a new dimension. Stack Along Dimension Integer Index of the dimension stack along. If New Dimension is selected, the index can be 1 more than existing dimensions, otherwise it must be an existing dimension. List Handling Selection Define if multiple lists should be stacked to one output, or if list element should be broadcasted. Example: Input 0 is an image, Input 1 is a list of 3 images. If Stack is selected, the node will stack all four images to one output image. If Broadcast is selected, the node will return a list of 3 elements where element 0 is Input 0 stacked with element 0 of Input 1, element 1 is Input 0 stacked with element 1 of Input 1, and element 2 is Input 0 stacked with element 2 of Input 1. Values: Stack, Broadcast See also Keywords: ", "tags": "", "url": "nodes.numeric_array.reshape.stack.html"},
{"title": "Flip", "text": "Flip Reverses the input Numeric Array matrix along the specified dimension. Inputs Input Input Numeric Array. Type: Numeric Array, Boolean Array, List, Required, Single Outputs Output Output Numeric Array. Type: Numeric Array, Boolean Array, List, Settings Dimensions to Flip Integers Input indeces of the dimension to flip. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.reshape.flip.html"},
{"title": "Pad/Crop", "text": "Pad/Crop Pad or crop an input Numeric Array or Boolean Array. Inputs Input Input Numeric Array or Boolean Array. Type: Numeric Array, Boolean Array, List, Required, Single Outputs Output Output Numeric Array or Boolean Array. Type: Numeric Array, Boolean Array, List Settings New Size Integers Set output size. The result will be symmetrically padded or cropped in each dimension. Extrapolation Value Complex Number Extrapolation value used for array elements added with padding. Method Selection Select the padding method. Centered pads or crops symmetrically at the beginning and end of each affected dimension, Corner pads or crops at the end of each affected dimension. Values: Centered, Corner See also Keywords: ", "tags": "", "url": "nodes.numeric_array.reshape.padcrop.html"},
{"title": "Insert Dimension", "text": "Insert Dimension Insert a single dimension in an input Numeric Array or Boolean Array. Inputs Input Input Numeric Array or Boolean Array. Type: Numeric Array, Boolean Array, List, Required, Single Outputs Output Input Numeric Array or Boolean Array. Type: Numeric Array, Boolean Array, List, Settings Insert Dimension At Integer Specify index of where to insert the new dimension. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.reshape.insert_dimension.html"},
{"title": "Reshape", "text": "Reshape Reshape the dimensions of an input Numeric Array or Boolean Array. The number of volumes in the output must match the number of volumes in the input. Example: Input with shape [3, 4] can be reshaped to e.g. [4, 3], [2, 6] or [1, 12] but not to [3, 6]. Inputs Input Input Numeric Array or Boolean Array. Type: Numeric Array, Boolean Array, List, Required, Single Outputs Output Output Numeric Array or Boolean Array. Type: Numeric Array, Boolean Array, List Settings New Shape Integers New shape. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.reshape.reshape.html"},
{"title": "Expand", "text": "Expand Expand the number of dimensions in an input numeric or boolean array by broadcasting. The existing channel shapes cannot be changed using this node. Example: Input with shape [3, 2] can be expanded to shape [3, 2, 6], or [3, 2, 15, 4], or any arbitrary shape as long as the existing channels are not changed. Inputs Input Input array(s). Type: Numeric Array, Boolean Array, List, Required, Single Outputs Output Output array(s). Type: Numeric Array, Boolean Array, List Settings New Shape Integers Input new shape. Broadcasting Selection Select how to align the input data for broadcasting. Values: Align Leading Dimensions, Align Trailing Dimensions See also Keywords: ", "tags": "", "url": "nodes.numeric_array.reshape.expand.html"},
{"title": "Squeeze Dimensions", "text": "Squeeze Dimensions Remove singleton dimensions from a Numeric Array or Boolean Array, i.e. dimensions with 1 element. Example 1: An input with shape [1, 3, 1] will have a new shape of [3] if all singleton dimensions are squeezed. Example 2: An input with shape [1, 3, 1] will have a new shape of [3, 1] if only dimension [0] is squeezed. Inputs Input Input Numeric Array or Boolean Array. Type: Numeric Array, Boolean Array, List, Required, Single Outputs Output Output Numeric Array or Boolean Array. Type: Numeric Array, Boolean Array, List Settings Type Selection Select if all or specific singleton dimensions should be removed. Values: All, Specific Dimensions to Squeeze Integers Select specific singleton dimension indices that will be removed. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.reshape.squeeze_dimensions.html"},
{"title": "Permute", "text": "Permute Permute the dimensions of an input Numeric Array or Boolean Array. This operation reorders the input matrix as defined by the permutation setting. Inputs Input Input Numeric Array or Boolean Array. Type: Numeric Array, Boolean Array, List, Required, Single Outputs Output Output Numeric Array or Boolean Array. Type: Numeric Array Settings New Order Integers Specify the order of the dimensions of the output. If the input is [i,j,k] and you want to output [j,i,k], specify [1,0,2]. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.reshape.permute.html"},
{"title": "Sum", "text": "Sum Reduce a numeric array using the sum over all dimensions (reducing the array to a number, i.e. sum of all voxels), a dimension. Inputs Input Input Numeric Array(s) Type: Numeric Array, List, Required, Single Outputs Output Output. Type: Numeric Array, List Settings Projection Along Selection Select over which dimension to reduce, All will reduce the array to a number, or choose a Dimension. Values: All, Dimension Dimension Integer Specify which dimension to reduce over. Keep Dimension Boolean If selected, the dimension which was reduced will be kept as a singleton dimension. E.g. if you have a numeric array with dimensions [i, j, k, c] and select Keep Dimension, the output will be [i, j, k, 1], otherwise it will be [i, j, k]. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.projection.sum.html"},
{"title": "Mean", "text": "Mean Reduce a numeric array using the mean value over all dimensions (reducing the array to a number, i.e. sum of all voxels), a dimension. Inputs Input Input Numeric Array(s) Type: Numeric Array, List, Required, Single Outputs Output Output. Type: Numeric Array, List Settings Projection Along Selection Select over which dimension to reduce, All will reduce the array to a number, or choose a Dimension. Values: All, Dimension Dimension Integer Specify which dimension to reduce over. Keep Dimension Boolean If selected, the dimension which was reduced will be kept as a singleton dimension. E.g. if you have a numeric array with dimensions [i, j, k, c] and select Keep Dimension, the output will be [i, j, k, 1], otherwise it will be [i, j, k]. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.projection.mean.html"},
{"title": "Standard Deviation", "text": "Standard Deviation Reduce a numeric array using the standard deviation over all dimensions (reducing the array to a number, i.e. sum of all voxels) or a selected dimension. Inputs Input Input Numeric Array(s) Type: Numeric Array, List, Required, Single Outputs Output Output. Type: Numeric Array, List Settings Projection Along Selection Select over which dimension to reduce, All will reduce the array to a number, or choose a Dimension. Values: All, Dimension Dimension Integer Specify which dimension to reduce over. Keep Dimension Boolean If selected, the dimension which was reduced will be kept as a singleton dimension. E.g. if you have a numeric array with dimensions [i, j, k, c] and select Keep Dimension, the output will be [i, j, k, 1], otherwise it will be [i, j, k]. Unbiased Boolean Use Bessel's correction for an unbiased estimation of the standard deviation. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.projection.standard_deviation.html"},
{"title": "Variance", "text": "Variance Reduce a numeric array using the variance over all dimensions (reducing the array to a number, i.e. sum of all voxels), a dimension. Inputs Input Input Numeric Array(s) Type: Numeric Array, List, Required, Single Outputs Output Output. Type: Numeric Array, List Settings Projection Along Selection Select over which dimension to reduce, All will reduce the array to a number, or choose a Dimension. Values: All, Dimension Dimension Integer Specify which dimension to reduce over. Keep Dimension Boolean If selected, the dimension which was reduced will be kept as a singleton dimension. E.g. if you have a numeric array with dimensions [i, j, k, c] and select Keep Dimension, the output will be [i, j, k, 1], otherwise it will be [i, j, k]. Unbiased Boolean Use Bessel's correction for an unbiased estimation of the standard deviation. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.projection.variance.html"},
{"title": "Median", "text": "Median Reduce a numeric array using the median value over all dimensions (reducing the array to a number, i.e. sum of all voxels), a dimension. Inputs Input Input Numeric Array(s) Type: Numeric Array, List, Required, Single Outputs Output Output. Type: Numeric Array, List Settings Projection Along Selection Select over which dimension to reduce, All will reduce the array to a number, or choose a Dimension. Values: All, Dimension Dimension Integer Specify which dimension to reduce over. Keep Dimension Boolean If selected, the dimension which was reduced will be kept as a singleton dimension. E.g. if you have a numeric array with dimensions [i, j, k, c] and select Keep Dimension, the output will be [i, j, k, 1], otherwise it will be [i, j, k]. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.projection.median.html"},
{"title": "Min", "text": "Min Reduce a numeric array using the minimum value over all dimensions (reducing the array to a number, i.e. sum of all voxels), a dimension. Inputs Input Input Numeric Array(s) Type: Numeric Array, List, Required, Single Outputs Output Output. Type: Numeric Array, List Settings Projection Along Selection Select over which dimension to reduce, All will reduce the array to a number, or choose a Dimension. Values: All, Dimension Dimension Integer Specify which dimension to reduce over. Keep Dimension Boolean If selected, the dimension which was reduced will be kept as a singleton dimension. E.g. if you have a numeric array with dimensions [i, j, k, c] and select Keep Dimension, the output will be [i, j, k, 1], otherwise it will be [i, j, k]. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.projection.min.html"},
{"title": "Max", "text": "Max Reduce a numeric array using the maximum value over all dimensions (reducing the array to a number, i.e. sum of all voxels), a dimension. Inputs Input Input Numeric Array(s) Type: Numeric Array, List, Required, Single Outputs Output Output. Type: Numeric Array, List Settings Projection Along Selection Select over which dimension to reduce, All will reduce the array to a number, or choose a Dimension. Values: All, Dimension Dimension Integer Specify which dimension to reduce over. Keep Dimension Boolean If selected, the dimension which was reduced will be kept as a singleton dimension. E.g. if you have a numeric array with dimensions [i, j, k, c] and select Keep Dimension, the output will be [i, j, k, 1], otherwise it will be [i, j, k]. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.projection.max.html"},
{"title": "Product", "text": "Product Reduce a numeric array using the product over all dimensions (reducing the array to a number, i.e. sum of all voxels), a dimension. Inputs Input Input Numeric Array(s) Type: Numeric Array, List, Required, Single Outputs Output Output. Type: Numeric Array, List Settings Projection Along Selection Select over which dimension to reduce, All will reduce the array to a number, or choose a Dimension. Values: All, Dimension Dimension Integer Specify which dimension to reduce over. Keep Dimension Boolean If selected, the dimension which was reduced will be kept as a singleton dimension. E.g. if you have a numeric array with dimensions [i, j, k, c] and select Keep Dimension, the output will be [i, j, k, 1], otherwise it will be [i, j, k]. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.projection.product.html"},
{"title": "Norm", "text": "Norm Reduce a numeric array using the norm over all dimensions (reducing the array to a number, i.e. sum of all voxels), a dimension. Inputs Input Input Numeric Array(s) Type: Numeric Array, List, Required, Single Outputs Output Output. Type: Numeric Array, List Settings Projection Along Selection Select over which dimension to reduce, All will reduce the array to a number, or choose a Dimension. Values: All, Dimension Dimension Integer Specify which dimension to reduce over. Keep Dimension Boolean If selected, the dimension which was reduced will be kept as a singleton dimension. E.g. if you have a numeric array with dimensions [i, j, k, c] and select Keep Dimension, the output will be [i, j, k, 1], otherwise it will be [i, j, k]. Norm Order Float Order of the norm. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.projection.norm.html"},
{"title": "Histogram", "text": "Histogram Creates a histogram from a Numeric Array. Inputs Input Input Numeric Array. Type: Numeric Array, Required, Single Outputs Output Table containing the histogram. Type: Table Settings Histogram Bins Integer Set the number of bins in the histogram. Automatic Bounds Boolean Set the bounds of the histogram to \([min, max]\). Lower Bound Float Set the lower bound of the X-axis. Upper Bound Float Set the upper bound of the X-axis. Bin Location Selection X-position of the plotted points. Left - point is plotted at left side of the bin, Right - point is plotted at right side of the bin, Center - point is plotted at center of the bin, Bin Width - plotted as bars with the width of the bins. Values: Center, Left, Right, Bin Width Normalization Selection Set how to normalize the y-axis. Count - no normalization, PDF - normalize as probability density, CDF - normalize as cumulative distribution function. Values: Count, PDF, CDF Configure Output Name Text Name of the output Table. Bins Axis Name Text Name of the bin (x) axis. Frequency Axis Name Text Name of the frequency (y) axis. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.statistics.histogram.html"},
{"title": "Display", "text": "Display Display values or shapes depending on input in process. Copies input connection to output. Inputs Input Input. Type: Any, List, Required, Single Outputs Output Output. Type: Any, List Settings Clip Selection If the displayed value is longer than 96 characters, the displayed value will be clipped. If End is selected, the characters in the end of the value will be replaced with .... If Beginning is selected, the clipping will be done in the beginning of the value. Values: End, Beginning See also Keywords: ", "tags": "", "url": "nodes.numeric_array.visualization.display.html"},
{"title": "Display Property", "text": "Display Property Display a property in process. Copies input connection to output. Inputs Input Input. Type: Any, List, Required, Single Outputs Output Output. Type: Any, List Settings Property Text Path to the property to display. Clip Selection If the displayed value is longer than 96 characters, the displayed value will be clipped. If End is selected, the characters in the end of the value will be replaced with .... If Beginning is selected, the clipping will be done in the beginning of the value. Values: End, Beginning See also Keywords: ", "tags": "", "url": "nodes.numeric_array.visualization.display_property.html"},
{"title": "To Text", "text": "Convert To Text Converts an array to Text. Inputs Input Input array. Type: Numeric Array, Boolean Array, List, Required, Single Outputs Output Output text. Type: Text Settings Summarize Boolean When an array is large, enabling this option will show the array in a summarized form (dotted representation). Single Line Boolean Print on single line. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.converters.to_text.html"},
{"title": "Cast to Type", "text": "Cast Cast the value type of the input to a new value type. Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Output(s). Type: Numeric Array Settings Configure Value Type Selection The new value type. Values: Float64, Float32, Integer64, Integer32, Complex64x2, Complex32x2 Column Settings Column Name Text Name of the output column. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.converters.cast_to_type.html"},
{"title": "Save to Disk", "text": "Save Hero Data Save data to disk using Hero data in binary format .hdata or xml format .hxdata. Inputs Input Data that is saved. Type: Any, Required, Single Settings Folder Path Folder where the file is stored. The path can be both absolute and relative. File Text Name of the file. If file extension is omitted, .hdata will be apended. The file ending can be either .hdata for binary storage or .hxdata for xml-based storage. Overwrite Boolean Overwrite file if it already exists. Compress Boolean Compress the file to save space. Will slow down the write and read speed. See also Load Hero Data Keywords: ", "tags": "", "url": "nodes.numeric_array.export.save_to_disk.html"},
{"title": "Save to Database", "text": "Save to Database Save data to a specific location in the database under a name specified in the node. Inputs Input The data to be stored in the database. Type: Any, Required, Single Study Link The destination in the database for the data to be stored. For Images and Masks this is optional. If not provided the Metadata will be used to find the destination. Typically this metadata is available for data imported into the database, such as DICOM images. Type: Struct, Required/Optional, Single Settings Use Name from Input Boolean Whether to take the name from the input data (applies to Images and Masks only) or from a node setting. Name in Database Text What name the data should be stored under in the database. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.export.save_to_database.html"},
{"title": "Create Study", "text": "Create Study Create a new study in the database. The study is defined by its Study ID, and is connected to a Patient ID in the database at creation. NOTE: If an image with a different Patient ID or Patient Name is saved to this study, it will still be displayed in the Patient ID/Patient name of study in the database panel, but will retain the original Patient ID and Patient name when loaded into the workflow. Outputs Output A structure describing the new study. Type: Struct Settings Database Text The name of the database in which the study is created. Study ID Text The Study ID. This must be a unique ID, two studies cannot share a Study ID. Study Description Text The Study Description, or name of the study. Patient ID Text The Patient ID to which the study belongs. Patient Name Text The patient name. Frame of Reference UID Text The Frame of Reference UID. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.export.create_study.html"},
{"title": "Export as Numpy Array", "text": "Export as Numpy Array Export a numeric array or boolean array to a numpy array. Inputs Input Input numeric array. Type: Numeric Array, Boolean Array, Required, Single Settings Folder Path Output folder. The path can be both absolute and relative. Filename Text Output filename. Overwrite Boolean Overwrite file if it exists. See also Keywords: ", "tags": "", "url": "nodes.numeric_array.export.export_as_numpy_array.html"},
{"title": "Create Boolean", "text": "Create Bit Creates a boolean. Outputs Output The created boolean array with a single element. Type: Boolean Array Settings Value Boolean Set the value of the output boolean. See also Keywords: ", "tags": "", "url": "nodes.boolean_array.createimport.create_boolean.html"},
{"title": "Create Boolean Array", "text": "Create Boolean Array Create a boolean array. Outputs Output The created boolean array. Type: Boolean Array Settings Value Array Set the values for the output boolean array. See also Keywords: ", "tags": "", "url": "nodes.boolean_array.createimport.create_boolean_array.html"},
{"title": "Create Constant Boolean Array", "text": "Create Constant Boolean Array Creates a boolean array with constant values. Outputs Output Output boolean array. Type: Boolean Array Settings Value Boolean Set the values of the boolean array. Array Shape Integers Set the shape of the output array. See also Keywords: ", "tags": "", "url": "nodes.boolean_array.createimport.create_constant_boolean_array.html"},
{"title": "Parse Text", "text": "Parse Parse text to a numerical or boolean array or scalar. The format of the text should be square brackets &ldquo;[]&rdquo; for each array dimension and comma separator &quot;, &quot; between items. Since it is ambiguous from the text what the data type should be it must be specified. Examples: 3.4 → Scalar number. [1, 2, 3] → 1D array of numbers. [[1, 2], [3, 4]] → 2D array of numbers. [True, False] → 1D array of boolean values. Inputs Input input Text(s) to be parsed. Type: Text, List, Required, Single Outputs Output Output array(s). Type: Numeric Array, Boolean Array, List Settings Data Type Selection Type of data in the resulting array(s). Values: Boolean, Integer32, Integer64, Float32, Float64, Complex64, Complex128 See also Parse Text Keywords: ", "tags": "", "url": "nodes.boolean_array.createimport.parse_text.html"},
{"title": "Bernoulli Distribution", "text": "Random The Bernoulli distribution is the discrete probability distribution of a random variable which takes the value 1 with probability \(p\) and the value 0 with probability \(1-p\). Outputs Output Output Bernoulli distribution. Type: Boolean Array Settings Configure Shape Integers Shape of the output Boolean Array if no Elementwise Probability is provided. Distribution Probability Float Probability for outputing TRUE. Elementwise Probability Boolean Enable elementwise probability. Will expose an input where you can provide an Numeric Array where each element represents a probability for true. Has to be in the range [0,1]. See also Keywords: ", "tags": "", "url": "nodes.boolean_array.createimport.random.bernoulli_distribution.html"},
{"title": "Load Hero Data", "text": "Load Hero Data Load Hero Data from disk. Outputs Output The loaded Hero Data. Type: Numeric Array Settings File Filepath Path to the Hero Data file. The path can be both absolute and relative. Data Type Selection The type of the data. Values: Numeric Array, Text, Boolean Array, Image, Mask, Structure, Table, Column, Contour, Text List, Image List, Mask List, Structure List, List of Lists, Table List, Column List, Numeric Array List, Boolean Array List, Contour List See also Keywords: ", "tags": "", "url": "nodes.boolean_array.createimport.load_hero_data.html"},
{"title": "Has Property", "text": "Has Property Check if property exists. Inputs Input Input. Type: Any, List, Required, Single Outputs Output Output True/False. Type: Boolean Array Settings Property Text Property Path. See also Keywords: ", "tags": "", "url": "nodes.boolean_array.getset_property.has_property.html"},
{"title": "Get Property", "text": "Get Property Get property from input. Inputs Input Input new property value. Type: Any, List, Required, Single Outputs Output Output. Type: Numeric Array Settings Property Text Property path. For example, if the input is a single Image the path to the Sex property is Subject.Sex. The paths can be found in the Properties viewer by right-clicking on the property and choosing Copy Property Path. Property Type Selection Property type. Values: Boolean Array, Boolean Array List, Column, Column List, Contour, Contour List, Image, Image List, List of Lists, Mask, Mask List, Numeric Array, Numeric Array List, Structure, Structure List, Table, Table List, Text, Text List See also Keywords: ", "tags": "", "url": "nodes.boolean_array.getset_property.get_property.html"},
{"title": "Edit Property", "text": "Edit Property Modify a property of an input. Only Text, Numeric arrays, and Boolean arrays are editable. The Edit Property node enables users to set the property as a setting within the node, while the Set Property node accepts the property value as an input. The Edit Property node cannot alter the property type, but the Set Property node is able to do so. Inputs Input Input of any type. Type: Any, Required, Single Outputs Output Output of the same type as the input. Type: Numeric Array Settings Value Text Set the new property value. Property Text Property path. For example, if the input is a single Image the path to the Sex property is Subject.Sex. The paths can be found in the Properties viewer by right-clicking on the property and choosing Copy Property Path. See also Keywords: ", "tags": "", "url": "nodes.boolean_array.getset_property.edit_property.html"},
{"title": "Set Property", "text": "Set Property Set a specific property to a value supplied as an input. This operation allows changing the property value type, e.g. from a Numeric Array to a Text List. The property has to exist in the input data. If it does not exist, use the Insert Property node. Inputs Input Input. Type: Any, List, Required, Single New Value New property value. Type: Any, Required, Single Outputs Output Input data with the changed property. Type: Any, List Settings Property Text Property path. For example, if the input is a single Image the path to the Sex property is Subject.Sex. The paths can be found in the Properties viewer by right-clicking on the property and choosing Copy Property Path. Broadcast Input Boolean Broadcast input to property list elements. If set to True and the property is a list, the input will be assigned to each element of the property list. If set to False and the property and input are lists of equal length, the i:th element of the input list is assigned to the i:th element of the property list. See also Keywords: ", "tags": "", "url": "nodes.boolean_array.getset_property.set_property.html"},
{"title": "Insert Property", "text": "Insert Property Insert a Hero Data item at a specific location in input. Inputs Input Input Type: Any, List, Required, Single New Value New value. Type: Any, List, Required, Single Outputs Output Output. Type: Any Settings Property Text Property path. For example, if the input is a single Image the path to the Sex property is Subject.Sex. The paths can be found in the Properties viewer by right-clicking on the property and choosing Copy Property Path. Values: Boolean Array, Boolean Array List, Column, Column List, Contour, Contour List, Image, Image List, List of Lists, Mask, Mask List, Numeric Array, Numeric Array List, Structure, Structure List, Table, Table List, Text, Text List Broadcast Property Boolean Set many values in a list to the same value. See also Keywords: ", "tags": "", "url": "nodes.boolean_array.getset_property.insert_property.html"},
{"title": "Remove Property", "text": "Remove Property Remove a Hero Data item at a specific location in input data. Inputs Input Input Type: Any, List, Required, Single Outputs Output Output Type: Numeric Array Settings Property Text Property Path. See also Keywords: ", "tags": "", "url": "nodes.boolean_array.getset_property.remove_property.html"},
{"title": "Boolean Array Repeater", "text": "Repeater Copies input connection to output. Settings Repeater Description Text The title of the repeater. If used as an input for a group, set value to brief description of expected input type. Sparse Connections Boolean A sparse connection removes the wire between the repeater output and connected nodes, and replaces them with a label displaying the repeater description. This is very useful when you have a large workflow wih many wires. Change Image/Data Name Set New Image/Data Name Boolean Should the image/data get a new name, only applies to Image4D and DataCollection. Misc IOType Text Missing description. See also Keywords: ", "tags": "", "url": "nodes.boolean_array.repeaters.boolean_array_repeater.html"},
{"title": "Boolean Array List Repeater", "text": "Repeater Copies input connection to output. Settings Repeater Description Text The title of the repeater. If used as an input for a group, set value to brief description of expected input type. Sparse Connections Boolean A sparse connection removes the wire between the repeater output and connected nodes, and replaces them with a label displaying the repeater description. This is very useful when you have a large workflow wih many wires. Change Image/Data Name Set New Image/Data Name Boolean Should the image/data get a new name, only applies to Image4D and DataCollection. Misc IOType Text Missing description. See also Keywords: ", "tags": "", "url": "nodes.boolean_array.repeaters.boolean_array_list_repeater.html"},
{"title": "And", "text": "And Performs element-wise boolean AND operation in supplied inputs with broadcasting. If an element is TRUE in both inputs, the resulting output element is TRUE, otherwise it is FALSE. You can perform the operation on any two supported inputs of the same type. The operation can be performed on any supported input type and a boolean. Inputs Upper First input. Type: Mask, Column, Boolean Array, List, Required, Single Lower Second input. Type: Mask, Column, Boolean Array, List, Optional, Single Outputs Output Resulting output. The output type is determined by the input types. If one input is an Mask or a Column, the output will be an Mask or a Column, respectively. If both inputs are Boolean Array type, the output will be a Boolean Array type. Type: Mask, Column, Boolean Array, List Settings Value Value Array If optional input is not suppliad, the AND operation will be performed between mandatory Upper input and specified value. Image Settings Metadata Source Selection Select the source for the output metadata. This is only applicable if the output is a mask. Values: Upper, Lower Column Settings Column Name Text Set the name of the output column. Broadcast Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Mask and Boolean Array. Values: Align Leading Dimensions, Align Trailing Dimensions See also Keywords: ", "tags": "", "url": "nodes.boolean_array.boolean_algebra.and.html"},
{"title": "Or", "text": "Or Performs element-wise boolean OR operation in supplied inputs with broadcasting. If atleast one input element is TRUE, the resulting output element is TRUE, otherwise it is FALSE. You can perform the operation on any two supported inputs of the same type. The operation can be performed on any supported input type and a boolean. Inputs Upper First input. Type: Mask, Column, Boolean Array, List, Required, Single Lower Second input. Type: Mask, Column, Boolean Array, List, Optional, Single Outputs Output Resulting output. The output type is determined by the input types. If one input is an Mask or a Column, the output will be an Mask or a Column, respectively. If both inputs are Boolean Array type, the output will be a Boolean Array type. Type: Mask, Column, Boolean Array, List Settings Value Value Array If optional input is not suppliad, the AND operation will be performed between mandatory Upper input and specified value. Image Settings Metadata Source Selection Select the source for the output metadata. This is only applicable if the output is a mask. Values: Upper, Lower Column Settings Column Name Text Set the name of the output column. Broadcast Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Mask and Boolean Array. Values: Align Leading Dimensions, Align Trailing Dimensions See also Keywords: ", "tags": "", "url": "nodes.boolean_array.boolean_algebra.or.html"},
{"title": "XOr", "text": "XOr Performs element-wise boolean XOR operation in supplied inputs with broadcasting. If the two input elements are not equal, the resulting output element is TRUE, otherwise it is FALSE. You can perform the operation on any two supported inputs of the same type. The operation can be performed on any supported input type and a boolean. Inputs Upper First input. Type: Mask, Column, Boolean Array, List, Required, Single Lower Second input. Type: Mask, Column, Boolean Array, List, Optional, Single Outputs Output Resulting output. The output type is determined by the input types. If one input is an Mask or a Column, the output will be an Mask or a Column, respectively. If both inputs are Boolean Array type, the output will be a Boolean Array type. Type: Mask, Column, Boolean Array, List Settings Value Value Array If optional input is not suppliad, the AND operation will be performed between mandatory Upper input and specified value. Image Settings Metadata Source Selection Select the source for the output metadata. This is only applicable if the output is a mask. Values: Upper, Lower Column Settings Column Name Text Set the name of the output column. Broadcast Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Mask and Boolean Array. Values: Align Leading Dimensions, Align Trailing Dimensions See also Keywords: ", "tags": "", "url": "nodes.boolean_array.boolean_algebra.xor.html"},
{"title": "Not", "text": "Not Performs logical elementwise NOT. Inputs Input Input. Type: Mask, Column, Boolean Array, List, Required, Single Outputs Output Output. Type: Mask, Column, Boolean Array, List Settings Append Column Name With Text Append text to Column Name. Append Mask Name With Text Append text to Mask Name. See also Keywords: ", "tags": "", "url": "nodes.boolean_array.boolean_algebra.not.html"},
{"title": "Any", "text": "Any Voxelwise logical OR over all elements in input list with broadcasting, i.e. if a voxel or entry is TRUE in any element of the input list, the output voxel or entry is TRUE. Inputs In Input. Type: Mask, Column, Boolean Array, List, Required, Single Outputs Out Output. Type: Mask, Column, Boolean Array Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Mask and Boolean Array. Values: Leading Dimensions, Trailing Dimensions Metadata From Element Integer Select the source for the output metadata. This is only applicable if the output is a mask. See also Keywords: ", "tags": "", "url": "nodes.boolean_array.boolean_algebra.any.html"},
{"title": "All", "text": "All Voxelwise logical OR over all elements in input list with broadcasting, i.e. if a voxel or entry is TRUE in all elements of the input list, the output voxel or entry is TRUE. Inputs In Input. Type: Mask, Column, Boolean Array, List, Required, Single Outputs Out Output. Type: Mask, Column, Boolean Array Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Mask and Boolean Array. Values: Leading Dimensions, Trailing Dimensions Metadata From Element Integer Select the source for the output metadata. This is only applicable if the output is a mask. See also Keywords: ", "tags": "", "url": "nodes.boolean_array.boolean_algebra.all.html"},
{"title": "Equal", "text": "Equal Elementwise compare inputs with broadcasting. If input elements are equal, the output element is TRUE. You can compare any supported inputs to inputs of the same type, and also Mask to Bits, Image to Numbers and Column to Numeric Array and Boolean Array. Inputs Upper First input. Type: Mask, Column, Image, Numeric Array, Boolean Array, List, Required, Single Lower Second input. Type: Mask, Column, Image, Numeric Array, Boolean Array, List, Optional, Single Outputs Output Output. The output depends on the input. An Image input gives an Image output, a Mask input gives a Mask output and a Column input gives a Column output, regardless of the second input type. Two Numbers inputs gives Numeric Array output and two Bits inputs gives Boolean Array output. Type: Mask, Column, Image, Numeric Array, Boolean Array, List Settings Equal Value Array Value to compare the first input to. Only valid if the optional input is not connected. Value Type Selection Value type of the Value setting. Values: Boolean, Integer32, Integer64, Float32, Float64, Complex64, Complex128 Image Settings Metadata Source Selection Select the source for the output metadata. This is only applicable if the output is an Image or a Mask. Values: Upper, Lower Column Settings Column Name Text Set the name of the output column. Broadcast Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Image and Numeric Array. Values: Align Leading Dimensions, Align Trailing Dimensions See also Keywords: ", "tags": "", "url": "nodes.boolean_array.compare.equal.html"},
{"title": "Not Equal", "text": "Not Equal Elementwise compare inputs with broadcasting. If input elements are not equal, the output element is TRUE. You can compare any supported inputs to inputs of the same type, and also Mask to Bits, Image to Numbers and Column to Numeric Array and Boolean Array. Inputs Upper First input. Type: Mask, Column, Image, Numeric Array, Boolean Array, List, Required, Single Lower Second input. Type: Mask, Column, Image, Numeric Array, Boolean Array, List, Required, Single Outputs Output Output. The output depends on the input. An Image input gives an Image output, a Mask input gives a Mask output and a Column input gives a Column output, regardless of the second input type. Two Numbers inputs gives Numeric Array output and two Bits inputs gives Boolean Array output. Type: Mask, Column, Image, Numeric Array, Boolean Array, List Settings Value Value Array Value to compare the first input to. Only valid if the optional input is not connected. Value Type Selection Value type of the Value setting. Values: Boolean, Integer32, Integer64, Float32, Float64, Complex64, Complex128 Image Settings Metadata Source Selection Select the source for the output metadata. This is only applicable if the output is an Image or a Mask. Values: Upper, Lower Column Settings Column Name Text Set the name of the output column. Broadcast Settings Broadcasting Selection Select how to align the input data for broadcasting. Only applicable for Image and Numeric Array. Values: Align Leading Dimensions, Align Trailing Dimensions See also Keywords: ", "tags": "", "url": "nodes.boolean_array.compare.not_equal.html"},
{"title": "Masked Select", "text": "Masked Select Select elements from an array using a boolean mask, i.e. an Boolean Array with True for the elements you want to select and False otherwise, e.g. [1,2,3,4] and [False, True, False, True] will output [2,4]. Inputs Input Array to select from. Type: Numeric Array, Boolean Array, List, Required, Single Mask Boolean Array to select with. Type: Boolean Array, List, Required, Single Outputs Output Selected elements. Type: Numeric Array, Boolean Array, List Settings Broadcast Settings Selection Select how to align the input data for broadcasting. Values: Align Leading Dimensions, Align Trailing Dimensions See also Keywords: ", "tags": "", "url": "nodes.boolean_array.select.masked_select.html"},
{"title": "Boolean Gate", "text": "Logical Gate Select from two inputs using a boolean. Inputs True Input which is propagated to output if Gate is True. Type: Any, List, Required, Single False Input which is propagated to output if Gate is False. Type: Any, List, Required, Single Gate Boolean which selects input. Type: Boolean Array, Required, Single Outputs Output Output either True or False input depending on value of Gate Type: Any, List See also Keywords: if ", "tags": "", "url": "nodes.boolean_array.select.boolean_gate.html"},
{"title": "Split", "text": "Split Split a Numeric Array or Boolean Array along a specific dimension into blocks of a predefined size, and return result as a list. Example 1 Return all slices of a 3D array in a list: Split Along: 2, Block Size: 1 Example 2 Split 4D array with [i,j,k,60] into a list with 12 elements with 5 arrays each: Split Along: [3], Block Size: 5 Inputs Input Input Numeric Array or Boolean Array. Type: Numeric Array, Boolean Array, List, Required, Single Outputs Output Output Numeric Array, Boolean Array or List Of Lists. Type: Type: Numeric Array, Boolean Array, List Of Lists, List Settings Split along Dimension Integer Specify the index of the dimension which you want to split along. Block Size Integer Specify the block size along the split dimension. Squeeze Boolean Remove singleton dimensions. See also Keywords: ", "tags": "", "url": "nodes.boolean_array.reshape.split.html"},
{"title": "Stack", "text": "Stack Stack Numeric Arrays or Boolean Arrays along a specific dimension. All inputs must share the same shape along all dimensions except the stacking dimension. Inputs Input 0 Input Numeric Arrays or Boolean Arrays. Type: Numeric Array, Boolean Array, List, Required, Single Outputs Array Output Numeric Arrays or Boolean Arrays. Type: Numeric Array, Boolean Array, Required, Single Settings New Dimension Boolean Select if you want to create a new dimension. Stack Along Dimension Integer Index of the dimension stack along. If New Dimension is selected, the index can be 1 more than existing dimensions, otherwise it must be an existing dimension. List Handling Selection Define if multiple lists should be stacked to one output, or if list element should be broadcasted. Example: Input 0 is an image, Input 1 is a list of 3 images. If Stack is selected, the node will stack all four images to one output image. If Broadcast is selected, the node will return a list of 3 elements where element 0 is Input 0 stacked with element 0 of Input 1, element 1 is Input 0 stacked with element 1 of Input 1, and element 2 is Input 0 stacked with element 2 of Input 1. Values: Stack, Broadcast See also Keywords: ", "tags": "", "url": "nodes.boolean_array.reshape.stack.html"},
{"title": "Flip", "text": "Flip Reverses the input Numeric Array matrix along the specified dimension. Inputs Input Input Numeric Array. Type: Numeric Array, Boolean Array, List, Required, Single Outputs Output Output Numeric Array. Type: Numeric Array, Boolean Array, List, Settings Dimensions to Flip Integers Input indeces of the dimension to flip. See also Keywords: ", "tags": "", "url": "nodes.boolean_array.reshape.flip.html"},
{"title": "Pad/Crop", "text": "Pad/Crop Pad or crop an input Numeric Array or Boolean Array. Inputs Input Input Numeric Array or Boolean Array. Type: Numeric Array, Boolean Array, List, Required, Single Outputs Output Output Numeric Array or Boolean Array. Type: Numeric Array, Boolean Array, List Settings New Size Integers Set output size. The result will be symmetrically padded or cropped in each dimension. Extrapolation Value Complex Number Extrapolation value used for array elements added with padding. Method Selection Select the padding method. Centered pads or crops symmetrically at the beginning and end of each affected dimension, Corner pads or crops at the end of each affected dimension. Values: Centered, Corner See also Keywords: ", "tags": "", "url": "nodes.boolean_array.reshape.padcrop.html"},
{"title": "Insert Dimension", "text": "Insert Dimension Insert a single dimension in an input Numeric Array or Boolean Array. Inputs Input Input Numeric Array or Boolean Array. Type: Numeric Array, Boolean Array, List, Required, Single Outputs Output Input Numeric Array or Boolean Array. Type: Numeric Array, Boolean Array, List, Settings Insert Dimension At Integer Specify index of where to insert the new dimension. See also Keywords: ", "tags": "", "url": "nodes.boolean_array.reshape.insert_dimension.html"},
{"title": "Reshape", "text": "Reshape Reshape the dimensions of an input Numeric Array or Boolean Array. The number of volumes in the output must match the number of volumes in the input. Example: Input with shape [3, 4] can be reshaped to e.g. [4, 3], [2, 6] or [1, 12] but not to [3, 6]. Inputs Input Input Numeric Array or Boolean Array. Type: Numeric Array, Boolean Array, List, Required, Single Outputs Output Output Numeric Array or Boolean Array. Type: Numeric Array, Boolean Array, List Settings New Shape Integers New shape. See also Keywords: ", "tags": "", "url": "nodes.boolean_array.reshape.reshape.html"},
{"title": "Expand", "text": "Expand Expand the number of dimensions in an input numeric or boolean array by broadcasting. The existing channel shapes cannot be changed using this node. Example: Input with shape [3, 2] can be expanded to shape [3, 2, 6], or [3, 2, 15, 4], or any arbitrary shape as long as the existing channels are not changed. Inputs Input Input array(s). Type: Numeric Array, Boolean Array, List, Required, Single Outputs Output Output array(s). Type: Numeric Array, Boolean Array, List Settings New Shape Integers Input new shape. Broadcasting Selection Select how to align the input data for broadcasting. Values: Align Leading Dimensions, Align Trailing Dimensions See also Keywords: ", "tags": "", "url": "nodes.boolean_array.reshape.expand.html"},
{"title": "Squeeze Dimensions", "text": "Squeeze Dimensions Remove singleton dimensions from a Numeric Array or Boolean Array, i.e. dimensions with 1 element. Example 1: An input with shape [1, 3, 1] will have a new shape of [3] if all singleton dimensions are squeezed. Example 2: An input with shape [1, 3, 1] will have a new shape of [3, 1] if only dimension [0] is squeezed. Inputs Input Input Numeric Array or Boolean Array. Type: Numeric Array, Boolean Array, List, Required, Single Outputs Output Output Numeric Array or Boolean Array. Type: Numeric Array, Boolean Array, List Settings Type Selection Select if all or specific singleton dimensions should be removed. Values: All, Specific Dimensions to Squeeze Integers Select specific singleton dimension indices that will be removed. See also Keywords: ", "tags": "", "url": "nodes.boolean_array.reshape.squeeze_dimensions.html"},
{"title": "Permute", "text": "Permute Permute the dimensions of an input Numeric Array or Boolean Array. This operation reorders the input matrix as defined by the permutation setting. Inputs Input Input Numeric Array or Boolean Array. Type: Numeric Array, Boolean Array, List, Required, Single Outputs Output Output Numeric Array or Boolean Array. Type: Numeric Array Settings New Order Integers Specify the order of the dimensions of the output. If the input is [i,j,k] and you want to output [j,i,k], specify [1,0,2]. See also Keywords: ", "tags": "", "url": "nodes.boolean_array.reshape.permute.html"},
{"title": "Any", "text": "Any Project a boolean array using local any over all dimensions (reducing the array to a bit, i.e. TRUE if any voxel in a mask is TRUE), a dimension. The output is TRUE if any voxel in the selected dimension is TRUE. Inputs Input Input Boolean Array(s). Type: Boolean Array, List, Required, Single Outputs Output Output. Type: Boolean Array, List Settings Projection Along Selection Select over which dimension to reduce, All will reduce the array to a number, or choose a Dimension. Values: All, Dimension Dimension Integer Specify which dimension to reduce over. Keep Dimension Boolean If selected, the dimension which was reduced will be kept as a singleton dimension. E.g. if you have a numeric array with dimensions [i, j, k, c] and select Keep Dimension, the output will be [i, j, k, 1], otherwise it will be [i, j, k]. See also Keywords: ", "tags": "", "url": "nodes.boolean_array.projection.any.html"},
{"title": "All", "text": "All Project a boolean array using local all over all dimensions (reducing the array to a bit, i.e. TRUE if any voxel in a mask is TRUE), a dimension. The output is TRUE if all voxels in the selected dimension is TRUE. Inputs Input Input Boolean Array(s). Type: Boolean Array, List, Required, Single Outputs Output Output. Type: Boolean Array, List Settings Projection Along Selection Select over which dimension to reduce, All will reduce the array to a number, or choose a Dimension. Values: All, Dimension Dimension Integer Specify which dimension to reduce over. Keep Dimension Boolean If selected, the dimension which was reduced will be kept as a singleton dimension. E.g. if you have a numeric array with dimensions [i, j, k, c] and select Keep Dimension, the output will be [i, j, k, 1], otherwise it will be [i, j, k]. See also Keywords: ", "tags": "", "url": "nodes.boolean_array.projection.all.html"},
{"title": "Display", "text": "Display Display values or shapes depending on input in process. Copies input connection to output. Inputs Input Input. Type: Any, List, Required, Single Outputs Output Output. Type: Any, List Settings Clip Selection If the displayed value is longer than 96 characters, the displayed value will be clipped. If End is selected, the characters in the end of the value will be replaced with .... If Beginning is selected, the clipping will be done in the beginning of the value. Values: End, Beginning See also Keywords: ", "tags": "", "url": "nodes.boolean_array.visualization.display.html"},
{"title": "Display Property", "text": "Display Property Display a property in process. Copies input connection to output. Inputs Input Input. Type: Any, List, Required, Single Outputs Output Output. Type: Any, List Settings Property Text Path to the property to display. Clip Selection If the displayed value is longer than 96 characters, the displayed value will be clipped. If End is selected, the characters in the end of the value will be replaced with .... If Beginning is selected, the clipping will be done in the beginning of the value. Values: End, Beginning See also Keywords: ", "tags": "", "url": "nodes.boolean_array.visualization.display_property.html"},
{"title": "To Text", "text": "Convert To Text Converts an array to Text. Inputs Input Input array. Type: Numeric Array, Boolean Array, List, Required, Single Outputs Output Output text. Type: Text Settings Summarize Boolean When an array is large, enabling this option will show the array in a summarized form (dotted representation). Single Line Boolean Print on single line. See also Keywords: ", "tags": "", "url": "nodes.boolean_array.converters.to_text.html"},
{"title": "Cast to Type", "text": "Cast Cast the value type of the input to a new value type. Inputs Input Input(s). Type: Column, Image, Numeric Array, List, Required, Single Outputs Output Output(s). Type: Numeric Array Settings Configure Value Type Selection The new value type. Values: Float64, Float32, Integer64, Integer32, Complex64x2, Complex32x2 Column Settings Column Name Text Name of the output column. See also Keywords: ", "tags": "", "url": "nodes.boolean_array.converters.cast_to_type.html"},
{"title": "Save to Disk", "text": "Save Hero Data Save data to disk using Hero data in binary format .hdata or xml format .hxdata. Inputs Input Data that is saved. Type: Any, Required, Single Settings Folder Path Folder where the file is stored. The path can be both absolute and relative. File Text Name of the file. If file extension is omitted, .hdata will be apended. The file ending can be either .hdata for binary storage or .hxdata for xml-based storage. Overwrite Boolean Overwrite file if it already exists. Compress Boolean Compress the file to save space. Will slow down the write and read speed. See also Load Hero Data Keywords: ", "tags": "", "url": "nodes.boolean_array.export.save_to_disk.html"},
{"title": "Save to Database", "text": "Save to Database Save data to a specific location in the database under a name specified in the node. Inputs Input The data to be stored in the database. Type: Any, Required, Single Study Link The destination in the database for the data to be stored. For Images and Masks this is optional. If not provided the Metadata will be used to find the destination. Typically this metadata is available for data imported into the database, such as DICOM images. Type: Struct, Required/Optional, Single Settings Use Name from Input Boolean Whether to take the name from the input data (applies to Images and Masks only) or from a node setting. Name in Database Text What name the data should be stored under in the database. See also Keywords: ", "tags": "", "url": "nodes.boolean_array.export.save_to_database.html"},
{"title": "Create Study", "text": "Create Study Create a new study in the database. The study is defined by its Study ID, and is connected to a Patient ID in the database at creation. NOTE: If an image with a different Patient ID or Patient Name is saved to this study, it will still be displayed in the Patient ID/Patient name of study in the database panel, but will retain the original Patient ID and Patient name when loaded into the workflow. Outputs Output A structure describing the new study. Type: Struct Settings Database Text The name of the database in which the study is created. Study ID Text The Study ID. This must be a unique ID, two studies cannot share a Study ID. Study Description Text The Study Description, or name of the study. Patient ID Text The Patient ID to which the study belongs. Patient Name Text The patient name. Frame of Reference UID Text The Frame of Reference UID. See also Keywords: ", "tags": "", "url": "nodes.boolean_array.export.create_study.html"},
{"title": "Export as Numpy Array", "text": "Export as Numpy Array Export a numeric array or boolean array to a numpy array. Inputs Input Input numeric array. Type: Numeric Array, Boolean Array, Required, Single Settings Folder Path Output folder. The path can be both absolute and relative. Filename Text Output filename. Overwrite Boolean Overwrite file if it exists. See also Keywords: ", "tags": "", "url": "nodes.boolean_array.export.export_as_numpy_array.html"},
{"title": "Create Text", "text": "Create Text Create a text string. Outputs Text Output text. Type: Text Settings Text Text The text to output. Extended Text Input Boolean When set to true, the input text box in the settings panel will be an extended text input, allowing for a better overview of the text. See also Keywords: string ", "tags": "", "url": "nodes.text.createimport.create_text.html"},
{"title": "Create File Path", "text": "Create File Path Creates a string that contains a path to a file. Outputs Path File path. Type: Text Settings File Path Filepath File path. See also Keywords: ", "tags": "", "url": "nodes.text.createimport.create_file_path.html"},
{"title": "Create Folder Path", "text": "Create Folder Path Creates path to a folder. Outputs Path Path to folder. Type: Text Settings Folder Path Path Path to folder. See also Keywords: ", "tags": "", "url": "nodes.text.createimport.create_folder_path.html"},
{"title": "Get Working Directory", "text": "Get Working Directory Get the path to the working directory of the workflow. The working directory is the directiory where the workflow is located. If the workflow is not saved no working directory is available and the node will not run successfully. The working directory can also be accessed in many nodes using Relative Paths. Outputs Output The path to the working directory. Type: Text See also Keywords: Relative path, Working directory ", "tags": "", "url": "nodes.text.createimport.get_working_directory.html"},
{"title": "Create DateTime", "text": "Create DateTime string Creates a datetime as text. Outputs Output Output datetime as Text. Type: Text Settings Source Selection Specify how to create the datetime. Now generates the current datetime when the node is executed. Now and Remember generates the datetime when the node was created and remembers that datetime. Specify lets the user specify the wanted datetime in the DateTime control. Values: Now, Now and Remember, Specify DateTime Date Specify the datetime. See also Keywords: ", "tags": "", "url": "nodes.text.createimport.create_datetime.html"},
{"title": "Load Hero Data", "text": "Load Hero Data Load Hero Data from disk. Outputs Output The loaded Hero Data. Type: Numeric Array Settings File Filepath Path to the Hero Data file. The path can be both absolute and relative. Data Type Selection The type of the data. Values: Numeric Array, Text, Boolean Array, Image, Mask, Structure, Table, Column, Contour, Text List, Image List, Mask List, Structure List, List of Lists, Table List, Column List, Numeric Array List, Boolean Array List, Contour List See also Keywords: ", "tags": "", "url": "nodes.text.createimport.load_hero_data.html"},
{"title": "Import Text File", "text": "Import Text File Import text from a file. Outputs Output Imported text from file. The path can be both absolute and relative. Type: Text Settings Path Filepath Path to the .txt file to be imported. See also Keywords: ", "tags": "", "url": "nodes.text.createimport.import_text_file.html"},
{"title": "Create DICOM UID", "text": "Create DICOM UID Generate a Universally Unique Identifier (UUID) as described in the DICOM standard. Outputs Output Output UID. Type: Text See also Keywords: ", "tags": "", "url": "nodes.text.createimport.create_dicom_uid.html"},
{"title": "Create GUID", "text": "Create GUID Generate a globally unique identifier (GUID). The GUID text string consists of 32 hexadecimal digits (0-9 and a,b,c,d,e,f) displayed in five groups separated by hyphens as follows: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx for a total of 36 characters. Each generated GUID is for practical purposes unique. A total of \(5.3\times 10^{36}\) possible GUID values can be generated. Outputs Output Output GUID. Type: Text See also Keywords: ", "tags": "", "url": "nodes.text.createimport.create_guid.html"},
{"title": "Create Directory", "text": "Create Directory Settings Directory Directory Path Missing description. See also Keywords: ", "tags": "", "url": "nodes.text.createimport.create_directory.html"},
{"title": "Path Exists", "text": "Path Exist Inputs Input Missing description. Type: **NodeIOText, **, Required, Single Outputs Output Missing description. Type: NodeIOBooleanArray Settings Path Type Selection Missing description. Values: Any, File, Directory See also Keywords: ", "tags": "", "url": "nodes.text.createimport.path_exists.html"},
{"title": "Has Property", "text": "Has Property Check if property exists. Inputs Input Input. Type: Any, List, Required, Single Outputs Output Output True/False. Type: Boolean Array Settings Property Text Property Path. See also Keywords: ", "tags": "", "url": "nodes.text.getset_property.has_property.html"},
{"title": "Get Property", "text": "Get Property Get property from input. Inputs Input Input new property value. Type: Any, List, Required, Single Outputs Output Output. Type: Numeric Array Settings Property Text Property path. For example, if the input is a single Image the path to the Sex property is Subject.Sex. The paths can be found in the Properties viewer by right-clicking on the property and choosing Copy Property Path. Property Type Selection Property type. Values: Boolean Array, Boolean Array List, Column, Column List, Contour, Contour List, Image, Image List, List of Lists, Mask, Mask List, Numeric Array, Numeric Array List, Structure, Structure List, Table, Table List, Text, Text List See also Keywords: ", "tags": "", "url": "nodes.text.getset_property.get_property.html"},
{"title": "Edit Property", "text": "Edit Property Modify a property of an input. Only Text, Numeric arrays, and Boolean arrays are editable. The Edit Property node enables users to set the property as a setting within the node, while the Set Property node accepts the property value as an input. The Edit Property node cannot alter the property type, but the Set Property node is able to do so. Inputs Input Input of any type. Type: Any, Required, Single Outputs Output Output of the same type as the input. Type: Numeric Array Settings Value Text Set the new property value. Property Text Property path. For example, if the input is a single Image the path to the Sex property is Subject.Sex. The paths can be found in the Properties viewer by right-clicking on the property and choosing Copy Property Path. See also Keywords: ", "tags": "", "url": "nodes.text.getset_property.edit_property.html"},
{"title": "Set Property", "text": "Set Property Set a specific property to a value supplied as an input. This operation allows changing the property value type, e.g. from a Numeric Array to a Text List. The property has to exist in the input data. If it does not exist, use the Insert Property node. Inputs Input Input. Type: Any, List, Required, Single New Value New property value. Type: Any, Required, Single Outputs Output Input data with the changed property. Type: Any, List Settings Property Text Property path. For example, if the input is a single Image the path to the Sex property is Subject.Sex. The paths can be found in the Properties viewer by right-clicking on the property and choosing Copy Property Path. Broadcast Input Boolean Broadcast input to property list elements. If set to True and the property is a list, the input will be assigned to each element of the property list. If set to False and the property and input are lists of equal length, the i:th element of the input list is assigned to the i:th element of the property list. See also Keywords: ", "tags": "", "url": "nodes.text.getset_property.set_property.html"},
{"title": "Insert Property", "text": "Insert Property Insert a Hero Data item at a specific location in input. Inputs Input Input Type: Any, List, Required, Single New Value New value. Type: Any, List, Required, Single Outputs Output Output. Type: Any Settings Property Text Property path. For example, if the input is a single Image the path to the Sex property is Subject.Sex. The paths can be found in the Properties viewer by right-clicking on the property and choosing Copy Property Path. Values: Boolean Array, Boolean Array List, Column, Column List, Contour, Contour List, Image, Image List, List of Lists, Mask, Mask List, Numeric Array, Numeric Array List, Structure, Structure List, Table, Table List, Text, Text List Broadcast Property Boolean Set many values in a list to the same value. See also Keywords: ", "tags": "", "url": "nodes.text.getset_property.insert_property.html"},
{"title": "Remove Property", "text": "Remove Property Remove a Hero Data item at a specific location in input data. Inputs Input Input Type: Any, List, Required, Single Outputs Output Output Type: Numeric Array Settings Property Text Property Path. See also Keywords: ", "tags": "", "url": "nodes.text.getset_property.remove_property.html"},
{"title": "Text Repeater", "text": "Repeater Copies input connection to output. Settings Repeater Description Text The title of the repeater. If used as an input for a group, set value to brief description of expected input type. Sparse Connections Boolean A sparse connection removes the wire between the repeater output and connected nodes, and replaces them with a label displaying the repeater description. This is very useful when you have a large workflow wih many wires. Change Image/Data Name Set New Image/Data Name Boolean Should the image/data get a new name, only applies to Image4D and DataCollection. Misc IOType Text Missing description. See also Keywords: ", "tags": "", "url": "nodes.text.repeaters.text_repeater.html"},
{"title": "Text List Repeater", "text": "Repeater Copies input connection to output. Settings Repeater Description Text The title of the repeater. If used as an input for a group, set value to brief description of expected input type. Sparse Connections Boolean A sparse connection removes the wire between the repeater output and connected nodes, and replaces them with a label displaying the repeater description. This is very useful when you have a large workflow wih many wires. Change Image/Data Name Set New Image/Data Name Boolean Should the image/data get a new name, only applies to Image4D and DataCollection. Misc IOType Text Missing description. See also Keywords: ", "tags": "", "url": "nodes.text.repeaters.text_list_repeater.html"},
{"title": "Concatenate Text", "text": "t# Concatenate Text Combine Text or Text List inputs to a single Text or use broadcasting rules to create a Text List. Inputs Input 0 Input Text or Text List. The input is dynamic and the numbering will change depending on the number of connected inputs. Type: Text, List, Required, Single Outputs Text Output Text or Text List Type: Text, List Settings Separator Text The separator is inserted between each input Text or between each element in an input Text List. List Handling Selection Merge handles each element in the input Text List(s) as a word and outputs a Text. Broadcast will use broadcasting rules to create an output Text List where each element is a combination of the input text list. E.g. if A is [&lsquo;My name&rsquo;, &lsquo;is&rsquo;] and B is [&lsquo;John&rsquo;, &lsquo;Doe&rsquo;] and the separator is '_', Merge will output &lsquo;My name_is_John_Doe&rsquo; and Broadcast will output [&lsquo;My name_John&rsquo;, &lsquo;is_Doe&rsquo;]. Values: Concatenate, Broadcast See also Keywords: ", "tags": "", "url": "nodes.text.manipulate.concatenate_text.html"},
{"title": "Split Text", "text": "Split Text Splits the text around the found matches. Inputs Input Input Text(s). Type: Text, List, Required, Single Outputs Output Output Text List or List Of Lists containing Text lists. Type: Text, List Of Lists, List Settings Configure Split At Text Split string at this matching pattern. Matching Options Match Case Boolean Case sensitive matching of the input string. Match Whole Words Only Boolean The matching string must match a group surrounded by whitespace characters in the input string, i.e. &lsquo;and&rsquo; will not find any matches in &lsquo;my name is andy&rsquo;. Split Option Selection How to split the string when a match is found. E.g. if the matching pattern is &lsquo;is&rsquo; and the input string is &lsquo;my name is john doe&rsquo;, Before will output ['my name ', &lsquo;is john doe&rsquo;] After will output [&lsquo;my name is&rsquo;, ' john doe'] Discard Split String will output ['my name &lsquo;, ' john doe&rsquo;] Keep Split String will output [&lsquo;my name&rsquo;, &lsquo;is&rsquo;, &lsquo;john doe&rsquo;] Values: Before, After, Discard Split String, Keep Split String Regular Expressions Edit Regular Expression Boolean Enable matching with regular expression. Regular Expression Text Edit regular expression for matching. See also Keywords: ", "tags": "", "url": "nodes.text.manipulate.split_text.html"},
{"title": "Insert Text", "text": "Insert Text Insert text at the given indices of the input string. Inputs Input Input Text. Type: Text, Required, Single Text Text(s) to be inserted. Type: Text, List, Required, Single Outputs Output Output Text. Type: Text Settings Index Integers Index where Text should be inserted into Input. If you want to insert several strings into the input, insert a Text List in the Text input and specify an array of indeces. The Index array and the Text List input must be the same length. See also Keywords: ", "tags": "", "url": "nodes.text.manipulate.insert_text.html"},
{"title": "Inject Text", "text": "Inject Text This node injects specified input text values into a target text at designated placeholder locations. Placeholders in the target text follow a specific format (e.g., {T0}, {T1}, etc.), with each corresponding to a unique input text value. This allows for dynamic text composition where specified portions of the text can be replaced based on external input. Placeholder Format Syntax: {T&lt;number&gt;} Example: {T0}, {T1}, {T2}, etc. Each placeholder is uniquely identified by a numeric suffix, allowing for multiple injections within a single target text. Handling Backslashes Backslashes (\) are not treated as escape characters in the context of placeholders. Instead, they are preserved as part of the text. If a placeholder follows a backslash (e.g., \{T0}), the backslash remains in the output, and the placeholder is replaced normally. Example: Input: &quot;Hello \{T0}!&quot; (with T0 = &quot;World&quot;) Output: &quot;Hello \World!&quot; Escape Patterns The node supports various brace patterns to handle literal placeholders or specific wrapping needs: Single Braces ({T0}): Replaced with the corresponding input text. Example: &quot;Hello, {T0}&quot; → &quot;Hello, World&quot; (if T0 = &quot;World&quot;). Double Braces ({{T0}}): Preserves the placeholder as a literal, wrapped in single braces. Example: &quot;Hello, {{T0}}&quot; → &quot;Hello, {T0}&quot;. Triple Braces ({{{T0}}}): Replaces the placeholder and wraps the value in single braces. Example: &quot;Hello, {{{T0}}}&quot; → &quot;Hello, {World}&quot; (if T0 = &quot;World&quot;). Quadruple Braces or Higher: For any odd number of braces, the placeholder is replaced, reducing by one level of braces. For any even number of braces, the placeholder is preserved as a literal with half the braces. Example: &quot;Hello, {{{{T0}}}}&quot; → &quot;Hello, {{World}}&quot; (if T0 = &quot;World&quot;) &quot;Hello, {{{{{T0}}}}}&quot; → &quot;Hello, {{{World}}}&quot;. Usage Example Target Text: &quot;Path: {T0}, Literal: {{T1}}, Triple: {{{T2}}}, Backslash: \{T3}&quot; Inputs: T0 = &quot;File&quot; T1 = &quot;Preserved&quot; T2 = &quot;Wrapped&quot; T3 = &quot;World&quot; Result: &quot;Path: File, Literal: {T1}, Triple: {Wrapped}, Backslash: \World&quot; Handling Literal Placeholders Literal placeholders can be handled using the escape mechanisms described above. If a placeholder should remain in the target text without being replaced, ensure it is either: Double Curly Braces: Example: {{T0}} → {T0} Uneven Levels of Braces: Example: Triple braces replace, quadruple preserve, and so on. Inputs T0 Input Text(s) to be injected. Dynamic input, i.e. if T0 is connected and you connect a new input to Append, the newly connected input will be denoted T1. Type: Text, List, Required, Single Outputs Output Output Text(s). Type: Text, List Settings Target Text Text Target text. At the placeholder, denoted by {TO}, {T1} etc, the input Text will be injected. E.g. if the target text is &lsquo;my name is {T0}&rsquo; and the input text in T0 is &lsquo;anna&rsquo;, the output will be &lsquo;my name is anna&rsquo;. NB: The variable name, e.g. T0, is case sensitive. See also Keywords: ", "tags": "", "url": "nodes.text.manipulate.inject_text.html"},
{"title": "Replace Text", "text": "Replace Text Replaces a matching subtext with the specified replacement text. Inputs Input Input Text(s) which contains a subtext that should be replaced. Type: Text, List, Required, Single Outputs Output Output Text(s). Type: Text, List Settings Configure Find Text Specify the subtext to replace in Input. Replace With Text Text to replace the matching subtext in Input with. Matching Options Match Case Boolean Case sensitive matching of the input string. Match Whole Words Only Boolean The matching string must match a group surrounded by whitespace characters in the input string, i.e. &lsquo;and&rsquo; will not find any matches in &lsquo;my name is andy&rsquo;. Regular Expressions Edit Regular Expression Boolean Enable matching with regular expression. Regular Expression Text Edit regular expression for matching. See also Keywords: ", "tags": "", "url": "nodes.text.manipulate.replace_text.html"},
{"title": "Combine Paths", "text": "Combine Paths Inputs Input 0 Missing description. Type: ****, Required, Single Outputs Output Missing description. Type: NodeIOText Settings Prefix Working Directory Boolean Missing description. List Handling Selection Missing description. Values: Concatenate, Broadcast See also Keywords: ", "tags": "", "url": "nodes.text.manipulate.combine_paths.html"},
{"title": "Relative Path", "text": "Relative Path Inputs Input Missing description. Type: ****, Required, Single Outputs Output Missing description. Type: NodeIOText Settings Relative To Directory Path Missing description. Relative to Working Directory Boolean Missing description. See also Keywords: ", "tags": "", "url": "nodes.text.manipulate.relative_path.html"},
{"title": "Find Text", "text": "Find Text Finds all occurences of a match and output a Text List of matches and the indeces of those matches as a Numeric Array. Inputs Input Input Text. Type: Text, List, Required, Single Outputs Output Text List or List Of Lists with found matches. Type: Text, List Of Lists, List Indices Indeces of found matches in Input. Type: Numeric Array, List Settings Configure Find Text Specify the subtext to find in Input. Matching Options Match Case Boolean Case sensitive matching of the input string. Match Whole Words Only Boolean The matching string must match a group surrounded by whitespace characters in the input string, i.e. &lsquo;and&rsquo; will not find any matches in &lsquo;my name is andy&rsquo;. Regular Expressions Edit Regular Expression Boolean Enable matching with regular expression. Regular Expression Text Edit regular expression for matching. See also Keywords: ", "tags": "", "url": "nodes.text.inspect.find_text.html"},
{"title": "Find Words Containing Text", "text": "Find Words Find all words in an input Text that contains a specified subtext. Inputs Input Input Text. Type: Text, List, Required, Single Outputs Output Text List or List Of Lists with found words containing specified subtext. Type: Text, List Of Lists, List Indices Indeces of the first character in words found containing specified subtext in Input. Type: Numeric Array, List Settings Configure Find Text Specify the subtext to find in Input. Matching Options Match Case Boolean Case sensitive matching of the input string. Regular Expressions Edit Regular Expression Boolean Enable matching with regular expression. Regular Expression Text Edit regular expression for matching. See also Keywords: ", "tags": "", "url": "nodes.text.inspect.find_words_containing_text.html"},
{"title": "Find Numbers in Text", "text": "Find Numbers Finds all groups of numbers in a Text, separated by any other character, either as integers or as floating point numbers. Inputs Input Input Text. Type: Text, List, Required, Single Outputs Output Text List or List Of Lists with found groups of numbers. Type: Text, List Of Lists, List Indices Indeces of the first character in groups of numbers in Input. Type: Numeric Array, List Settings Configure Find Decimals Boolean Find decimal numbers. Decimal Separator Text Specify the decimal separator used in Input. Regular Expressions Edit Regular Expression Boolean Enable matching with regular expression. Regular Expression Text Edit regular expression for matching. See also Keywords: ", "tags": "", "url": "nodes.text.inspect.find_numbers_in_text.html"},
{"title": "Text Length", "text": "Text Length Gives the length of a Text or Text List. Inputs Input Input Text. Type: Text, List, Required, Single Outputs Length Length of Text. Type: Numeric Array, List See also Keywords: ", "tags": "", "url": "nodes.text.inspect.text_length.html"},
{"title": "Display", "text": "Display Display values or shapes depending on input in process. Copies input connection to output. Inputs Input Input. Type: Any, List, Required, Single Outputs Output Output. Type: Any, List Settings Clip Selection If the displayed value is longer than 96 characters, the displayed value will be clipped. If End is selected, the characters in the end of the value will be replaced with .... If Beginning is selected, the clipping will be done in the beginning of the value. Values: End, Beginning See also Keywords: ", "tags": "", "url": "nodes.text.visualization.display.html"},
{"title": "Display Property", "text": "Display Property Display a property in process. Copies input connection to output. Inputs Input Input. Type: Any, List, Required, Single Outputs Output Output. Type: Any, List Settings Property Text Path to the property to display. Clip Selection If the displayed value is longer than 96 characters, the displayed value will be clipped. If End is selected, the characters in the end of the value will be replaced with .... If Beginning is selected, the clipping will be done in the beginning of the value. Values: End, Beginning See also Keywords: ", "tags": "", "url": "nodes.text.visualization.display_property.html"},
{"title": "Parse To Array", "text": "Parse Parse text to a numerical or boolean array or scalar. The format of the text should be square brackets &ldquo;[]&rdquo; for each array dimension and comma separator &quot;, &quot; between items. Since it is ambiguous from the text what the data type should be it must be specified. Examples: 3.4 → Scalar number. [1, 2, 3] → 1D array of numbers. [[1, 2], [3, 4]] → 2D array of numbers. [True, False] → 1D array of boolean values. Inputs Input input Text(s) to be parsed. Type: Text, List, Required, Single Outputs Output Output array(s). Type: Numeric Array, Boolean Array, List Settings Data Type Selection Type of data in the resulting array(s). Values: Boolean, Integer32, Integer64, Float32, Float64, Complex64, Complex128 See also Parse Text Keywords: ", "tags": "", "url": "nodes.text.converters.parse_to_array.html"},
{"title": "Save to Disk", "text": "Save Hero Data Save data to disk using Hero data in binary format .hdata or xml format .hxdata. Inputs Input Data that is saved. Type: Any, Required, Single Settings Folder Path Folder where the file is stored. The path can be both absolute and relative. File Text Name of the file. If file extension is omitted, .hdata will be apended. The file ending can be either .hdata for binary storage or .hxdata for xml-based storage. Overwrite Boolean Overwrite file if it already exists. Compress Boolean Compress the file to save space. Will slow down the write and read speed. See also Load Hero Data Keywords: ", "tags": "", "url": "nodes.text.export.save_to_disk.html"},
{"title": "Save to Database", "text": "Save to Database Save data to a specific location in the database under a name specified in the node. Inputs Input The data to be stored in the database. Type: Any, Required, Single Study Link The destination in the database for the data to be stored. For Images and Masks this is optional. If not provided the Metadata will be used to find the destination. Typically this metadata is available for data imported into the database, such as DICOM images. Type: Struct, Required/Optional, Single Settings Use Name from Input Boolean Whether to take the name from the input data (applies to Images and Masks only) or from a node setting. Name in Database Text What name the data should be stored under in the database. See also Keywords: ", "tags": "", "url": "nodes.text.export.save_to_database.html"},
{"title": "Create Study", "text": "Create Study Create a new study in the database. The study is defined by its Study ID, and is connected to a Patient ID in the database at creation. NOTE: If an image with a different Patient ID or Patient Name is saved to this study, it will still be displayed in the Patient ID/Patient name of study in the database panel, but will retain the original Patient ID and Patient name when loaded into the workflow. Outputs Output A structure describing the new study. Type: Struct Settings Database Text The name of the database in which the study is created. Study ID Text The Study ID. This must be a unique ID, two studies cannot share a Study ID. Study Description Text The Study Description, or name of the study. Patient ID Text The Patient ID to which the study belongs. Patient Name Text The patient name. Frame of Reference UID Text The Frame of Reference UID. See also Keywords: ", "tags": "", "url": "nodes.text.export.create_study.html"},
{"title": "Export as Textfile", "text": "Export Text File Export a Text input to file. Inputs Input Input Text. Type: Text, Required, Single Settings Folder Path Output folder. The path can be both absolute and relative. Filename Text Output filename. Append to File Boolean Append to File if it exists. Overwrite Boolean Overwrite file if it exists. See also Keywords: ", "tags": "", "url": "nodes.text.export.export_as_textfile.html"},
{"title": "Create Structure", "text": "Create Structure Create a structure with content from in inputs of the node. The node can accept any number and type of inputs, with a default field name &quot;Field#&quot;, where # is the number of inputs with that name. The input fields can be renamed, but no two fields can have the same name. Inputs Field0 Input of any type. The inputs are dynamic, and the numbering will increase as more inputs are connected. Type: Any, Optional, Single Outputs Output The resulting Structure. Type: Struct Settings Configure Add Field Button Add another field. Field: Field0 Name Text Rename the Field. Type Selection Change the data type of the field. Values: Boolean Array, Boolean Array List, Column, Column List, Contour, Contour List, Image, Image List, List of Lists, Mask, Mask List, Numeric Array, Numeric Array List, Structure, Structure List, Table, Table List, Text, Text List Remove Button Remove the field. See also Keywords: ", "tags": "", "url": "nodes.structure.importcreate.create_structure.html"},
{"title": "Load Hero Data", "text": "Load Hero Data Load Hero Data from disk. Outputs Output The loaded Hero Data. Type: Numeric Array Settings File Filepath Path to the Hero Data file. The path can be both absolute and relative. Data Type Selection The type of the data. Values: Numeric Array, Text, Boolean Array, Image, Mask, Structure, Table, Column, Contour, Text List, Image List, Mask List, Structure List, List of Lists, Table List, Column List, Numeric Array List, Boolean Array List, Contour List See also Keywords: ", "tags": "", "url": "nodes.structure.importcreate.load_hero_data.html"},
{"title": "Import JSON", "text": "Import JSON Import a JSON file as a Struct. A JSON file can start with a list instead of a named object. In this case, Hero will process it and provide the contents of this list in a structure named Root. The node requires that the file consists of either an object (enclosed in curly braces { }) or an array (enclosed in square brackets [ ]), even though the JSON standard permits other formats. Outputs Output Output Struct Type: NodeIOStruct Settings Path Filepath Path to the JSON file. The path can be both absolute and relative. See also Keywords: ", "tags": "", "url": "nodes.structure.importcreate.import_json.html"},
{"title": "Import DICOM as Struct", "text": "Import DICOM File This node allows you to import a DICOM file and convert it into a Hero Struct. You also have the option to import all files from the same series, in which case the node will return a list of structs. Outputs Output The DICOM file returned as a Hero Struct, or a list of Structs. Type: NodeIOStructList Settings File File Path Specify the DICOM file to import. Include Private Tags Boolean Choose whether to include private tags when importing the DICOM file. Import Series Boolean If selected, all DICOM files belonging to the same series in the specified folder will be imported, and returned as a list of structs. See also Keywords: DICOM, import, DICOM tags ", "tags": "", "url": "nodes.structure.importcreate.import_dicom_as_struct.html"},
{"title": "Has Property", "text": "Has Property Check if property exists. Inputs Input Input. Type: Any, List, Required, Single Outputs Output Output True/False. Type: Boolean Array Settings Property Text Property Path. See also Keywords: ", "tags": "", "url": "nodes.structure.getset_property.has_property.html"},
{"title": "Get Property", "text": "Get Property Get property from input. Inputs Input Input new property value. Type: Any, List, Required, Single Outputs Output Output. Type: Numeric Array Settings Property Text Property path. For example, if the input is a single Image the path to the Sex property is Subject.Sex. The paths can be found in the Properties viewer by right-clicking on the property and choosing Copy Property Path. Property Type Selection Property type. Values: Boolean Array, Boolean Array List, Column, Column List, Contour, Contour List, Image, Image List, List of Lists, Mask, Mask List, Numeric Array, Numeric Array List, Structure, Structure List, Table, Table List, Text, Text List See also Keywords: ", "tags": "", "url": "nodes.structure.getset_property.get_property.html"},
{"title": "Edit Property", "text": "Edit Property Modify a property of an input. Only Text, Numeric arrays, and Boolean arrays are editable. The Edit Property node enables users to set the property as a setting within the node, while the Set Property node accepts the property value as an input. The Edit Property node cannot alter the property type, but the Set Property node is able to do so. Inputs Input Input of any type. Type: Any, Required, Single Outputs Output Output of the same type as the input. Type: Numeric Array Settings Value Text Set the new property value. Property Text Property path. For example, if the input is a single Image the path to the Sex property is Subject.Sex. The paths can be found in the Properties viewer by right-clicking on the property and choosing Copy Property Path. See also Keywords: ", "tags": "", "url": "nodes.structure.getset_property.edit_property.html"},
{"title": "Set Property", "text": "Set Property Set a specific property to a value supplied as an input. This operation allows changing the property value type, e.g. from a Numeric Array to a Text List. The property has to exist in the input data. If it does not exist, use the Insert Property node. Inputs Input Input. Type: Any, List, Required, Single New Value New property value. Type: Any, Required, Single Outputs Output Input data with the changed property. Type: Any, List Settings Property Text Property path. For example, if the input is a single Image the path to the Sex property is Subject.Sex. The paths can be found in the Properties viewer by right-clicking on the property and choosing Copy Property Path. Broadcast Input Boolean Broadcast input to property list elements. If set to True and the property is a list, the input will be assigned to each element of the property list. If set to False and the property and input are lists of equal length, the i:th element of the input list is assigned to the i:th element of the property list. See also Keywords: ", "tags": "", "url": "nodes.structure.getset_property.set_property.html"},
{"title": "Insert Property", "text": "Insert Property Insert a Hero Data item at a specific location in input. Inputs Input Input Type: Any, List, Required, Single New Value New value. Type: Any, List, Required, Single Outputs Output Output. Type: Any Settings Property Text Property path. For example, if the input is a single Image the path to the Sex property is Subject.Sex. The paths can be found in the Properties viewer by right-clicking on the property and choosing Copy Property Path. Values: Boolean Array, Boolean Array List, Column, Column List, Contour, Contour List, Image, Image List, List of Lists, Mask, Mask List, Numeric Array, Numeric Array List, Structure, Structure List, Table, Table List, Text, Text List Broadcast Property Boolean Set many values in a list to the same value. See also Keywords: ", "tags": "", "url": "nodes.structure.getset_property.insert_property.html"},
{"title": "Remove Property", "text": "Remove Property Remove a Hero Data item at a specific location in input data. Inputs Input Input Type: Any, List, Required, Single Outputs Output Output Type: Numeric Array Settings Property Text Property Path. See also Keywords: ", "tags": "", "url": "nodes.structure.getset_property.remove_property.html"},
{"title": "Structure Repeater", "text": "Repeater Copies input connection to output. Settings Repeater Description Text The title of the repeater. If used as an input for a group, set value to brief description of expected input type. Sparse Connections Boolean A sparse connection removes the wire between the repeater output and connected nodes, and replaces them with a label displaying the repeater description. This is very useful when you have a large workflow wih many wires. Change Image/Data Name Set New Image/Data Name Boolean Should the image/data get a new name, only applies to Image4D and DataCollection. Misc IOType Text Missing description. See also Keywords: ", "tags": "", "url": "nodes.structure.repeaters.structure_repeater.html"},
{"title": "Structure List Repeater", "text": "Repeater Copies input connection to output. Settings Repeater Description Text The title of the repeater. If used as an input for a group, set value to brief description of expected input type. Sparse Connections Boolean A sparse connection removes the wire between the repeater output and connected nodes, and replaces them with a label displaying the repeater description. This is very useful when you have a large workflow wih many wires. Change Image/Data Name Set New Image/Data Name Boolean Should the image/data get a new name, only applies to Image4D and DataCollection. Misc IOType Text Missing description. See also Keywords: ", "tags": "", "url": "nodes.structure.repeaters.structure_list_repeater.html"},
{"title": "Display", "text": "Display Display values or shapes depending on input in process. Copies input connection to output. Inputs Input Input. Type: Any, List, Required, Single Outputs Output Output. Type: Any, List Settings Clip Selection If the displayed value is longer than 96 characters, the displayed value will be clipped. If End is selected, the characters in the end of the value will be replaced with .... If Beginning is selected, the clipping will be done in the beginning of the value. Values: End, Beginning See also Keywords: ", "tags": "", "url": "nodes.structure.visualization.display.html"},
{"title": "Display Property", "text": "Display Property Display a property in process. Copies input connection to output. Inputs Input Input. Type: Any, List, Required, Single Outputs Output Output. Type: Any, List Settings Property Text Path to the property to display. Clip Selection If the displayed value is longer than 96 characters, the displayed value will be clipped. If End is selected, the characters in the end of the value will be replaced with .... If Beginning is selected, the clipping will be done in the beginning of the value. Values: End, Beginning See also Keywords: ", "tags": "", "url": "nodes.structure.visualization.display_property.html"},
{"title": "Save to Disk", "text": "Save Hero Data Save data to disk using Hero data in binary format .hdata or xml format .hxdata. Inputs Input Data that is saved. Type: Any, Required, Single Settings Folder Path Folder where the file is stored. The path can be both absolute and relative. File Text Name of the file. If file extension is omitted, .hdata will be apended. The file ending can be either .hdata for binary storage or .hxdata for xml-based storage. Overwrite Boolean Overwrite file if it already exists. Compress Boolean Compress the file to save space. Will slow down the write and read speed. See also Load Hero Data Keywords: ", "tags": "", "url": "nodes.structure.export.save_to_disk.html"},
{"title": "Save to Database", "text": "Save to Database Save data to a specific location in the database under a name specified in the node. Inputs Input The data to be stored in the database. Type: Any, Required, Single Study Link The destination in the database for the data to be stored. For Images and Masks this is optional. If not provided the Metadata will be used to find the destination. Typically this metadata is available for data imported into the database, such as DICOM images. Type: Struct, Required/Optional, Single Settings Use Name from Input Boolean Whether to take the name from the input data (applies to Images and Masks only) or from a node setting. Name in Database Text What name the data should be stored under in the database. See also Keywords: ", "tags": "", "url": "nodes.structure.export.save_to_database.html"},
{"title": "Create Study", "text": "Create Study Create a new study in the database. The study is defined by its Study ID, and is connected to a Patient ID in the database at creation. NOTE: If an image with a different Patient ID or Patient Name is saved to this study, it will still be displayed in the Patient ID/Patient name of study in the database panel, but will retain the original Patient ID and Patient name when loaded into the workflow. Outputs Output A structure describing the new study. Type: Struct Settings Database Text The name of the database in which the study is created. Study ID Text The Study ID. This must be a unique ID, two studies cannot share a Study ID. Study Description Text The Study Description, or name of the study. Patient ID Text The Patient ID to which the study belongs. Patient Name Text The patient name. Frame of Reference UID Text The Frame of Reference UID. See also Keywords: ", "tags": "", "url": "nodes.structure.export.create_study.html"},
{"title": "Export DICOM File", "text": "Export DICOM Exports DICOM data to one or more files on disk. This node accepts either a single HeroStruct or a list of HeroStructs containing DICOM data and saves each as a .dcm file in the specified folder. When a list is provided, each file is automatically named using its SOPInstanceUID. Inputs Input A HeroStruct or list of HeroStructs containing DICOM data to be exported. These can represent any valid DICOM objects, such as images, RT structures, or other types of medical datasets. Type: Struct List, Required, Single or Multiple Settings Include Private Tags Boolean When enabled, private DICOM tags from the input data will be preserved in the exported files. Disable this option to export only standard DICOM tags. Folder Directory Path The directory where the DICOM file(s) will be saved. If the specified directory doesn't exist, it will be created automatically. Filename Selection Determines how the output file(s) will be named: SOPInstanceUID: Uses the SOPInstanceUID from the DICOM dataset(s) Custom: Allows you to specify a custom filename (only applicable for single inputs) Note: If the input is a list, filenames will always default to SOPInstanceUID. Values: SOPInstanceUID, Custom Filename Text Custom filename for the exported DICOM file. Only available when a single HeroStruct is provided and &ldquo;Custom&rdquo; is selected in the filename option. Examples Exporting a Single DICOM File Connect a single HeroStruct to the input Select a target folder Choose either SOPInstanceUID or Custom for the filename The file will be saved with the selected name Exporting Multiple DICOM Files Connect a list of HeroStructs to the input Select a target folder Each DICOM file will be named using its SOPInstanceUID automatically See also Keywords: DICOM, Export, File IO, DICOM Writer, Batch Export ", "tags": "", "url": "nodes.structure.export.export_dicom_file.html"},
{"title": "Create List", "text": "Create List Create a List from inputs. Output can be either a List or List Of Lists, depending on the settings. Any type can be combined to Lists, but a List can only contain one type of data. Inputs Input 0 Input of any type. The inputs are dynamic, and the numbering will increase as more inputs are connected. Type: Any, List, Required, Single Outputs Output Output List or List Of Lists Type: List, List Of Lists Settings List Handling Selection Extend will insert each element in the input list to an element in the output list. Broadcast will use broadcasting rules to create the output List Of Lists where the length of the List in each output element is the same. Append will insert an input list as an element in the output List Of Lists. Values: Extend, Broadcast, Append Input Type Selection Manually set the input type. It is autatically set when the first input is connected if Any is selected. Values: Any, Contour, Table, Column, Text, Numeric Array, Boolean Array, Structure, Mask, Image See also Keywords: merge, extend, append ", "tags": "", "url": "nodes.list.createimport.create_list.html"},
{"title": "Load Hero Data", "text": "Load Hero Data Load Hero Data from disk. Outputs Output The loaded Hero Data. Type: Numeric Array Settings File Filepath Path to the Hero Data file. The path can be both absolute and relative. Data Type Selection The type of the data. Values: Numeric Array, Text, Boolean Array, Image, Mask, Structure, Table, Column, Contour, Text List, Image List, Mask List, Structure List, List of Lists, Table List, Column List, Numeric Array List, Boolean Array List, Contour List See also Keywords: ", "tags": "", "url": "nodes.list.createimport.load_hero_data.html"},
{"title": "Get Property", "text": "Get Property Get property from input. Inputs Input Input new property value. Type: Any, List, Required, Single Outputs Output Output. Type: Numeric Array Settings Property Text Property path. For example, if the input is a single Image the path to the Sex property is Subject.Sex. The paths can be found in the Properties viewer by right-clicking on the property and choosing Copy Property Path. Property Type Selection Property type. Values: Boolean Array, Boolean Array List, Column, Column List, Contour, Contour List, Image, Image List, List of Lists, Mask, Mask List, Numeric Array, Numeric Array List, Structure, Structure List, Table, Table List, Text, Text List See also Keywords: ", "tags": "", "url": "nodes.list.getset_property.get_property.html"},
{"title": "Edit Property", "text": "Edit Property Modify a property of an input. Only Text, Numeric arrays, and Boolean arrays are editable. The Edit Property node enables users to set the property as a setting within the node, while the Set Property node accepts the property value as an input. The Edit Property node cannot alter the property type, but the Set Property node is able to do so. Inputs Input Input of any type. Type: Any, Required, Single Outputs Output Output of the same type as the input. Type: Numeric Array Settings Value Text Set the new property value. Property Text Property path. For example, if the input is a single Image the path to the Sex property is Subject.Sex. The paths can be found in the Properties viewer by right-clicking on the property and choosing Copy Property Path. See also Keywords: ", "tags": "", "url": "nodes.list.getset_property.edit_property.html"},
{"title": "Set Property", "text": "Set Property Set a specific property to a value supplied as an input. This operation allows changing the property value type, e.g. from a Numeric Array to a Text List. The property has to exist in the input data. If it does not exist, use the Insert Property node. Inputs Input Input. Type: Any, List, Required, Single New Value New property value. Type: Any, Required, Single Outputs Output Input data with the changed property. Type: Any, List Settings Property Text Property path. For example, if the input is a single Image the path to the Sex property is Subject.Sex. The paths can be found in the Properties viewer by right-clicking on the property and choosing Copy Property Path. Broadcast Input Boolean Broadcast input to property list elements. If set to True and the property is a list, the input will be assigned to each element of the property list. If set to False and the property and input are lists of equal length, the i:th element of the input list is assigned to the i:th element of the property list. See also Keywords: ", "tags": "", "url": "nodes.list.getset_property.set_property.html"},
{"title": "Insert Property", "text": "Insert Property Insert a Hero Data item at a specific location in input. Inputs Input Input Type: Any, List, Required, Single New Value New value. Type: Any, List, Required, Single Outputs Output Output. Type: Any Settings Property Text Property path. For example, if the input is a single Image the path to the Sex property is Subject.Sex. The paths can be found in the Properties viewer by right-clicking on the property and choosing Copy Property Path. Values: Boolean Array, Boolean Array List, Column, Column List, Contour, Contour List, Image, Image List, List of Lists, Mask, Mask List, Numeric Array, Numeric Array List, Structure, Structure List, Table, Table List, Text, Text List Broadcast Property Boolean Set many values in a list to the same value. See also Keywords: ", "tags": "", "url": "nodes.list.getset_property.insert_property.html"},
{"title": "Remove Property", "text": "Remove Property Remove a Hero Data item at a specific location in input data. Inputs Input Input Type: Any, List, Required, Single Outputs Output Output Type: Numeric Array Settings Property Text Property Path. See also Keywords: ", "tags": "", "url": "nodes.list.getset_property.remove_property.html"},
{"title": "Has Property", "text": "Has Property Check if property exists. Inputs Input Input. Type: Any, List, Required, Single Outputs Output Output True/False. Type: Boolean Array Settings Property Text Property Path. See also Keywords: ", "tags": "", "url": "nodes.list.getset_property.has_property.html"},
{"title": "Get Elements", "text": "Get Elements Get elements from a list via indeces, range or a boolean mask. Inputs Input Input List. Type: Any, List, Required, Single Outputs Output Missing description. Type: Any, List Settings Select By Selection Method of selection. Range lets you specify the start and stop rows to include. Index specifies the selected rows via a numeric array, i.e. to get the first and third row, input [0,2]. Bit Mask selects the rows using True/False notation, i.e. if you want the first and third row in a Table, input [1,0,1,0,0]. Values: Range, Index, Bit Mask Start Index Text If Range is selected, this specifies the first selected element. Stop Index Text If Range is selected, this specifies the last selected element. Bit Mask Bits If Bit Mask is selected, input the selected elements via a boolean array. Indices Integers If Index is selected, input selected element indeces here as a numeric array of integers. Output Type Selection Specify the output type. Values: Contour List, Table List, Column List, Text List, Structure List, List of Lists, Mask List, Image List, Numeric Array List, Boolean Array List Single Element as List Boolean Output a single element as a list with length [1]. Useful when output is not known before running and can be either a selected element or a list. See also Keywords: ", "tags": "", "url": "nodes.list.getset_property.get_elements.html"},
{"title": "Get Count", "text": "Count Count the number of elements in an input list. Inputs Input Input list. Type: Any, Required, Single Outputs Output Output number of elements. Type: Numeric Array See also Keywords: ", "tags": "", "url": "nodes.list.getset_property.get_count.html"},
{"title": "Image List Repeater", "text": "Repeater Copies input connection to output. Settings Repeater Description Text The title of the repeater. If used as an input for a group, set value to brief description of expected input type. Sparse Connections Boolean A sparse connection removes the wire between the repeater output and connected nodes, and replaces them with a label displaying the repeater description. This is very useful when you have a large workflow wih many wires. Change Image/Data Name Set New Image/Data Name Boolean Should the image/data get a new name, only applies to Image4D and DataCollection. Misc IOType Text Missing description. See also Keywords: ", "tags": "", "url": "nodes.list.repeaters.image_list_repeater.html"},
{"title": "Mask List Repeater", "text": "Repeater Copies input connection to output. Settings Repeater Description Text The title of the repeater. If used as an input for a group, set value to brief description of expected input type. Sparse Connections Boolean A sparse connection removes the wire between the repeater output and connected nodes, and replaces them with a label displaying the repeater description. This is very useful when you have a large workflow wih many wires. Change Image/Data Name Set New Image/Data Name Boolean Should the image/data get a new name, only applies to Image4D and DataCollection. Misc IOType Text Missing description. See also Keywords: ", "tags": "", "url": "nodes.list.repeaters.mask_list_repeater.html"},
{"title": "Contour List Repeater", "text": "Repeater Copies input connection to output. Settings Repeater Description Text The title of the repeater. If used as an input for a group, set value to brief description of expected input type. Sparse Connections Boolean A sparse connection removes the wire between the repeater output and connected nodes, and replaces them with a label displaying the repeater description. This is very useful when you have a large workflow wih many wires. Change Image/Data Name Set New Image/Data Name Boolean Should the image/data get a new name, only applies to Image4D and DataCollection. Misc IOType Text Missing description. See also Keywords: ", "tags": "", "url": "nodes.list.repeaters.contour_list_repeater.html"},
{"title": "Column List Repeater", "text": "Repeater Copies input connection to output. Settings Repeater Description Text The title of the repeater. If used as an input for a group, set value to brief description of expected input type. Sparse Connections Boolean A sparse connection removes the wire between the repeater output and connected nodes, and replaces them with a label displaying the repeater description. This is very useful when you have a large workflow wih many wires. Change Image/Data Name Set New Image/Data Name Boolean Should the image/data get a new name, only applies to Image4D and DataCollection. Misc IOType Text Missing description. See also Keywords: ", "tags": "", "url": "nodes.list.repeaters.column_list_repeater.html"},
{"title": "Table List Repeater", "text": "Repeater Copies input connection to output. Settings Repeater Description Text The title of the repeater. If used as an input for a group, set value to brief description of expected input type. Sparse Connections Boolean A sparse connection removes the wire between the repeater output and connected nodes, and replaces them with a label displaying the repeater description. This is very useful when you have a large workflow wih many wires. Change Image/Data Name Set New Image/Data Name Boolean Should the image/data get a new name, only applies to Image4D and DataCollection. Misc IOType Text Missing description. See also Keywords: ", "tags": "", "url": "nodes.list.repeaters.table_list_repeater.html"},
{"title": "Numeric Array List Repeater", "text": "Repeater Copies input connection to output. Settings Repeater Description Text The title of the repeater. If used as an input for a group, set value to brief description of expected input type. Sparse Connections Boolean A sparse connection removes the wire between the repeater output and connected nodes, and replaces them with a label displaying the repeater description. This is very useful when you have a large workflow wih many wires. Change Image/Data Name Set New Image/Data Name Boolean Should the image/data get a new name, only applies to Image4D and DataCollection. Misc IOType Text Missing description. See also Keywords: ", "tags": "", "url": "nodes.list.repeaters.numeric_array_list_repeater.html"},
{"title": "Boolean Array List Repeater", "text": "Repeater Copies input connection to output. Settings Repeater Description Text The title of the repeater. If used as an input for a group, set value to brief description of expected input type. Sparse Connections Boolean A sparse connection removes the wire between the repeater output and connected nodes, and replaces them with a label displaying the repeater description. This is very useful when you have a large workflow wih many wires. Change Image/Data Name Set New Image/Data Name Boolean Should the image/data get a new name, only applies to Image4D and DataCollection. Misc IOType Text Missing description. See also Keywords: ", "tags": "", "url": "nodes.list.repeaters.boolean_array_list_repeater.html"},
{"title": "Text List Repeater", "text": "Repeater Copies input connection to output. Settings Repeater Description Text The title of the repeater. If used as an input for a group, set value to brief description of expected input type. Sparse Connections Boolean A sparse connection removes the wire between the repeater output and connected nodes, and replaces them with a label displaying the repeater description. This is very useful when you have a large workflow wih many wires. Change Image/Data Name Set New Image/Data Name Boolean Should the image/data get a new name, only applies to Image4D and DataCollection. Misc IOType Text Missing description. See also Keywords: ", "tags": "", "url": "nodes.list.repeaters.text_list_repeater.html"},
{"title": "Structure List Repeater", "text": "Repeater Copies input connection to output. Settings Repeater Description Text The title of the repeater. If used as an input for a group, set value to brief description of expected input type. Sparse Connections Boolean A sparse connection removes the wire between the repeater output and connected nodes, and replaces them with a label displaying the repeater description. This is very useful when you have a large workflow wih many wires. Change Image/Data Name Set New Image/Data Name Boolean Should the image/data get a new name, only applies to Image4D and DataCollection. Misc IOType Text Missing description. See also Keywords: ", "tags": "", "url": "nodes.list.repeaters.structure_list_repeater.html"},
{"title": "List of Lists Repeater", "text": "Repeater Copies input connection to output. Settings Repeater Description Text The title of the repeater. If used as an input for a group, set value to brief description of expected input type. Sparse Connections Boolean A sparse connection removes the wire between the repeater output and connected nodes, and replaces them with a label displaying the repeater description. This is very useful when you have a large workflow wih many wires. Change Image/Data Name Set New Image/Data Name Boolean Should the image/data get a new name, only applies to Image4D and DataCollection. Misc IOType Text Missing description. See also Keywords: ", "tags": "", "url": "nodes.list.repeaters.list_of_lists_repeater.html"},
{"title": "Filter List", "text": "Filter List Filter an input List on a property value of each list element. For example, you can select all images with a certain name or metadata tag from a list. Inputs Input Input List. Type: List, List, Required, Single Outputs Output Resulting List. Type: List Index The indeces of the elements in the input List that fulfilled the filter condition. Type: Numeric Array Settings Property Settings Property Path Text The path to the property you want to filter on. For example, to filter on the name of the image, set the Property Path to Name. To filter on the echo time in the third volume of an Image, set the Property Path to Metadata[2].EchoTime. N.B. Filter List assumes that you want to filter a list, so the first index is omitted, i.e. don't write [:].Metadata[2].EchoTime. Value Type Selection The type of the property you want to match on. Values: Text, Numeric, Boolean Match Settings Matching Text Text Matching text. Matching Number Float Matching numerical value. Boolean Boolean Matching boolean. Case Sensitive Boolean Case senitive text matching. Text Condition Selection Condition for text matching. For example: to select all MR images from a list of images with mixed modalitites, set the Text condition to be Equal, and the Matching Text to be MR, and set the Property Path to the property containing the modality information. Values: Contains, Equals, Regex Numeric Condition Selection Condition for numerical matching. For example: to select all MR images with an echo time longer than 50 ms, set the numeric condition to be Greater, and the matching number to 50, and set the Property Path to the property containing the echo time information. Values: Equal, Greater Than, Greater or Equal, Less Than, Less or Equal, Not Equal Value Settings Multiple Value Condition Selection Return a match if any value or all values in an array matches the numeric or logical condition. For example, if the property is a numeric array such as Position, the Matching Number is 50, and the Numeric Condition is Equals; Any will return a match if any number in the position array is 50. If you select All, every number in Position must be 50 to return a match. Values: Any, All Action Settings Action Selection Keep or discard matches. Values: Keep, Discard See also Keywords: ", "tags": "", "url": "nodes.list.modify.filter_list.html"},
{"title": "Sort List", "text": "Sort List Sort an input List on a property value of each list element. For example, you can sort a list alphabetically by the Name property or by z-position by the Position[2] property. Inputs Input Input List. Type: List, Required, Single Outputs Output Resulting List. Type: List Index The indeces of the elements in the input List corresponding the the elements in the output List. Type: Numeric Array Settings Sort Selection Sort the List ascending or descending. Values: Ascending, Descending Sort By Property Text The path to the property you want to sort on. For example, to sort on the name of the image, set the Property Path to Name. To sort on the echo time in the third volume of an Image, set the Property Path to Metadata[2].EchoTime. N.B. Sort List assumes that you want to sort a list, so the first index is omitted, i.e. don't write [:].Metadata[2].EchoTime. See also Keywords: ", "tags": "", "url": "nodes.list.modify.sort_list.html"},
{"title": "Merge List of Lists", "text": "Merge Lists of Lists Merge lists of lists into one single list of with specified type of content. The order of elements in the output will be such that the upper most connected input will be placed first, then the second upper most connection and so on. Inputs Input 0 Input lists of lists to be merged. Or inputs lists, which will be interpreted as a list of lists with a single element. Type: List of Lists, Required, Single Outputs Output The merge list of specified type. Type: Any Settings Output Type Selection The type of list the output should be. If some input contains data that does not match this, an error will be thrown. Values: Contour List, Table List, Column List, Text List, Structure List, List of Lists, Mask List, Image List, Numeric Array List, Boolean Array List See also Keywords: ", "tags": "", "url": "nodes.list.modify.merge_list_of_lists.html"},
{"title": "Display", "text": "Display Display values or shapes depending on input in process. Copies input connection to output. Inputs Input Input. Type: Any, List, Required, Single Outputs Output Output. Type: Any, List Settings Clip Selection If the displayed value is longer than 96 characters, the displayed value will be clipped. If End is selected, the characters in the end of the value will be replaced with .... If Beginning is selected, the clipping will be done in the beginning of the value. Values: End, Beginning See also Keywords: ", "tags": "", "url": "nodes.list.visualization.display.html"},
{"title": "Display Property", "text": "Display Property Display a property in process. Copies input connection to output. Inputs Input Input. Type: Any, List, Required, Single Outputs Output Output. Type: Any, List Settings Property Text Path to the property to display. Clip Selection If the displayed value is longer than 96 characters, the displayed value will be clipped. If End is selected, the characters in the end of the value will be replaced with .... If Beginning is selected, the clipping will be done in the beginning of the value. Values: End, Beginning See also Keywords: ", "tags": "", "url": "nodes.list.visualization.display_property.html"},
{"title": "Save to Disk", "text": "Save Hero Data Save data to disk using Hero data in binary format .hdata or xml format .hxdata. Inputs Input Data that is saved. Type: Any, Required, Single Settings Folder Path Folder where the file is stored. The path can be both absolute and relative. File Text Name of the file. If file extension is omitted, .hdata will be apended. The file ending can be either .hdata for binary storage or .hxdata for xml-based storage. Overwrite Boolean Overwrite file if it already exists. Compress Boolean Compress the file to save space. Will slow down the write and read speed. See also Load Hero Data Keywords: ", "tags": "", "url": "nodes.list.export.save_to_disk.html"},
{"title": "Save to Database", "text": "Save to Database Save data to a specific location in the database under a name specified in the node. Inputs Input The data to be stored in the database. Type: Any, Required, Single Study Link The destination in the database for the data to be stored. For Images and Masks this is optional. If not provided the Metadata will be used to find the destination. Typically this metadata is available for data imported into the database, such as DICOM images. Type: Struct, Required/Optional, Single Settings Use Name from Input Boolean Whether to take the name from the input data (applies to Images and Masks only) or from a node setting. Name in Database Text What name the data should be stored under in the database. See also Keywords: ", "tags": "", "url": "nodes.list.export.save_to_database.html"},
{"title": "Create Study", "text": "Create Study Create a new study in the database. The study is defined by its Study ID, and is connected to a Patient ID in the database at creation. NOTE: If an image with a different Patient ID or Patient Name is saved to this study, it will still be displayed in the Patient ID/Patient name of study in the database panel, but will retain the original Patient ID and Patient name when loaded into the workflow. Outputs Output A structure describing the new study. Type: Struct Settings Database Text The name of the database in which the study is created. Study ID Text The Study ID. This must be a unique ID, two studies cannot share a Study ID. Study Description Text The Study Description, or name of the study. Patient ID Text The Patient ID to which the study belongs. Patient Name Text The patient name. Frame of Reference UID Text The Frame of Reference UID. See also Keywords: ", "tags": "", "url": "nodes.list.export.create_study.html"},
{"title": "Create Python Plugin", "text": "Python Plugin To execute a Python script, create a node and define its inputs, output, and settings using the node editor. You can access the node editor by double-clicking on the node. By default, the software uses the included Hero Python environment. However, if you want to use a different environment, you can add it in the Settings menu. You can set the environment for each node individually by expanding the Execution settings group, which is collapsed by default. See also Keywords: ", "tags": "", "url": "nodes.applications.create_python_plugin.html"},
{"title": "Import Deep Learning Model", "text": "Import DL model Import trained deep learning models from standalone (.pb, .onnx) formats. After a model has been succesfully imported, double-clicking the node opens the model editor, which allows for detailed customization of the node. Settings Model Path Filepath Select the path to the trained model. Supported formats are frozen graphs (.pb) and .onnx. Propagate input geometry Boolean If set to true, the geometry of the output images will be defined from the first input image. Otherwise, default values will be used. Propagate input metadata Boolean If set to true, the metadata of the output images will be defined from the first input image. Otherwise, default values will be used. See also Keywords: Deep Learning, DL, Machine Learning, ML, AI ", "tags": "", "url": "nodes.applications.import_deep_learning_model.html"},
{"title": "Dose Volume Histogram", "text": "DVH Produces the dose volume histogram for the supplied dose matrix and structure(s). The structures can be supplied as Images (i.e. Fuzzy Masks) to ensure that the output values are accurate, or as Masks if accuracy is less important or the structures are larger. Statistics are weighted by the intensity of the Fuzzy Mask. See the Fuzzy Mask section in To Mask for a more detailed description of the concept. Any image can be supplied to the Dose input – it is very important that the user ensures quality of the input data, i.e. that it is in fact a dose image. Inputs Dose Image(s) containing the dose to be evaluated. Dose images are normally produced by importing DICOM RT DOSE, or RD files. Type: Image, List, Required, Single Volume(s) Input volumes, provided as Masks or Images (Fuzzy Masks). Type: Mask, Image, List, Required, Multiple Outputs DVH A table with the DVH plot data. The first column lists the dose levels (x-axis) and each of the following columns contain the volume levels (y-axis) for a specific structure. Type: Table Stats A table containing the DVH parameters. Basic parameters include image and structure information, such as names and volume. It also includes Dmin, Dmax and Dmean by defeault. It also includes other parameters that are specified in the Node Settings panel, for example D95. Type: Table Settings Histogram Prescribed Dose [Gy] Float Set the prescribed dose (i.e. which level should represent 100% dose). Title Text Title of the plot. Minimum Dose [Gy] Float Minimum dose of the histogram. Maximum Dose [Gy] Float Maximum dose of the histogram. Bins Integer Set the number of histogram bins. Dose DVH Statistics D(%) [%] Numbers Set the dose levels of interest to be explicitly displayed in the DVH Data output, specified in % of volume and output as % of prescribed dose. D(%) [Gy] Numbers Set the dose levels of interest to be explicitly displayed in the DVH Data output, specified in % of volume and output as absolute dose. D(cc) [%] Numbers Set the dose levels of interest to be explicitly displayed in the DVH Data output, specified in absolute volume and output as % of prescribed dose. D(cc) [Gy] Numbers Set the dose levels of interest to be explicitly displayed in the DVH Data output, specified in absolute volume and output as absolute dose. Volume DVH Statistics V(%) [%] Numbers Set the volume levels of interest to be explicitly displayed in the DVH Data output, specified in % of prescribed dose and output as % of volume. V(%) [cc] Numbers Set the volume levels of interest to be explicitly displayed in the DVH Data output, specified in % of prescribed dose and output as absolute volume. V(Gy) [%] Numbers Set the volume levels of interest to be explicitly displayed in the DVH Data output, specified in absolute dose and output as % of volume. V(Gy) [cc] Numbers Set the volume levels of interest to be explicitly displayed in the DVH Data output, specified in absolute dose and output as absolute volume. See also Keywords: dvh, radiotherapy ", "tags": "", "url": "nodes.applications.radiotherapy.dose_volume_histogram.html"},
{"title": "Gamma Index", "text": "Gamma Index Calculates the gamma index, first introduced by Low et al, between a reference and an evaluation dose distribution in 3D with sub-voxel accuracy according to the algorithm described by Wendling et al. It will only calculate the gamma index for reference voxels &gt;0. Definition of the gamma index The gamma index combines the dose difference and the distance difference into a dimensionless metric. In principle, this metric should be calculated for each reference point against all points in the evaluated dose distribution. The gamma statistic is calculated as \[ \begin{equation} \Gamma(\textbf{r}_R,\textbf{r}_E) = \sqrt{\frac{\Delta r^2(\textbf{r}_R,\textbf{r}_E)}{\delta r^2} + \frac{\Delta D^2(\textbf{r}_R,\textbf{r}_E)}{\delta D^2}} \label{eq:sample} \end{equation} \] where \(\delta r\) is the distance criterion (distance to agreement or DTA) and \(\delta D\) is the dose difference criterion. The \(\gamma\) is then taken as the minimum \(\Gamma\) value over all evaluated points. If \(\gamma &lt; 1\), that point will pass. Standard values for \(\delta r\) is 3 mm and \(\delta D\) is 3%, and a standard value for accepting agreement between two distributions is usually that 97% of all evaluated points should pass. Inputs Reference Dose An Image containing the dose matrix to be used as reference. This image is normally produced by importing a DICOM RT DOSE, or RD file. Type: Image, List, Required, Single Evaluated Dose An Image containing the dose matrix to be evaluated. This image is normally produced by importing a DICOM RT DOSE, or RD file. It must have the same matrix size as the reference dose. Type: Image, List, Required, Single Mask A Mask which specifies in which area the gamma index should be evaluated. It only applies to points in the evaluated dose. It must have the same matrix size as the reference dose. Type: Mask, List, Optional, Single Outputs Gamma Map A parameter map which contains the \(\gamma\) values. Type: Image, List Fail Map A Mask which is TRUE where \(\gamma &gt; 1\), i.e. failed points. Type: Mask, List Gamma Index A table which contains information on the gamma evaluation, such as names of the evaluated distributions, the number of evaluated voxels and the gamma pass rate. Type: Table, List Settings Dose Criteria [%] Float Set the dose criterion. Distance Criteria [mm] Float Set the distance criterion. Search Radius [mm] Float Set the radius of the sphere around each evaluated voxel to evaluate the gamma index for. If the user desires a pass/fail gamma evaluation, the Search Radius can be set equal to Distance Criteria. If a more thorough evaluation is desired, set the Search Radius to at least 3 times the Distance Criteria. Increasing the search radius increases the computation time. Step Size [mm] Float Determines the resolution of the evaluation, i.e. the accuracy of the interpolation. Recommended step size is at most 1 / 3 of the distance to agreement(DTA) and a fraction of the resolution of the voxel size. As an example, for a 1 mm DTA and voxel size of 2 mm, a step size of 0.25 mm would be suitable. Increasing resolution increases computation time. Prescribed Dose [Gy] Float The dose to which the dose criteria is related to. I.e. if a 3% dose criterion is chosen and the prescribed dose is 10 Gy, the absolute dose difference criteria in the gamma calculations will be 0.3 Gy. See also References 1. Low D a, Harms WB, Mutic S, et al. A technique for the quantitative evaluation of dose distributions. Med. Phys. 1998;25:656–61. 2. Wendling M, Zijp LJ, McDermott LN, et al. A fast algorithm for gamma evaluation in 3D. Med. Phys. 2007;34:1647–54. Keywords: ", "tags": "", "url": "nodes.applications.radiotherapy.gamma_index.html"},
{"title": "Equivalent Uniform Dose", "text": "Equivalent Uniform Dose Calculates the equivalent uniform dose (EUD), tumor control probability (TCP) and normal tissue complication probability (NTCP) to volumes, which can be used for quantitatively comparing and reporting inhomogeneous dose distributions based on radiobiological effect. The EUD parameter summarizes the 3D dose distribution in a volume to a dose &ldquo;which, when distributed uniformely across the target volume, cases the survival of the same number of clonogens&rdquo;, as described by Niemierko. EUD is calculated as follows: \[ \begin{equation} EUD = \left(\sum_i{v_i D_i^a}\right)^{1/a} \label{eq:1} \end{equation} \] where \(v_i\) is the fractional organ volume recieving a dose \(D_i\) and \(a\) is a tissue specific parameter that describes the volume effect. TCP is calculated as \[ \begin{equation} TCP = \frac{1}{1 + \left(\frac{TCD_{50}}{EUD}\right)^{4\gamma50}} \label{eq:2} \end{equation} \] where \(\gamma_{50}\) describes the slope of the dose-response curve. \(TCD_{50}\) is the dose to control 50% of the tumors. NTCP is calculated as \[ \begin{equation} NTCP = \frac{1}{1 + \left(\frac{TD_{50}}{EUD}\right)^{4\gamma50}} \label{eq:3} \end{equation} \] where \(TD_{50}\) is the tissue tolerance dose, i.e. the dose that causes normal tissue complication in 50% of cases. Inputs Dose Image(s) containing the dose matrix to be evaluated. This image is normally produced by importing a DICOM RT DOSE, or RD file. Type: Image, List, Required, Single Volume(s) Mask(s) containing the regions of interest for which to calculate the EUD. Must have the same matrix size as the dose. Type: Mask, List, Required, Single Outputs Output A table containing information on the dose and structures evaluated as well as the EUD, normal tissue complication probability (NTCP) and and tumor control probability (TCP). Type: Table Settings Volume Effect (a) [1] Float Tissue specific parameter that describes volume effect. The volume effect in refers to the relationship between the size of the tumor and the amount of radiation needed to effectively treat it. Larger tumors require higher doses of radiation to achieve an equivalent level of cell killing as smaller tumors, leading to an increase in the risk of side effects to healthy tissue. Dose-Reponse Slope (γ50) [1] Float Slope of the dose-response curve. The dose-response slope measures the relationship between radiation dose and the level of cell killing in a tumor. A steeper slope means the tumor is more sensitive to radiation and less radiation is needed for the same level of cell killing, while a flatter slope means the opposite. Tissue Tolerance Dose (TD50) [Gy] Float The tissue tolerance dose, i.e. the dose that causes normal tissue complication in 50% of cases. Tumor Control Dose (TCD50) [Gy] Float The dose of radiation that locally controls 50% of tumors. Merge Tables Boolean If output produces a list, merge the list into one table. See also References 1. %22Reporting and analyzing dose distributions: A concept of equivalent uniform dose%22, Medical Physics, 1996, Andrzej Niemierko. Keywords: EUD, TCP, NTCP, equivalent uniform dose, normal tissue complication probablity, tumor control ", "tags": "", "url": "nodes.applications.radiotherapy.equivalent_uniform_dose.html"},
{"title": "Radiological Depth Calculations", "text": "Radiological Depth Inputs Relative Electron Density Missing description. Type: Image, Required, Single Outputs Depths Missing description. Type: Table Settings Center Point Integers Missing description. Angles Integers Missing description. See also Keywords: ", "tags": "", "url": "nodes.applications.radiotherapy.radiological_depth_calculations.html"},
{"title": "Standardized Uptake Value", "text": "SUV Calculates the standardized uptake value (SUV) of a PET image. The SUV is a dimensionless, semiquantative measure of tracer uptake, i.e. it is the ratio of actavity in each voxel related to the injected activity. It is calculated as \[ \begin{equation} SUV = \frac{r}{(a'/w)} \label{eq:sample} \end{equation} \] where \(r\) is the radioactivity concentration measured by the PET scanner, \(a'\) is the decay corrected amount of injected tracer and \(w\) is the patient weight. Inputs PET Image PET image(s). To calculcate SUV (without having to override the metadata and provide numbers manually), some metadata tags pertaining to half-life, patient weight, total administered dose and administration time are mandatory. Type: Image, List, Required, Single Outputs SUV Image The output SUV parameter map(s). Type: Image, List Settings Override Metadata Patient Weight Boolean If set the specified patient weight will be used instead of the weight from metadata. Half Life Boolean If set the specified half life will be used instead of the half life from metadata. Total Dose Boolean If set the specified dose will be used instead of the dose from metadata. Administration Date Boolean If set the administration date will be used instead of the date from metadata. Administration Time Boolean If set the administration time will be used instead of the time from metadata. Override Parameters Patient Weight [kg] Float New patient weight in kg. Half Life [s] Float New halflife in seconds. Total Dose [MBq] Float New total dose in MBq. Administration Date Text New administration date, format as yyyymmdd. Administration Time Text New administration time format as HHMMSS.SSS. See also References SUV on Wikipedia Keywords: ", "tags": "", "url": "nodes.applications.pet.standardized_uptake_value.html"},
{"title": "ADC", "text": "ADC To calculate an apparent diffusion coefficient (ADC) map based on diffusion weighted images, at least two volumes with different b-values are required. An optional mask can also be provided to limit the calculations to a region of interest. Two methods can be used for the calculation of the ADC map: a linear (fast) method and a nonlinear (slower) method. Both methods typically produce good results, but the linear method involves taking the logarithm of a signal before fitting parameters and may not treat noise optimally. Therefore, for lower signal-to-noise ratio data, the nonlinear method is preferred. The estimation is based on a signal equation \[ S_i = S_0 \exp(-b_i \cdot ADC), i=0,1,2,\ldots. n \] where \(i\) is an index over \(n\) images acquired with different b-values. The unit of the ADC map in determined by the unit of the b-values. A common b-value unit used in most MRI scanners and in DICOM tags are \(\textrm{s}/\textrm{mm}^2\), and common b-values are in the range [0, 2000]. This gives the unit of the ADC map in \(\textrm{mm}^2/\textrm{s}\). This is usually multiplied by a factor of 1e6 to give ADC values in approximate range [0, 3500]. Another common unit for b-values is \(\textrm{ms}/\mu\textrm{m}^2\), and common b-values are in the range [0, 2]. This gives the unit of the ADC map in \(\mu\textrm{m}^2/\textrm{ms}\), and ADC values are in the approximate range [0, 3.5]. One benefit of these values are that they don't require scaling to be easily readable without scientific notification. Inputs Dataset Input diffusion weighted dataset. Different b-values must be found in one or more channels of the dataset. Type: Image, Required, Single Mask A 3D binary mask defining the region in the image where the ADC map is calculated. Type: Mask, Optional, Single Outputs ADC ADC map. Type: Image S0 The signal with no diffusion weighting. Type: Image Settings Configure Algorithm Selection Use a linearized or a nonlinear fitting model. When selecting a nonlinear model, equation (1) is fit directly with a square loss term. In the linearized case the data is transformed using a logarithm to yield a linear system of equations: \(\ln{S_i} = \ln{S_0} - b_i \cdot ADC, i=0,1,2,\ldots, n\). The ADC values and \(S_0\) are obtained using linear regression. Values: Linear, NonLinear Batch Size Integer The number of voxels that are computed per batch. This is a trade-off between performance and memory consumption. Keep Metadata Boolean Keep or discard metadata in the parameter maps. Metadata B-values Source Selection Select the b-value source for the calculation. The b-values can be taken from the metadata, or can be supplied as an input Numeric Array. Values: Metadata, Numeric Array Input B-value Tag Text The B-value tag name in the metadata. Configure NonLinear Tolerance Float The threshold change in the objective function. Changes smaller than this value imply that the fitting has converged. Max Iterations Integer Maximum number of iterations. Return Convergence Map Boolean Return a binary mask, where all true voxels have converged in the fit. This can be used to exclude voxels that did not converge. See also Keywords: ", "tags": "", "url": "nodes.applications.mri.diffusion.adc.html"},
{"title": "IVIM", "text": "IVIM Performs an analysis of MRI images using the Intravoxel Incoherent Motion (IVIM) model. The IVIM model is a technique used to quantify the diffusion and perfusion of water molecules in biological tissues. The IVIM signal model is: \[ S = S0\left(f\exp(-bD^{*}) + (1-f)\exp(-bD)\right) \] The output is a set of parameters that can be used to evaluate the diffusion and perfusion properties: S0: The signal intensity in the absence of diffusion weighting (b-value = 0). S0 represents the overall water content in the tissue being imaged and is related to the proton density. f: The perfusion fraction, which is the fraction of water molecules that undergo microcirculation within the capillaries and small vessels in the tissue. f is a measure of the relative contribution of the perfusion component to the DW-MRI signal. D*: The psudo-diffusion coefficient of the water molecules in the microcirculation compartment. It is independent of the direction of the diffusion-weighting gradients. D: The pure diffusion coefficient, which is the effective diffusion coefficient of the water molecules in the tissue. It is dependent on the direction of the diffusion-weighting gradients. The fitting is done in the following steps: Estimate parameters using linear fit: Estimate D and S0 (referred to as \(\textrm{S0}_1\)) using a linear fit of the high b-values, as defined in the settings. Estimate D* and S0 (referred to as \(\textrm{S0}_2\)) using a linear fit of the low b-values, as defined in the settings. Estimate f as \(f=1-\frac{S0_2}{S0_1}\). Assign S0 as S02 Estimate S0, D* and f using a non-linear fit, keeping D fixed. Optional: Do a full model, non-linear fit, of all parameters, with the estimates in steps 1-4 as initial guess. Inputs Dataset Input diffusion weighted dataset. Different b-values must be found in one or more channels of the dataset. Type: Image, List, Required, Single Mask A 3D binary mask defining the region in the image where the IVIM parameter maps are calculated. Type: Mask, List, Optional, Single Outputs S0 The estimated \(S0\) parameter map. Type: Image f The estimated \(f\) parameter map. Type: Image D* The estimated \(D^*\) parameter map. Type: Image D The estimated \(D\) parameter map. Type: Image Convergence Mask indicating where the fit has converged. Type: Mask Settings Configure Perfusion Upper b-value Float Highest b-value used for estimating the perfusion part of the signal. Diffusion Lower b-value Float Lowest b-value used for estimating the diffusion part of the signal. Full Nonlinear Fit Boolean Perform a full model, non-linear fit of all parameters, with the estimates in steps 1-4 as initial guess. Batch Size Integer The number of voxels that are computed per batch. This is a trade-off between performance and memory consumption. Keep Metadata Boolean Keep or discard metadata in the parameter maps. Metadata B-values Source Selection Select the b-value source for the calculation. The b-values can be taken from the metadata, or can be supplied as an input Numeric Array. Values: Metadata, Numeric Array Input B-value Tag Text Name of the B-Value tag in the metadata. Bounds S0 Bounds Numbers Bounds on S0, either empty if no bounds or on the format \([lower, upper]\). f Bounds Numbers Bounds on f, either empty if no bounds or on the format \([lower, upper]\). D* Bounds Numbers Bounds on \(D^*\), either empty if no bounds or on the format \([lower, upper]\). D Bounds Numbers Bounds on D, either empty if no bounds or on the format \([lower, upper]\). Configure NonLinear Tolerance Float The threshold change in the objective function. Changes smaller than this value imply that the fitting has converged. Return Convergence Map Boolean Output a binary mask, where all true voxels have converged in the fit. This can be used to exclude voxels that did not converge. Partial Fit, Max Iterations Integer Maximum number of iterations for the partial fit, described in in step 4. Full Fit, Max Iterations Integer Maximum number of iterations for the full fit, described in in step 5. See also Keywords: ", "tags": "", "url": "nodes.applications.mri.diffusion.ivim.html"},
{"title": "Import .bvec/.bval/.btns", "text": "Import from Text File Import the content of a text file as a numeric array. Outputs Output Output numeric array Type: Numeric Array Settings Path Filepath Path to text file. The path can be both absolute and relative. Delimiter Text Delimiter in the text file, i.e. the character that is used to separate elements. Can be expressed as a single character, or a regular expression (RegEx). Useful RegEx examples: \s+ describes one or more spaces. This is the default value. ,\s* describes a comma, followed by zero or more spaces. File has Headers Boolean If True, the first row is treated as the column headers, and will ignored when reading the file content. See also Keywords: ", "tags": "", "url": "nodes.applications.mri.diffusion.import_.bvec.bval.btns.html"},
{"title": "T1 Mapping (IR)", "text": "T1 Estimation Calculate a T1 map using spin echo inversion recovery (IR) data. The input must be a multi-channel image, where each volume has an associated flip angle (FA) and repetition time (TR). At least two volumes are required, however, more are advised if a larger range of T1 values are expected. Flip angle (FA) and repetition time (TR) can be supplied via the metadata for each volume, or as input numerical arrays. An optional mask can also be provided to limit the calculations to a region of interest. Produces a T1 map in the same units as TR, and \(\text{S}_0\) which is a proton and T2 weighted image. The parameter values are obtained by fitting the data to the signal equation: \[ \begin{equation} S_i = S_0(1–(1-\cos(FA))e^{-T1/TI_i}+e^{-TR/T1}),~~~~i = 1, 2, ..., n \tag{1} \end{equation} \] where \(n\) is the number of images used. Inputs Dataset An image or a list of images (for batch processing) where channel dimensions are used for the different \(TI\) values. At least two volumes are needed and they should have the same \(TR\) and echo time. Type: Image, List, Required, Single Mask Mask(s) used to confine the region in which the signal model is fitted. Type: Mask, List, Optional, Single Outputs T1 The estimated \(T1\) parameter map. Type: Image, List S0 The estimated \(S_0\) parameter map. Type: Image, List Settings Configure IR Method Selection The type of signal model used, i.e. whether it is the real signal (Phase Sensitive) or magnitude signal that has been measured. Values: Phase Sensitive, Magnitude Batch Size Integer The number of voxels that are computed per batch. This is a trade-off between performance and memory consumption. Keep Metadata Boolean Keep or discard metadata in the parameter maps. Configure NonLinear Tolerance Float The threshold change in the objective function. Changes smaller than this value imply that the fitting has converged. Max Iterations Integer Maximum number of iterations. Return Convergence Map Boolean Return a binary mask, where all true voxels have converged in the fit. This can be used to exclude voxels that did not converge. Metadata Repetition Time Source Selection Select the \(TR\)-value source for the calculation. The \(TR\)-values can be taken from the metadata, or can be supplied as an input Numeric Array. Values: Metadata, Numeric Array Input Inversion Time Source Selection Select the \(TI\)-value source for the calculation. The \(TI\)-values can be taken from the metadata, or can be supplied as an input Numeric Array. Values: Metadata, Numeric Array Input Repetition Time Tag Text The \(TR\)-value tag name in the metadata. Inversion Time Tag Text The \(TI\)-value tag name in the metadata. See also Keywords: ", "tags": "", "url": "nodes.applications.mri.relaxivity.t1_mapping_(ir).html"},
{"title": "T1 Mapping (VFA)", "text": "T1 Estimation Calculates a T1 map using the variable flip angle (VFA) method. The input must be a multi-channel image, where each volume has an associated flip angle (FA), however more images are advised if a larger range of T1 values are expected. Flip angle (FA) and repetition time (TR) are detected automatically and it is required that the TR is the same in all images. In addition to the images with varying flip angle, a B1 map can also be provided to improve the accuracy, in particular at high field strengths. The B1 map represents a scaling of FA, hence value 1 indicates that the nominal FA is achieved. An optional mask can also be provided to limit the calculations to a region. Produces a T1 map in the same units as TR, and a \(S_0\) map which is a proton and \(T2^*\)-weighted image. The parameter values are obtained by fitting the data to equation (1) directly or a linearized version of the of equation (1)[1]: \[ \begin{equation} S_i = \frac{S_0(1-e^{-TR/T1})\sin(FA_i \cdot B1)}{1-\cos(FA_i \cdot B1)e^{-TR/T1}},~~~~i = 1, 2, ...,n ~~~~~~~(1) \label{eq:sample} \end{equation} \] where \(n\) is the number of images used. Inputs Dataset An image or a list of images (for batch processing) where channel dimensions are used for the different flip angles. At least two volumes are needed and they should have the same \(TR\) and echo time. Type: Image, List, Required, Single B1 B1 correction map(s). A value of \(1\) indicates that that the actaual flip angle is at the nominal value. A single 3D volume should be provided for all flip angles. Type: Image, List, Optional, Single Mask Mask(s) used to confine the region in which the signal model is fitted. Type: Mask, List, Optional, Single Outputs T1 The estimated \(T1\) parameter map. Type: Image S0 The estimated \(S_0\) parameter map. Type: Image Settings Configure Algorithm Selection Use a linearized or a nonlinear fitting model. When selecting a nonlinear model, equation (1) is fit directly with a square loss term. In the linearized case the data is transformed to yield a system of linear equations. Values: Linear, NonLinear Batch Size Integer The number of voxels that are computed per batch. This is a trade-off between performance and memory consumption. Keep Metadata Boolean Keep or discard metadata in the parameter maps. Configure NonLinear Tolerance Float The threshold change in the objective function. Changes smaller than this value imply that the fitting has converged. Max Iterations Integer Maximum number of iterations. Return Convergence Map Boolean Output a binary mask, where all true voxels have converged in the fit. This can be used to exclude voxels that did not converge. Metadata Repetition Time Source Selection Select the \(TR\)-value source for the calculation. The \(TR\)-values can be taken from the metadata, or can be supplied as an input Numeric Array. Values: Metadata, Numeric Array Input Flip Angle Source Selection Select the FA source for the calculation. The FA values can be taken from the metadata, or can be supplied as an input Numeric Array. Values: Metadata, Numeric Array Input Repetition Time Tag Text The \(TR\)-value tag name in the metadata. Flip Angle Tag Text The FA tag name in the metadata. References [1] H. L. M. Cheng and G. A. Wright, “Rapid high-resolution T1 mapping by variable flip angles: Accurate and precise measurements in the presence of radiofrequency field inhomogeneity,” Magn. Reson. Med., vol. 55, no. 3, pp. 566–574, 2006. See also Keywords: ", "tags": "", "url": "nodes.applications.mri.relaxivity.t1_mapping_(vfa).html"},
{"title": "T2/T2* Mapping", "text": "T2/T2* Estimation Calculate a \(T_2\) or \(T_2^*\) map from spin echo or gradient echo data with multiple echo times. For notational simplicitly \(T_2\) and \(T_2^*\) will be refered to as \(T_2\) below. At least two volumes are required, however, more volumes are advised if a larger range of values are expected. For accurate results it is required that no other setting but TE varies between images. An optional mask can also be provided to limit the calculations to a region. In addition to the \(T_2\) map, a \(S_0\) map which contains all weighting that is independent of is also produced. The parameter values are obtained by fitting the data to the signal equation \[ S_i = S_0 e^{-TE/T_2}, i=0,1,2,\ldots,n ~~~~~~~(1) \] where \(i\) is an index over \(n\) images with different echo times. Inputs Dataset Input dataset with at least two volumes with different echo times in one or more channels of the dataset. Type: Image, List, Required, Single Mask A 3D binary mask defining the region in the image where the ADC map is calculated. Type: Mask, List, Optional, Single Outputs T2 The estimated T2 map. Type: Image S0 The estimated \(S_0\) map. Type: Image Settings Configure Algorithm Selection Use a linearized or a nonlinear fitting model. When selecting a nonlinear model, equation (1) is fit directly with a square loss term. In the linearized case the data is transformed to yield a system of linear equations. Values: Linear, NonLinear Batch Size Integer The number of voxels that are computed per batch. This is a trade-off between performance and memory consumption. Keep Metadata Boolean Keep or discard metadata in the parameter maps. Configure NonLinear Tolerance Float The threshold change in the objective function. Changes smaller than this value imply that the fitting has converged. Max Iterations Integer Maximum number of iterations. Return Convergence Map Boolean Output a binary mask, where all true voxels have converged in the fit. This can be used to exclude voxels that did not converge. Metadata Echo Time Tag Text The \(TE\)-value tag name in the metadata. Echo Time Source Selection Select the \(TE\)-value source for the calculation. The \(TE\)-values can be taken from the metadata, or can be supplied as an input Numeric Array. Values: Metadata, Numeric Array Input See also Keywords: ", "tags": "", "url": "nodes.applications.mri.relaxivity.t2t2_mapping.html"},
{"title": "Double Angle B1 Estimator", "text": "B1 Calculate a B1 correction map (i.e. a correction of the transmit \(B_1^+\) map) using the double angle method. The nominal flip angles are automatically dected from the metadata and the second angle must be twice as large as the first. The method requires gradient echo images (\(S_1\) and \(S_2\)) with long repetition time, i.e. \(TR \gg T1\) and that the echo time is the same for both images. When these conditions are fullfilled the actual flip-angle can be calculated as [1]: \[ FA=\arccos\left(\frac{S_2}{2S_1}\right). \] The output is a B1 correction map meaning that the map represents a scaling of flip angles and a value of 1 indicates that the nominal FA is achieved. Inputs α Gradient echo image with nominal \(FA=\alpha\). Type: Image, Required, Single 2α Gradient echo image with nominal \(FA=2\alpha\). Type: Image, Required, Single Mask Binary mask that defines the region in which the B1 map is calculated. Type: Mask, Optional, Single Outputs B1 B1 correction map. The values in the map are relative to the nominal flip angle. For example if the actual produced flip angle in a voxel is 8° while the nominal flip angle is 10°, the B1 correctgion value is 0.8 in this voxel. Type: Image Settings Metadata Flip Angle Source Selection Select the Flip Angle source for the calculation. The Flip Angle can be taken from the metadata, or can be supplied as an input Numeric Array. Values: Metadata, Numeric Array Input Flip Angle Tag Text Name of the Flip Angle tag in the metadata. See also Keywords: ", "tags": "", "url": "nodes.applications.mri.b1.double_angle_b1_estimator.html"},
{"title": "MRI Emulator", "text": "MRI Emulator Emulates images produced by MRI scanners for some common sequences. The emulation uses signal equations and add some common effects. This the emulatated images corresponds to &ldquo;ideal&rdquo; outputs of a scanners. Effects that are simulated: Noise Aliasing Fat-water shift and phase effects. In addition to producing emulated MRI images, the node can also output tissue maps and parameter maps (T1, T2 etc). Outputs Output The emulated images or tissues/tissue paramters if one of those output options is selected. Type: NodeIOImage Settings Phantom Name Selection Select the phantom to be used in the simulation. Values: Brainweb 4, Brainweb 5 Geometry Specification Selection Select how the geometry should be specified. The region to be imaged and its resolution can be defined using a field-of-view, an acquisition matrix and a voxel size. Two of these will imply the third one. This setting defines which two that you specify. Values: Matrix + Field of View, Matrix + Voxel Size, Field of View + Voxel Size Position [mm]Numbers Position of the iso-center relative to the center of the phantom. Units in mm. Acquisition Matrix Integers The size of the data acquisition matrix. Field Of View [mm] Numbers The size of the imaged field-of-view in mm. VoxelSize [mm]Numbers The size of the voxels in mm. Slice Gap [mm]Float Gap between slices in mm. Valid for 2D sequences only. Orientation Axis Numbers The imaging field of view is rotated around the iso-center along this axis by and angle specified by the Orientation Angle setting. The axis does not need to be normalized to length 1. Orientation Angle [degrees]Float Rotation angle for the imaging field-of-view in degrees. Sequence Sequence Name Selection The MRI sequence to be emulated. The following sequnces with associated signal equations can be emulated: Spoiled Gradient Echo $$s = \frac{\rho(1-e^{-TR/T1})\sin(\theta)e^{-TE/T2^*}}{1-\cos(\theta)e^{-TR/T1}} $$ Spin Echo \[ \begin{aligned} &amp;s = \rho (1+ \Delta(\alpha)- e^{-(TR-TE/2)/T1})e^{-TE/T2}\sin^2(\alpha) \\ &amp;\Delta(\alpha) = \cos(\alpha)e^{-TR/T1}(e^{TE/(2\cdot T1)}-1) \end{aligned} \] Inversion Recovery Spin Echo \[ \begin{aligned} &amp;s = \rho (M_z \cos(\beta)e^{-TI/T1} + 1 - e^{-TI/T1})e^{-TE/T2}\sin^2(\alpha) \\ &amp;M_z = 1+ \Delta(\alpha)- e^{-(TR-TE/2)/T1} \\ &amp;\Delta(\alpha) = \cos(\alpha)e^{-TR/T1}(e^{TE/(2\cdot T1)}-1) \end{aligned} \] Turbo Spin Echo The same equation as for Spin Echo is used. Inversion Recovery Turbo Spin Echo The same equation as for Inversion Recovery Spin Echo is used. Where \(\alpha\) is the refocusing flip angle and \(\beta\) is the inversion flip angle. The excitation flip angle is be \(90^o\). Values: Spoiled Gradient Echo, Spin Echo, Turbo Spin Echo, Inversion Recovery Spin Echo, Inversion Recovery Turbo Spin Echo Sequence Type Selection The type of dimensionallity of for the sequence (2D or 3D). Values: 2D, 3D Phase Encoding Direction Selection Direction of the phase encoding. Values: i, j Reconstruction Selection How the image should be reconstructed. Values: Magnitude, Real, Complex Bandwidth Per Pixel [Hz]Float Receiver bandwidth per pixel in Hz. Number Of Averages Integer Number of signal averages used. Will affect the noise. Turbo Factor Integer Number of echoes per excitation used with Turbo spin-echo sequences. Will affect the simulated time it takes to acquire an image. Partial Fourier Factor Float Partial Fourier factor used. Set to one if not used. Will affect the noise. Parallel Imaging Factor Integer Parallel imaging factor used. Set to one if not used. Will affect the noise. Contrast Repetition Time [mm]Float The repetition time for the sequence in ms. Echo Time [mm]Float The echo time for the sequence in ms. Inversion Time [mm]Float The inversion time for the sequence in ms. Flip Angle [mm]Float Excitation flip angle in degrees. Refocusing Flip Angle [degrees]Float Refocusing flip angle in degrees. Inversion Flip Angle [degrees]Float Inversion flip angle in degrees. System Output Selection Resulting output from the node. Emulation: Emulates an MRI scanner. Tissue Parameters: Creates maps of tissue parameters such as T1 and T2. Tissue Types: Creates maps of tissue types. For example gray and white matter maps. Values: Emulation, Tissue Parameters, Tissue Types Field Strength Selection Fieldstrength of the scanner. Will affect contrast and noise. Values: 1.5 T, 3 T Coil Selection Type of coil used. The Head, Flexible and Body coils have noise levels that mimic those of a real scanner using: Head Coil: A coil dedicated to head imaging. Flex Coil: A flexible array coil that can be placed on the subjects body. Body Coil: The built-in coil in the scanner bore. The Ideal Coil coil adds no noise. The Select SNR adds a user-defined amount of noise that results in a fix noise indepentent of imaging settings. The resulting standard deviation of the noise when this setting is used is \(1/SNR\). Values: Head Coil, Flex Coil, Body Coil, Ideal Coil, Select SNR SNR Float The relative SNR to be simulated when the Select SNR option is used for the Coil setting. A value of 1 implies the same SNR as for the Head coil. Maximum Gradient Strength [mT/m]Float The maximum gradient strength of the system in mT/m. Will affect the imaging time as well as minimum values of e.g. Repetition Time and Echo Time. Slew Rate [T/m/s]Float The maximum gradient slew-rate of the system in T/m/s. Will affect the imaging time as well as minimum values of e.g. Repetition Time and Echo Time. See also Keywords: Magnetic Resonance Imaging, MRI, MR, Emulation, Simulation ", "tags": "", "url": "nodes.applications.mri.simulators.mri_emulator.html"},
{"title": "N4 Bias Field Correction", "text": "N4 Bias Field Correction Inputs Input Missing description. Type: ****, Required, Single Mask Missing description. Type: ****, Optional, Single Outputs Output Missing description. Type: NodeIOImage Bias Field Missing description. Type: NodeIOImage Settings Convergence Convergence Threshold Decimal Number Missing description. Max Iterations Integer Missing description. Fitting Levels Integer Missing description. Deconvolution Gaussian FWHM Decimal Number Missing description. Histogram Bins Integer Missing description. Wiener Filter Noise Decimal Number Missing description. Control Points Control Points Input Selection Missing description. Values: Num of Ctrl Points, Ctrl Point Distance [mm] Num of Ctrl Points Integer Array Missing description. Ctrl Point Distance [mm] Decimal Number Array Missing description. Spline Order Integer Missing description. Downsampling Downsample Boolean Missing description. Shrink Factor Integer Array Missing description. See also Keywords: ", "tags": "", "url": "nodes.applications.mri.n4_bias_field_correction.html"},
{"title": "Standard AIF", "text": "Standard AIF This node generates a standard Arterial Input Function (AIF) for use in DCE-MRI studies. The AIF is computed using configurable model parameters—either the Parker model (default) or the Weinmann model—and manual synchronization settings. Adjust the bolus dose, duration, sampling time, and bolus arrival time to tailor the AIF to your specific study requirements. Inputs This node does not require any input data. Outputs AIF The computed arterial input function. Type: Table Settings Configure Model Selection Select the AIF model to use. Values: Parker (default), Weinmann. Parker model [2]: Uses parameters derived by Parker et al. for high-temporal-resolution AIF modeling. Weinmann model [1]: Uses parameters based on Weinmann et al.’s pharmacokinetic analysis. Dose [mmol/kg] Float The bolus dose injected in mmol per kg of body weight. Default: 0.1 Synchronization Duration [s] Float Duration of the AIF in seconds. Default: 300 s Sampling Time [s] Float Time interval between successive samples of the AIF curve. Default: 5 s Bolus Arrival Time [s] Float The time at which the bolus arrives. Default: 30 s Model Parameters Parker Model Parameters Peak amplitude, A1, [mM] Float Amplitude of the main peak. Peak width, Sigma1, [min] Float Standard deviation (width) of the main peak. Peak time, T1, [min] Float Time at the center of the main peak. Recirculation peak amplitude, A2, [mM] Float Amplitude of the recirculation peak. Recirculation peak width, Sigma2, [min] Float Standard deviation (width) of the recirculation peak. Recirculation peak time, T2, [min] Float Time at the center of the recirculation peak. Tail amplitude, Alpha, [mM] Float Amplitude of the concentration in the tail. Tail drop-off, Beta, [min⁻¹] Float Rate at which the tail concentration drops. Tail raise, s, [min⁻¹] Float Speed at which the tail rises at bolus arrival. Tail delay time, tau, [min] Float Delay before the tail begins to rise. Large vessel Hematocrit, Hct Float Hematocrit value used in the model. Weinmann Model Parameters First amplitude, a1, [kg/liter] Float First amplitude parameter. Second amplitude, a2, [kg/liter] Float Second amplitude parameter. First clearance rate, m1, [min⁻¹] Float First clearance rate. Second clearance rate, m2, [min⁻¹] Float Second clearance rate. References [1] Weinmann, H. J., Laniado, M., &amp; Mützel, W. (1984). Pharmacokinetics of Gd-DTPA/dimeglumine after intravenous injection into healthy volunteers. Physiol Chem Phys Med NMR, 16(2), 167–172. PMID: 6505043. [2] Parker, G. J. M., et al. (2006). Experimentally-derived functional form for a population-averaged high-temporal-resolution arterial input function for dynamic contrast-enhanced MRI. Magnetic Resonance in Medicine, 56(5), 993–1000. See also AIF from Data: Extracts an AIF from image data and a selected region of interest. Find AIF Voxels: Find likley AIF voxels based on a template AIF. ", "tags": "", "url": "nodes.applications.mri.dce-mri.standard_aif.html"},
{"title": "AIF from Data", "text": "AIF from Data Extract an Arterial Input Function (AIF) from a region of interest (ROI) in a dynamic contrast-enhanced MRI (DCE-MRI) dataset. This node calculates the AIF by averaging the contrast agent concentration over a set of selected voxels, defined by an input mask. The extracted AIF is then corrected for hematocrit to ensure accurate quantification of plasma contrast concentration. This node is useful in DCE-MRI applications where a patient-specific AIF is required instead of using a predefined or population-based function. The AIF is essential for quantitative perfusion and pharmacokinetic modeling in MRI-based tracer kinetic studies. Inputs Concentration The contrast agent concentration image from which the AIF is extracted. Type: Image, Required, Single AIF Voxels A mask defining the region of interest (ROI) from which the AIF will be computed. Type: Mask, Required, Single Outputs AIF The extracted arterial input function (AIF) computed from the input data. Type: Table Settings Hematocrit Float The hematocrit value used to correct the extracted AIF. The AIF is divided by (1 - hematocrit). See also Standard AIF: Generates a standard arterial input function for DCE-MRI studies. Find AIF Voxels: Find likley AIF voxels based on a template AIF. Keywords: AIF, Arterial Input Function, DCE-MRI, Contrast Agent, Perfusion ", "tags": "", "url": "nodes.applications.mri.dce-mri.aif_from_data.html"},
{"title": "Find AIF Voxels", "text": "Find AIF Voxels Description This node identifies candidate voxels that best represent the Arterial Input Function (AIF) in Dynamic Contrast-Enhanced MRI (DCE-MRI) data. The AIF is a crucial parameter in perfusion analysis as it describes how the contrast agent concentration evolves over time in arterial blood. To find suitable AIF voxels, this node compares the enhancement time curves of all voxels to a predefined template AIF (either a standard Parker AIF or a user-provided custom AIF). It performs an inner product computation between the enhancement curves and the template AIF to quantify similarity. The top-ranked voxels based on this similarity measure are selected as AIF candidates. Additionally, a Bolus Arrival Time (BAT) input should be provided to improve accuracy by referencing the time when contrast agent first arrives in the bloodstream. The BAT is used to define the duration of the baseline where no enhancement is occuring. Providing a BAT lower than the actual value is fine. Very few datapoints before the speciefied BAT may lead to less accurate results. An optional Mask input can be used to restrict the search area for AIF voxels to a specific region of interest. The output of this node is a binary mask where selected AIF voxels are marked. Inputs Time Series Time series image containing signal enhancement over time. Type: Image, Required, Single BAT Bolus arrival time for reference in AIF extraction. Type: Numeric Array, Required, Single Mask Optional mask to restrict AIF voxel selection. Type: Mask, Optional, Single Template AIF Custom AIF, exposed only if that option is selected. Type: Table, Single Outputs AIF Voxels A binary mask highlighting the identified AIF voxels. Type: Mask Settings Template AIF Selection Select the template AIF used for voxel comparison. Custom AIF will expose an input for the custom template AIF. Values: Parker Standard AIF, Custom AIF Number of Voxels Integer Number of voxels to select as AIF candidates. See also Standard AIF: Generates a standard arterial input function for DCE-MRI studies. AIF from Data: Extracts an AIF from image data and a selected region of interest. Keywords: AIF, Arterial Input Function, DCE-MRI, Perfusion Analysis ", "tags": "", "url": "nodes.applications.mri.dce-mri.find_aif_voxels.html"},
{"title": "Synchronize AIF", "text": "Synchronize AIF Synchronize the Arterial Input Function (AIF) by identifying the difference in Bolus Arrival Time (BAT) between the dynamic contrast-enhanced MRI (DCE-MRI) dataset and a template AIF. The AIF represents the concentration of contrast agent in the blood plasma over time and plays a critical role in quantitative DCE-MRI analysis. However, misalignment between the AIF and the tissue enhancement curves will cause errors in the analysis. This node corrects for these discrepancies by determining the optimal temporal shift required for synchronization, ensuring accurate pharmacokinetic modeling and quantification. Inputs AIF Arterial Input Function (AIF) table that requires synchronization. Type: Table, Required, Single Time Series Dynamic contrast-enhanced MRI time series data used as the reference for AIF synchronization. Type: Image, Required, Single Mask Optional mask defining the region of interest within the time series that is used for synchronization. Type: Mask, Optional, Single Outputs AIF The synchronized Arterial Input Function (AIF), adjusted based on the estimated shift in BAT. Type: Table ΔBAT The computed shift in the bolus arrival time (BAT) necessary for synchronization. Type: Numeric Array Sync. Plot Plot data illustrating the synchronization between the AIF and the time series data. Type: Table Settings Match Duration [s] Float Defines the duration over which the AIF and time series are compared for synchronization. Time step [s] Float Specifies the time step size used for assessing synchronization shifts. Search Interval [s] Float Defines the range of time shifts (in seconds) over which the synchronization optimization is performed. See also Bolus Arrival Time: Finds the bolus arrival time. Keywords: AIF Synchronization, Bolus Arrival Time, Dynamic Contrast-Enhanced MRI, BAT Correction ", "tags": "", "url": "nodes.applications.mri.dce-mri.synchronize_aif.html"},
{"title": "Bolus Arrival Time", "text": "Bolus Arrival Time This node estimates the bolus arrival time (BAT) in a tissue region of interest (ROI) from a DCE-MRI time series. Internally, it uses a standard Parker-based AIF model [1] to create a reference enhancement curve. It then fits or “synchronizes” this reference curve to the measured signal in the selected tissue, determining the time offset at which the bolus is likely to have arrived. The estimated BAT can be used in subsequent kinetic analyses or as a reference for aligning other signals. Optionally, a mask can be provided to restrict BAT estimation to a specific region. Inputs Time Series Time-resolved signal data from a DCE-MRI sequence. Type: NodeIOImage, Required, Single Mask Optional binary mask to limit BAT estimation to a specific region. Type: NodeIOMask, Optional, Single Outputs BAT The estimated bolus arrival time in seconds. Type: NodeIONumericArray BAT Volume Index Index in the time-series array at which the bolus arrives (dimensionless). Type: NodeIONumericArray Sync. Plot A table containing the synchronized AIF and the tissue curve, useful for visualization. Type: NodeIOTable Settings Fit Duration [s] Decimal Number The maximum time span used to fit the arrival time. Time step [s] Decimal Number Temporal step size used for shifting and synchronizing the AIF with the measured tissue curve. Maximum Bolus Arrival Time [s] Decimal Number Upper bound on the estimated bolus arrival time. See also Synchronize AIF: Synchronize AIF and tissue contrast uptake curve by computing bolus arrival time shift. References [1] Parker, G. J. M., et al. (2006). Experimentally derived functional form for a population-averaged high-temporal-resolution arterial input function for dynamic contrast-enhanced MRI. Magnetic Resonance in Medicine, 56(5), 993–1000. Keywords: DCE-MRI, bolus arrival time, arterial input function, time-series analysis ", "tags": "", "url": "nodes.applications.mri.dce-mri.bolus_arrival_time.html"},
{"title": "NodeQuantifyContrastAgent", "text": "Quantify Contrast Agent This node converts a dynamic MRI signal to contrast agent concentration (in mM). It does so by accounting for each voxel’s baseline T1, the relaxivity properties of the contrast agent and relative signal change in the dynamic data. The node supports multiple signal models (SPGR, Full SPGR, and Linearized SPGR). By providing a T1 map and the associated metadata (e.g., flip angle, repetition time, and echo time), this node estimates the time-resolved concentration of the administered contrast agent. The resulting concentration images can then be used for pharmacokinetic (PK) modeling or other DCE-MRI analyses. Inputs Time Series A dynamic MRI time series (e.g., Spoiled gradient echo (SPGR) images acquired at multiple time points). Type: Image, Required, Single T1 Map A baseline T1 relaxation time map, crucial for conversion of signal to contrast concentration. Should be in milliseconds. Type: Image, Required, Single BAT Bolus arrival time in seconds, used to identify the end of the baseline period and start of contrast arrival. Type: Numeric Array, Required, Single Mask An optional mask that restricts the analysis to specific voxels. If not provided, all voxels are analyzed. Type: Mask, Optional, Single Outputs Concentration Estimated contrast agent concentration (in mM) at each time point. Type: Image Settings Configure Signal Model Selection Selects the model that maps signal intensities to longitudinal relaxation changes. All SPGR models are based on the signal equation: Spoiled Gradient Echo Signal \[ S = \frac{\rho\,\bigl(1 - E_1\bigr)\, E_2\, \sin(\theta)}{1 - E_1 \cos(\theta)} \] Exponential Relaxation Factors \[ E_1 = e^{-\frac{T_R}{T_1}}, \quad E_2 = e^{-\frac{T_E}{T_2^*}} \] Relaxation-Time Dependence on Contrast \[ \frac{1}{T_1} = \frac{1}{T_{10}} + r_1\,C, \quad \frac{1}{T_2^*} = \frac{1}{T_{20}^*} + r_2^*\,C. \] Symbol Definition/Description Typical Units \(S\) Measured signal intensity in the spoiled gradient echo sequence Arbitrary (scanner units) \(\rho\) Proton density or scaling factor for signal amplitude Dimensionless \(\theta\) Flip angle (the rotation applied by the RF pulse) Degrees \(T_R\) Repetition time (time between successive excitations) ms (milliseconds) \(T_E\) Echo time (time from the excitation to the peak of the echo signal) ms (milliseconds) \(E_1\) Factor describing longitudinal (\(T_1\)) relaxation over \(T_R\). Defined by \(E_1 = e^{-T_R / T_1}\) Dimensionless \(E_2\) Factor describing transverse (\(T_2^*\)) decay over \(T_E\). Defined by \(E_2 = e^{-T_E / T_2^*}\) Dimensionless \(T_1\) Effective longitudinal relaxation time in the presence of contrast agent ms (milliseconds) \(T_{10}\) Baseline longitudinal relaxation time (no contrast agent) ms (milliseconds) \(r_1\) Longitudinal relaxivity constant, which scales how much the contrast agent shortens \(T_1\) \(mM^{-1}s^{-1}\) (per millimolar and second) \(C\) Contrast agent concentration mM (millimolar) \(T_2^*\) Effective transverse relaxation time in the presence of contrast agent ms (milliseconds) \(T_{20}^*\) Baseline effective transverse relaxation time (no contrast agent) ms (milliseconds) \(r_2^*\) Transverse relaxivity constant, which scales how much the contrast agent shortens \(T_2^*\) \(mM^{-1}s^{-1}\) Possible selections SPGR: Simplified spoiled gradient echo signal model, ignoring \(T_2^*\) and valid when \(T_2^*\) effects are small, i.e. moderate contrast agent concentration. Using this model it is assumed that the \(E_2\) term does not change with \(C\). The concentration is solved analytically using the SPGR signal equation and the relaxation time dependence of the contrast agent. This method is commonly used and fast. It can result in some errors at peak concentrations in vessels, and it is somewhat prone to producing very large erroneous concentrations in some pixels. Full SPGR: Spoiled gradient echo model that incorporates \({T}_2^*\) effects (via \(r_2^*\) and echo time). The concentration is solved for numerically using the full SPGR signal equation and relaxation time dependence of the contrast agent. To prevent outliers, signals larger than the model can produce, results in the maximum concentration that the model can produce. To give unbiased estimation in low signal and low concentration regions the signal enhancement vs concentration model is made a symmetric odd function around the origin. Linearlized SPGR: A linear approximation valid under the assumptions of small flip angle, short TR and low concentration. With this selection the concentation is computed using: \[ C = \frac{\Delta(t )-1}{r_1T_{10}}. \] In the equation above \(\Delta(t )\) is the signal enchancement relative to the signal at \(t = 0\), i.e. \(\Delta(t ) = S(t ) / S(0)\). Values: SPGR, Full SPGR, Linearlized SPGR r1 [mM¯¹s¯¹] Float Longitudinal relaxivity of the contrast agent \(r_1\). r2* [mM¯¹s¯¹] Float Transverse relaxivity for \(\mathrm{T}_2^*\). This is relevant only in the Full SPGR model. Metadata Metadata Source Selection Determines how flip angle [degrees] and repetition time [ms] (and echo time [ms]) are retrieved. Can come directly from the time series metadata or from user-provided numeric values. When provided by the user, these values should be single scalars. Values: Time Series, Numeric Array Input Flip Angle Text Name of the flip angle variable in the metadata. Used in the SPGR and Full SPGR model. Unit: Degrees. Repetition Time Text Name of the repetition time variable in the metadata. Used in the SPGR and Full SPGR model. Unit: ms. Echo Time Text Name of the echo time variable in the metadata. Used in the Full SPGR model. Unit: ms. See also Fit Concentration Curves: Fit pharmacokinetic models to concentration curves. Keywords: T1 Map, Relaxivity, Concentration, DCE-MRI References [1] Tofts PS. Modeling tracer kinetics in dynamic Gd-DTPA MR imaging. J Magn Reson Imaging. 1997;7(1):91-101. [2] Hittmair K, Gomiscek G, et al. Method for the quantification of contrast agent uptake in dynamic contrast-enhanced MRI. Magn Reson Med. 1994;31(5):567-571. ", "tags": "", "url": "nodes.applications.mri.dce-mri.nodequantifycontrastagent.html"},
{"title": "Fit Pharmacokinetic Model", "text": "Fit Pharmacokinetic Model Pharmacokinetic (PK) modeling is a cornerstone of DCE-MRI data analysis. In PK modeling, we use mathematical expressions (models) to describe the exchange of contrast agent between compartments such as the intravascular space and the extravascular-extracellular space (EES). Understanding the physiological meaning of model parameters helps in diagnosing and characterizing lesions, tumors, or other pathologies by assessing angiogenesis, permeability, and blood volume. This node is designed to fit voxel-wise concentration-time curves obtained from a Dynamic Contrast-Enhanced MRI (DCE-MRI) dataset. By modeling how a contrast agent enters and leaves the tissue compartments, it derives quantitative microvascular parameters that can be used to characterize tissue perfusion, permeability and compartment sizes. The user must provide an arterial input function (AIF), which represents the contrast agent concentration in plasma over time, as well as a concentration image (4D data) representing tissue contrast uptake. Available PK Models You can currently choose between three PK models in this node: Tofts Model (sometimes referred to as the “standard Tofts model”) The total amount of contrast agent \(C(t)\) present in tissue is modelled as \[ C(t) =K^{trans}e^{-\frac{K^{trans}}{v_e}t} * AIF(t) , \] in which \(*\) denotes convolution and \(AIF(t)\) is the arterial input function. Compartments: Describes the EES as a single compartment and treats the vascular space as negligible (no explicit vp). Parameters: Ktrans: The forward transfer constant (in min⁻¹) from blood plasma to EES. ve: The fractional volume of the EES. Usage: This simpler model is appropriate when the vascular space can be considered small or of lesser interest, and when overall measurement signals are dominated by the EES uptake [1, 2]. Extended Tofts Model The total amount of contrast agent \(C(t)\) present in tissue is modelled as \[ C(t) =K^{trans}e^{-\frac{K^{trans}}{v_e}t} * AIF(t) + v_p\cdot AIF(t), \] in which \(*\) denotes convolution and \(AIF(t)\) is the arterial input function. Compartments: Includes both the EES and the vascular plasma space as separate compartments. Parameters: Ktrans: The forward transfer constant (in min⁻¹) from plasma to EES. ve: The fractional volume of the EES. vp: The fractional volume of blood plasma within the voxel. Usage: This model is particularly useful if the vascular contribution is not negligible and you want to quantify the plasma volume fraction explicitly [1, 2]. Patlak Model For tracers that behave irreversibly during the observation window, the tissue contrast-agent concentration \(C(t)\) is \[ C(t)=K\int_{0}^{t} AIF(\tau)\,\mathrm d\tau\;+\;v_{p}\,AIF(t), \] with \(AIF(t)\) the arterial input function. Compartments: Vascular plasma space and an extravascular space where tracer becomes trapped (no back-flux during the fit window). Assumptions: Back-diffusion to plasma is negligible. Capillary plasma concentration equals the measured AIF. System is linear and time-invariant once trapping begins. Parameters: K: Net influx (uptake) rate constant [min⁻¹]. vp: Fractional plasma volume. Usage: Appropriate for slowly enhancing tissue (e.g., intact or mildly disrupted BBB) or for early-time analyses when bidirectional models are poorly identifiable. Patlak plot: dividing by \(AIF(t)\) gives \[ \frac{C(t)}{AIF(t)} \;=\; K\,\frac{\displaystyle\int_{0}^{t}AIF(\tau)\,\mathrm d\tau}{AIF(t)} \;+\; v_{p}, \] so a plot of \(C(t)/AIF(t)\) versus the normalized integral is linear, with slope \(K\) and intercept \(v_{p}\). Inputs Concentration Voxel-wise contrast agent concentration data over time (4D). Derived from signal intensity data after converting to contrast concentration. The unit of concentration must be the same as for the AIF. Type: Image, Required, Single AIF Arterial Input Function (AIF) as a table of timestamps and corresponding contrast concentration in plasma. The unit of concentration must be the same as for the tissue concentration. Type: Table, Required, Single Mask An optional mask to restrict parameter estimation to a region of interest (ROI). Type: Mask, Optional, Single Outputs Depending on the chosen PK model, different parameter maps are generated: If Tofts Model is selected Ktrans Estimated Ktrans (min⁻¹), indicating how fast contrast flows from plasma into the EES. Type: Image ve Estimated ve, the fractional volume of the EES. Type: Image If Extended Tofts Model is selected Ktrans Estimated Ktrans (min⁻¹), indicating how fast contrast flows from plasma into the EES. Type: Image ve Estimated ve, the fractional volume of the EES. Type: Image vp Estimated vp, the fractional plasma volume. Type: Image If Patlak Model is selected K Estimated K (min⁻¹), indicating how fast contrast flows from plasma into the irriversible compartment. Type: Image vp Estimated vp, the fractional plasma volume. Type: Image Settings PK Model Selection Select which pharmacokinetic model to fit. Tofts Model: Fits Ktrans and ve. Extended Tofts Model: Fits Ktrans, ve, and vp. Patlak Model: Fits K and vp. Values: Tofts Model, Extended Tofts Model, Patlak Model Algorithm Selection Choose the mathematical approach for parameter fitting. Currently, only Linear is available, which provides a fast method for estimating PK parameters and is based on the work by Murase [4]. Values: Linear Patlak Model Settings Linear Phase Start Time [s] Float Start time for the fit of the model. See also Quantify ContrastAgent Quantify contrast agent concentration. Keywords: DCE-MRI, Pharmacokinetic Modeling, Tofts, Extended Tofts, Patlak, Ktrans, ve, vp References [1] Tofts, P. S. (1997). Modeling tracer kinetics in dynamic Gd-DTPA MR imaging. Journal of Magnetic Resonance Imaging, 7(1), 91–101. [2] Tofts, P. S., et al. (1999). Estimating kinetic parameters from dynamic contrast-enhanced T1-weighted MRI of a diffusable tracer: Standardized quantities and symbols. Journal of Magnetic Resonance Imaging, 10(3), 223–232. [3] C. S. Patlak, R. G. Blasberg &amp; J. D. Fenstermacher, “Graphical evaluation of blood-to-brain transfer constants from multiple-time-uptake data,” J Cereb Blood Flow Metab., 3 (1): 1-7, 1983. [4] Murase K. Efficient method for calculating kinetic parameters using T1-weighted dynamic contrast-enhanced magnetic resonance imaging. Magn Reson Med. 2004 Apr;51(4):858-62. ", "tags": "", "url": "nodes.applications.mri.dce-mri.fit_pharmacokinetic_model.html"},
{"title": "Assert Input", "text": "Assert Input Check if a input is identical between executions. The first time an input is connected the node is in &ldquo;learning mode&rdquo;, and will calculate a checksum from the input when executed. After the first execution the node disables the learning mode, and subsequent executions will check if the checksum of the input is identical to the memorized checksum. If the checksums are equal the node executes successfully, otherwise it will raise an error. Inputs Input Input to be asserted. Type: Any, Required, Single Settings Learn Boolean Enable or disable learning mode. Checksum Text Generated Checksum. See also Keywords: ", "tags": "", "url": "nodes.applications.assert.assert_input.html"},
{"title": "Assert Identical", "text": "Assert Identical A node asserting the two inputs. It runs successfully if the two inputs are identical. Inputs Input 1 Input to compare with Input 2. Type: Numeric Array, Boolean Array, Table, Column, Image, Contour, Struct, Text, Mask, Any, Required, Single Input 2 Input to compare with Input 1. Type: Numeric Array, Boolean Array, Table, Column, Image, Contour, Struct, Text, Mask, Any, Required, Single See also Keywords: ", "tags": "", "url": "nodes.applications.assert.assert_identical.html"},
{"title": "Assert with Tolerance", "text": "Assert with Tolerance This node checks if all values in the input and reference satisfy the condition: | Input - Reference | ≤ absTol + relTol * | Reference | The node fails if the condition fails, and succeeds if the condition is true. Inputs Input Input array Type: Numeric Array, List, Required, Single Reference Reference array Type: Numeric Array, List, Required, Single Settings Abs Tol Float Absolute tolerance Rel Tol Float Relative tolerance See also Keywords: allclose ", "tags": "", "url": "nodes.applications.assert.assert_with_tolerance.html"},
{"title": "Assert All", "text": "Assert All Assert that all elements in a boolean array have a value of either true or false. Inputs Input Input Boolean Array Type: Boolean Array, Required, Single Settings Condition Boolean Assert value. See also Keywords: ", "tags": "", "url": "nodes.applications.assert.assert_all.html"},
{"title": "SPAARC", "text": "Spaarc Pipeline for Automated Analysis and Radiomics Computing Extracts 165 standardized radiomic features from a region of interest in a medical image. It incorporates a comprehensive set of 8 convolutional filters, adhering to the guidelines established by the Image Biomarker Standardization Initiative - IBSI (Zwanenburg et al., 2020; Whybra et al., 2024). Feature Families The following Feature families and corresponding number of baseline features are implemented in SPAARC, (Whybra, 2021). Type Family Name Baseline Feat No. Shape-based Morphological 23 First-order Intensity-Based StatisticsIntensity HistogramIntensity-Volume Histogram 18237 Texture Grey Level Co-occurrence Matrix (GLCM)Grey Level Run Length Matrix (GLRLM)Grey Level Size Zone Matrix (GLSZM)Grey Level Distance Zone Matrix (GLDZM)Neighbourhood Grey Tone Difference Matrix (NGTDM)Neighbourhood Grey Level Dependence Matrix (NGLDM) 25161616516 Inputs Image Medical image for radiomic analysis Type: Image, Required, Single Mask Binary mask highlighting region(s) of interest in the medical image for radiomic analysis. Type: Mask, Optional, Single Outputs Output A table which contains the estimated radiomic feature values. Type: Table Interpolated Image Re-sampled image with new voxel spacing Type: Image Filtered Image Response map obtained from image filtering proceedure Type: Image Morphological Mask Region-of-Interest mask with the same grid as the image Type: Mask Intensity Mask Re-segmented mask based on image intensities of the unfiltered image. Type: Mask IVH Discretised ROI Discretized reigion-of-interest image utilised in estimating intensity volume histogram features. Type: Image IH and Texture Discretised ROI Discretized reigion-of-interest image utilised in estimating intensity histogram and texture features. Type: Image Settings Configure Load Config File Filepath Path to .json file with SPAARC configurations to be imported. Feature Families Morphological Boolean Extracts morphological features if selected Intensity Statistics Boolean Extracts Intensity-Based Statistics features if selected Intensity Histogram Boolean Extracts Intensity Histogram features if selected Intensity Volume Histogram Boolean Extracts Intensity-Volume Histogram features if selected GLCM Boolean Extracts Grey Level Co-occurrence Matrix features if selected GLRLM Boolean Extracts Grey Level Run Length Matrix features if selected GLSZM Boolean Extracts Grey Level Size Zone Matrix features if selected GLDZM Boolean Extracts Grey Level Distance Zone Matrix features if selected NGTDM Boolean Extracts Neighbourhood Grey Level Dependence Matrix features if selected NGLDM Boolean Extracts Neighbourhood Grey Tone Difference Matrix features if selected Interpolation Method Selection Specifies the interpolation algorithm to be applied. Values: None, Linear, Spline New Voxel Size [mm] Decimal Number Array Specifies the new grid spacing for image interpolation in millimeters. If three voxel dimensions are specified, a full 3D interpolation is performed. If two voxel dimensions are specified, interpolation is performed slice by slice. Round to Nearest Integer Boolean Rounds the interpolated image to the nearest integer values if selected. Convolutional Filters Dimensionality Selection Specifies the dimension of the convolutional filter. Values: 2D, 3D Filter Type Selection Specifies the type of convolutional filter to be applied to the image. Values: None, Mean, LoG, Laws, Gabor, Separable Wavelet, Non-Separable Wavelet, Riesz-Transform Padding Method Selection Specifies the method for imputing pixel values near the image boundaries for the convolutional filtering procedure. Values: Constant, Nearest, Wrap, Reflect Mean Filter Parameters Support [px] Integer Size of filter kernel defined in voxel units. LoG Filter Parameters Scale [mm] Decimal Number Standard deviation of the Gaussian defined in millimeters. Truncate Decimal Number Number of standard deviations at which truncate the filter. Laws Filter Parameters Kernel i Selection Laws 1D kernel to be applied to the ith direction. th direction.---> Values: Edges: 3, Edges: 5, Level: 3, Level: 5, Ripple: 3, Ripple: 5, Spots: 3, Spots: 5, Waves: 3, Waves: 5 Kernel j Selection Laws 1D kernel to be applied to the jth direction. th direction.---> Values: Edges: 3, Edges: 5, Level: 3, Level: 5, Ripple: 3, Ripple: 5, Spots: 3, Spots: 5, Waves: 3, Waves: 5 Kernel k Selection Laws 1D kernel to be applied to the kth direction. th direction.---> Values: Edges: 3, Edges: 5, Level: 3, Level: 5, Ripple: 3, Ripple: 5, Spots: 3, Spots: 5, Waves: 3, Waves: 5 Rotation Invariance Boolean Make fIltered image equivariance to global rotations and invariance to local rotations if selected. Pooling Selection Method for voxelwise orientation pooling over the elements of the equivariant representation. Values: Average, Max Energy Map Boolean Generates texture energy image if selected. Distance [px] Integer Chebyshev distance, utilized to create an energy image. Gabor Filter Parameters Wavelength [mm] Decimal Number Inverse of the frequency of the oscillations, defined in millimeters. Aspect Ratio Decimal Number Ellipticity of the filter support. Orientation [rad] Decimal Number Orientation of the filter in radians. Rotation Invariance Boolean Make fIltered image equivariance to global rotations and invariance to local rotations if selected. Pooling Selection Method for voxelwise orientation pooling over the elements of the equivariant representation. Values: Average, Max Separable Wavelet Filter Parameters Family Name Selection Separable wavelet filter family name. Values: Haar, Daubechies , Symlet, Coiflet, Biorthogonal, Reverse Biorthogonal, Discrete Meyer, Gaussian, Mexican Hat, Morlet, Complex Gaussian, Shannon, Frequency B-Spline, Complex Morlet Wavelet Selection Separable wavelet filter name. Values: db1, db2, db3, db4, db5, db6, db7, db8, db9, db10, db11, db12, db13, db14, db15, db16, db17, db18, db19, db20, db21, db22, db23, db24, db25, db26, db27, db28, db29, db30, db31, db32, db33, db34, db35, db36, db37, db38, sym2, sym3, sym4, sym5, sym6, sym7, sym8, sym9, sym10, sym11, sym12, sym13, sym14, sym15, sym16, sym17, sym18, sym19, sym20, coif1, coif2, coif3, coif4, coif5, coif6, coif7, coif8, coif9, coif10, coif11, coif12, coif13, coif14, coif15, coif16, coif17, bior1.1, bior1.3, bior1.5, bior2.2, bior2.4, bior2.6, bior2.8, bior3.1, bior3.3, bior3.5, bior3.7, bior3.9, bior4.4, bior5.5, bior6.8, rbio1.1, rbio1.3, rbio1.5, rbio2.2, rbio2.4, rbio2.6, rbio2.8, rbio3.1, rbio3.3, rbio3.5, rbio3.7, rbio3.9, rbio4.4, rbio5.5, rbio6.8, gaus1, gaus2, gaus3, gaus4, gaus5, gaus6, gaus7, gaus8, cgau1, cgau2, cgau3, cgau4, cgau5, cgau6, cgau7, cgau8 Kernel i Selection Separable wavelet 1D kernel to be applied to the ith direction. th direction.---> Values: High-pass, Low-pass Kernel j Selection Separable wavelet 1D kernel to be applied to the jth direction. th direction.---> Values: High-pass, Low-pass Kernel k Selection Separable wavelet 1D kernel to be applied to the kth direction. th direction.---> Values: High-pass, Low-pass Rotation Invariance Boolean Make fIltered image equivariance to global rotations and invariance to local rotations if selected. Pooling Selection Method for voxelwise orientation pooling over the elements of the equivariant representation. Values: Average, Max Decomposition Level Integer Wavelet decomposition level of the image. Non-Separable Wavelet Filter Parameters Wavelet Selection Non separable wavelet filter name. Values: Simoncelli Bmap Level Integer Band-pass response map level. Riesz-Transform Filter Parameters Applied Filter Selection Name of convolutional filter to be applied to the image prior to Riesz transformation. Values: Riesz-Transformed LoG, Riesz-Transformed Simoncelli Scale [mm] Decimal Number Standard deviation of the Gaussian defined in millimeters. Truncate Decimal Number Number of standard deviations at which truncate the filter. Bmap Level Integer Band-pass response map level. Order Integer Array Order of the Riesz-based image derivatives. Re-Segmentation Range Re-Segmentation Boolean Removes voxels outside a certain range from the intensity mask if selected. Range Decimal Number Array Specifies the lower and upper limits of the re-segmentation range. Voxel values not within these limits are exluded from the intensity mask. Outlier Filtering Boolean Removes voxels defined as outliers from the intensity mask if selected. Sigma Decimal Number Specifies the number of standard deviations from the mean of the intensities, used to define voxels as outliers. Intensity Volume Histogram Discretisation Binning Method Selection Specifies the intensity binning method for calculating intensity volume histogram features. Values: None, Fixed Bin Size, Fixed Bin Number Bin Size Decimal Number Specifies the fixed bin size for calculating intensity volume histogram features. Number of Bins Integer Specifies the fixed number of bins for the IVH discretisation procedure. Intensity Histogram and Texture Discretisation Binning Method Selection Specifies the intensity binning method for calculating intensity histogram and texture features. Values: Fixed Bin Size, Fixed Bin Number Bin Size Decimal Number Specifies the fixed bin size for calculating intensity histogram and texture features. Number of Bins Integer Specifies the fixed number of bins for calculating intensity histogram and texture features. Texture Analysis Analysis Type Selection Specifies directional texture matrices analysis dimension. Values: 2D, 3D, Both GLCM Aggregation Selection Specifies directional texture matrices aggregation method utilised GLCM features calculation. Values: Merged, Averaged, Both GLCM Distance Integer Specifies distance from central pixel utilised for GLCM features. GLRLM Aggregation Selection Specifies directional texture matrices aggregation method utilised GLRLM features calculation. Values: Merged, Averaged, Both GLRLM Distance Integer Specifies distance from central pixel utilised for GLRLM features. NGTDM Distance Integer Specifies distance from central pixel utilised for NGTDM features. NGLDM Distance Integer Specifies distance from central pixel utilised for NGLDM features. NGLDM Alpha Decimal Number Specifies a non-negative integer coarseness parameter for calculating NGLDM features. Export Folder Directory Path Output folder. Config File Name Text SPAARC configuration file name. Debug Boolean Exports SPAARC data to .mat file if selected. File Name Prefix Text Prefix for Debug Data File Name. Output Settings Merge Features Tables Boolean Merges output list into a single table if selected. Interpolated Image Boolean Returns the interpolated image as an output if selected. Filtered Image Boolean Returns the filtered image as an output if selected. Morphological Mask Boolean Returns the morphological mask as an output if selected. Intensity Mask Boolean Returns the intensity mask as an output if selected. IVH Discretised ROI Boolean Returns the discretised ROI, ustilised in calculating intensity volume histogram features, as an output if selected. IH and Texture Discretised ROI Boolean Returns the discretised ROI, ustilised in calculating intensity histogram and texture features, as an output if selected. See also References Zwanenburg, A., Vallières, M., Abdalah, M. A., Aerts, H. J., Andrearczyk, V., Apte, A., ... &amp; Löck, S. (2020). The image biomarker standardization initiative: standardized quantitative radiomics for high-throughput image-based phenotyping. Radiology, 295(2), 328-338. Whybra, P., Zwanenburg, A., Andrearczyk, V., Schaer, R., Apte, A. P., Ayotte, A., ... &amp; Depeursinge, A. (2024). The image biomarker standardization initiative: Standardized convolutional filters for reproducible radiomics and enhanced clinical insights. Radiology, 310(2), e231319. Whybra, P. (2021). Standardisation and optimisation of radiomic techniques for the identification of robust imaging biomarkers in oncology (Doctoral dissertation, Cardiff University). Keywords: radiomics, ibsi ", "tags": "", "url": "nodes.applications.radiomics.spaarc.html"},
{"title": "Test Secure Plugin", "text": "Test Secure Plugin Inputs Input Missing description. Type: **NodeIOImage, **, Required, Single See also Keywords: ", "tags": "", "url": "nodes.applications.test_secure_plugin.html"},
{"title": "Component", "text": "Component Settings DATA SettingsDataClickButton Missing description. See also Keywords: ", "tags": "", "url": "nodes.applications.component.html"},
{"title": "Component Output", "text": " Inputs Input Missing description. Type: Any, Required, Single Settings Title Text Missing description. See also Keywords: ", "tags": "", "url": "nodes.applications.component_output.html"},
{"title": "Component Input", "text": " Outputs Output Missing description. Type: NodeIOImage Settings Title Text Missing description. Type Selection Missing description. Values: Boolean Array, Boolean Array List, Column, Column List, Contour, Contour List, Image, Image List, List of Lists, Mask, Mask List, Numeric Array, Numeric Array List, Structure, Structure List, Table, Table List, Text, Text List See also Keywords: ", "tags": "", "url": "nodes.applications.component_input.html"},
{"title": "Workflow Setting", "text": "Workflow Setting Outputs Output Missing description. Type: NodeIOText Settings Configure Value Text Missing description. Name Text Missing description. Group Text Missing description. Description Text Missing description. Type of Setting Selection Missing description. Values: Boolean, Boolean Array, Complex, Complex Array, Integer, Integer Array, ND Array, File String, Path String, Float, Float Array, Selection, String, String Array, Text, Vector 3D Constraints Minimum Characters Integer Missing description. Maximum Characters Integer Missing description. See also Keywords: ", "tags": "", "url": "nodes.applications.workflow_setting.html"},
{"title": "Repeater", "text": "Repeater Inputs Input Missing description. Type: Any, Required, Single Settings Title Text Missing description. Type Selection Missing description. Values: Auto, Contour, Table, Column, Text, Numeric Array, Boolean Array, Structure, Mask, Image, Contour List, Table List, Column List, Text List, Structure List, List of Lists, Mask List, Image List, Numeric Array List, Boolean Array List Wireless Boolean Missing description. See also Keywords: ", "tags": "", "url": "nodes.applications.repeater.html"},
{"title": "ROI from Visualizer", "text": "ROI Import a ROI from the visualizer. Outputs ROI 1: &ldquo;Image Name&rdquo; Output ROI. Type: Mask Settings Name Text Name of the ROI. ROI Definition HeroImage Binary string representation of the ROI. See also Keywords: ", "tags": "", "url": "nodes.drag-and-drop_nodes.roi_from_visualizer.html"},
{"title": "Study Link", "text": "Study Link Create a structure that defines the database parameters of a study in the database. Outputs Out A structure that defines the database parameters of a study in the database. Type: Struct Settings Database Text The name of the database. Study ID Text The Study ID of the study. See also Keywords: ", "tags": "", "url": "nodes.drag-and-drop_nodes.study_link.html"},
{"title": "Database Import", "text": "DB Import Loads data from a local or remote database. This node is used to retrieve previously stored datasets, such as images, masks or tables, for processing within the workflow. It supports usingt the legacy DICOM load function as well as the updated DICOM load via the “Method” setting. Outputs Output Data loaded from the database. Type: Image, Mask, Contour, Table, Column, Numeric Array, Boolean Array, Text, Structure Settings Configure Database Text Name of the database to load the data from. Data ID Integer Numeric identifier used to locate the dataset in the database. Each dataset has a unique ID. Subtitle Text Optional subtitle or description associated with the data. Method Selection Selects the loading strategy used. Legacy: Use the original DICOM algorithm for reading DICOM data. Beta: Uses a newer DICOM method that supports a wider range of modalities and DICOM formats. This is still in beta. Values: Legacy, Beta Linked Data Edit Outputs Button Edit the output of linked data, such as Contours or Transforms. See also Keywords: database, import, load, retrieve, DICOM, storage ", "tags": "", "url": "nodes.drag-and-drop_nodes.database_import.html"},
{"title": "2023.1.1", "text": "2023.1.1 What's Changed New Features: Added snapping for wires, and vertical and horizontal alignment. Align input and outputs buttons now cycle through every connection. Now it's really easy to keep the workflows clean and tidy! Column index now displayed in table viewer New Node: Label Map to Mask New Node: Create Numeric Meshgrid New Node: Export Nrrd. Updates Morphology nodes now handle both images and masks Removed limit of 6 layers in Visualize node Support for import json metadata when importing Nifti Changed default name of output histogram table Added support for drag-and-drop ice.gz, .hdata.gz and hxdata.gz to workflow Allow negative indices in Split Numeric Array. Like in e.g. numpy, -1 represents the last element, and -2 the second to last etc. Exported nifti compressed by default Elastix output image is now optional. Disable the output if you only want the transform, and want to save memory by not returning the image to the workflow. Force transform to run exclusively. This will prevent crashes caused by non-thread safe functions in the ITK library. All object attributes in the python library are now identical to the corresponding properties in Hero. For example, the &ldquo;Position&rdquo; property of an image in Hero had the corresponding attribute &ldquo;position&rdquo; in the python library, to conform to the naming conventions of PEP 8. Now the properties and attributes are identical. Bug fixes Several small fixes in the plugin editor Wrong output type in Apply Transform Fixed bug in settings in Geometric Shape node Fixed bug when applying deformation field &ldquo;Name&rdquo; field exposed for wrong input types in save to database node Export nodes now obey the compression setting Visualization &ldquo;sag&rdquo; orientation spelling has been corrected. Fixed scrolling issue in visualizer. N4 Bias field correction now handles list inputs correctly RTSTRUCT export of oblique frames of references are now supported. Files without file extension are now visible in the Open File dialogue window Struct name from plugin output is now correct Empty fields in Create Structure node now prevent the node from executing DVH calculates Mean correctly Gamma index now handles lists correctly Python versions Python version 3.10.9 included Compatible with heropytools version 1.2.2 ", "tags": "", "url": "changelog.2023.1.1.html"},
{"title": "2024.1.0", "text": "2024.1.0 What's Changed New Features MRI emulator Hero DB reader for miqa. New nodes: Union, Intersection and Unique micronodes New node: &ldquo;Import JSON&rdquo; which returns a struct from a JSON file. Updates Enable changelog button Small visualizer value label and performance updaes Enable Expose settings in statistics nodes Disabled ROI statistics in visualizer due to erroneous behaviour because of recent updates. This will be re-added when ready. Rename [deg] to [°] in settings Update NodeVisualizeRGB: RGB Dimension → RGB Channel' Apply mask now has an &ldquo;Invert Mask&rdquo; setting option Workflow upgrade notification is now extensive, describing any nodes that have been updated when an old workflow is opened. &ldquo;Create Columns&rdquo; now accepts a list of numeric arrays and returns a list of columns. Normalize and Z-normalize handles int and complex correctly, and ignore NaN values. Bug fixes Scrolling visualizer bug fix Fix graphics rescaling issue for high-resolution screens Some nodes retained a fixed input type when copied, although the original node allowed multiple input types. IsNaN, IsInf, IsFinite returned image output type. Read nifti with metadata now works for .json-files Save to Database now correctly names data Notes can now be selected Random distribution nodes Poisson, Laplace, Chi-2, Gamma and Log-normal returns correct type Python versions Python version 3.10.9 included Compatible with heropytools version 1.3.0 ", "tags": "", "url": "changelog.2024.1.0.html"},
{"title": "2024.2.0", "text": "What's Changed New Features Batching: apply a workflow to any data in a database. Components: the successor to MICE &ldquo;groups&rdquo;. Create a new node from any existing nodes in your workflow. Node: Added Path Length Relative path support: save or load data in a workflow relative to the location of the workflow on disk. Export contours as STL: a file format used for 3D printing and (CAD) Updates View menu has been reorganized Apply Transform node has been updated. You can now select the transform direction when applying a transform to coordinates and contours Bug fixes On rare occasions, DVH would not reset value of allocated memory, leading to small errors in dose DICOM dose export now supports single slice dose matrices. Added support for space in windows user names. Fixed Elastix node output channel descriptions Python versions Python version 3.10.9 included Compatible with heropytools version 1.3.3 ", "tags": "", "url": "changelog.2024.2.0.html"},
{"title": "Shortcuts", "text": "Shortcuts Hero Imaging supports keyboard shortcuts and drag-drop functionality operating in, and between windows. Workflow panel Space: Runs the entire workflow. Ctrl + Left-click: Make a copy of the selected node(s). Ctrl + Alt + Left-click: Make a copy of the selected node(s) with their input connections. Delete / Backspace: Remove selected node(s). Right-click: Shows quick actions to perform on the selected node(s). Ctrl + Alt + C: Crete a component from selected nodes. Image preview window Mouse-scroll: Moves between image slices Shift + Mouse-scroll: Moves between volumes in the selected channel. Ctrl + Mouse-scroll: Zooms in/out on the selected image. Ctrl + Left-click + Pan: Pans to the specified part of the image. Database control Dragging item(s) from database to the workflow imports the selected data in the appropriate format. Dragging item from the database to the visualizer allows quick visualization if the dragged item is an image. Dragging study from database to the workflow creates a database study link, that can be used as a target when saving to the database. Visualizer x/y/z/3: Selects Sagittal, Coronal, Axial, 3D view, respectively. 2D view Mouse-scroll: Moves between image slices Shift + Mouse-scroll: Moves between volumes in the selected channel. Ctrl + Mouse-scroll: Zooms in/out on the selected image. Ctrl + Left-click + Pan: Pans to the specified part of the image. 3D view Mouse-scroll: Rotates the image volume. Ctrl + 1-6: Selects preset views. ", "tags": "", "url": "articles.shortcuts.html"},
{"title": "Relative Paths", "text": "Using Relative Paths in Hero When working with file systems, paths are used to locate files and directories. These paths can be absolute or relative. Understanding relative paths can make it easier to work with files without needing to know the full absolute path. In particular, placing files relative to the workflow file makes it easier to share data and workflows without the risk of having broken paths to data. What is a Relative Path in Hero? A relative path specifies the location of a file or directory relative to the current directory where your workflow is stored. This is different from an absolute path, which specifies the complete location starting from the root of the file system. For example: Absolute path: C:/Users/HeroUser/Documents/diff_analysis/data/diff1000.nii.gz Relative path: data/diff1000.nii.gz In the relative path example, data/diff1000.nii.gz refers to the diff1000.nii.gz file located inside the data directory. You can use this relative path in Hero if your workflow file is saved in the C:/Users/HeroUser/Documents/diff_analysis folder. Using ./ in Relative Paths The ./ symbol represents the current directory. In the example above you can also write the relative path as ./data/diff1000.nii.gz. Example: When importing data from file, relative paths are very convenient. The picture below shows the settings for a Import Nifti node when the data is placed relative to the workflow. Using Just the Last Part of the Path If you are referencing a file in the same directory you have your workflow in, you can simply use the last part of the path—the file or folder name. Example: If the nifti file in the example above is in the same directory as the workflow, you can use diff1000.nii.gz for your path setting. No need to specify the full or even the relative path if the file is in the current directory. Moving Around the Folder Tree: . and .. To navigate between different directories in a relative manner, you can use two important symbols: . and ... . refers to the current directory. .. refers to the parent directory (the directory one level up). Using .. to Move Up a Directory The .. symbol allows you to move up one level in the directory tree. If you are in a subdirectory and want to reference something in the parent directory, use .. in your path. Example: Let's say your workflow is in C:/Users/HeroUser/Documents/diff_analysis and want to access the file C:/Users/HeroUser/Documents/diff1000.nii.gz. You would use: In this case: .. takes you up to C:/Users/HeroUser/Documents diff1000.nii.gz specifies the file you want to access. Going Multiple Levels Up You can chain .. to move up multiple levels in the folder tree. Each .. moves you up one level. Example: If your workflow is in C:/Users/HeroUser/Documents/diff_analysis and want to access a file in C:/Users/HeroUser, you can write: ../../diff1000.nii.gz The first .. moves up from diff_analysis to Documents. The second .. moves up from Documents to HeroUser. Summary of Common Path Symbols: . : Refers to the current directory. .. : Refers to the parent directory (one level up). ./&lt;relative_path&gt; : Refers to a file or directory in the current directory. &lt;relative_path&gt; : Refers to a file or directory in the current directory. ../&lt;relative_path&gt; : Moves up to the parent directory and then accesses a file or folder. Support All nodes that imports or exports from and to files support relative paths. Note that your workflow must be saved for relative paths to be meaningful and work. ", "tags": "", "url": "articles.relative_paths.html"},
]};